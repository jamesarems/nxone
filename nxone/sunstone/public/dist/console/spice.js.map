{
  "version": 3,
  "sources": [
    "../../bower_components/almond/almond.js",
    "../../bower_components/spice-html5/spiceconn.js",
    "../../bower_components/spice-html5/spicearraybuffer.js",
    "../../bower_components/spice-html5/enums.js",
    "../../bower_components/spice-html5/atKeynames.js",
    "../../bower_components/spice-html5/utils.js",
    "../../bower_components/spice-html5/png.js",
    "../../bower_components/spice-html5/lz.js",
    "../../bower_components/spice-html5/quic.js",
    "../../bower_components/spice-html5/bitmap.js",
    "../../bower_components/spice-html5/spicedataview.js",
    "../../bower_components/spice-html5/spicetype.js",
    "../../bower_components/spice-html5/spicemsg.js",
    "../../bower_components/spice-html5/wire.js",
    "../../bower_components/spice-html5/display.js",
    "../../bower_components/spice-html5/inputs.js",
    "../../bower_components/spice-html5/webm.js",
    "../../bower_components/spice-html5/playback.js",
    "../../bower_components/spice-html5/simulatecursor.js",
    "../../bower_components/spice-html5/cursor.js",
    "../../bower_components/spice-html5/thirdparty/jsbn.js",
    "../../bower_components/spice-html5/thirdparty/rsa.js",
    "../../bower_components/spice-html5/thirdparty/prng4.js",
    "../../bower_components/spice-html5/thirdparty/rng.js",
    "../../bower_components/spice-html5/thirdparty/sha1.js",
    "../../bower_components/spice-html5/ticket.js",
    "../../bower_components/spice-html5/resize.js",
    "../../bower_components/spice-html5/filexfer.js",
    "../../bower_components/spice-html5/main.js",
    "spice.js"
  ],
  "names": [],
  "mappingsjbrdnzzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtdtrzizjhlrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC7VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC7PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "console/spice.js",
  "sourcesContent": [
    "/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"almond\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2012 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*----------------------------------------------------------------------------\n**  SpiceConn\n**      This is the base Javascript class for establishing and\n**  managing a connection to a Spice Server.\n**  It is used to provide core functionality to the Spice main,\n**  display, inputs, and cursor channels.  See main.js for \n**  usage.\n**--------------------------------------------------------------------------*/\nfunction SpiceConn(o)\n{\n    if (o === undefined || o.uri === undefined || ! o.uri)\n        throw new Error(\"You must specify a uri\");\n\n    this.ws = new WebSocket(o.uri, 'binary');\n\n    if (! this.ws.binaryType)\n        throw new Error(\"WebSocket doesn't support binaryType.  Try a different browser.\");\n\n    this.connection_id = o.connection_id !== undefined ? o.connection_id : 0;\n    this.type = o.type !== undefined ? o.type : SPICE_CHANNEL_MAIN;\n    this.chan_id = o.chan_id !== undefined ? o.chan_id : 0;\n    if (o.parent !== undefined)\n    {\n        this.parent = o.parent;\n        this.message_id = o.parent.message_id;\n        this.password = o.parent.password;\n    }\n    if (o.screen_id !== undefined)\n        this.screen_id = o.screen_id;\n    if (o.dump_id !== undefined)\n        this.dump_id = o.dump_id;\n    if (o.message_id !== undefined)\n        this.message_id = o.message_id;\n    if (o.password !== undefined)\n        this.password = o.password;\n    if (o.onerror !== undefined)\n        this.onerror = o.onerror;\n    if (o.onsuccess !== undefined)\n        this.onsuccess = o.onsuccess;\n    if (o.onagent !== undefined)\n        this.onagent = o.onagent;\n\n    this.state = \"connecting\";\n    this.ws.parent = this;\n    this.wire_reader = new SpiceWireReader(this, this.process_inbound);\n    this.messages_sent = 0;\n    this.warnings = [];\n\n    this.ws.addEventListener('open', function(e) {\n        DEBUG > 0 && console.log(\">> WebSockets.onopen\");\n        DEBUG > 0 && console.log(\"id \" + this.parent.connection_id +\"; type \" + this.parent.type);\n\n        /***********************************************************************\n        **          WHERE IT ALL REALLY BEGINS\n        ***********************************************************************/\n        this.parent.send_hdr();\n        this.parent.wire_reader.request(SpiceLinkHeader.prototype.buffer_size());\n        this.parent.state = \"start\";\n    });\n    this.ws.addEventListener('error', function(e) {\n        if ('url' in e.target) {\n            this.parent.log_err(\"WebSocket error: Can't connect to websocket on URL: \" + e.target.url);\n        }\n        this.parent.report_error(e);\n    });\n    this.ws.addEventListener('close', function(e) {\n        DEBUG > 0 && console.log(\">> WebSockets.onclose\");\n        DEBUG > 0 && console.log(\"id \" + this.parent.connection_id +\"; type \" + this.parent.type);\n        DEBUG > 0 && console.log(e);\n        if (this.parent.state != \"closing\" && this.parent.state != \"error\" && this.parent.onerror !== undefined)\n        {\n            var e;\n            if (this.parent.state == \"connecting\")\n                e = new Error(\"Connection refused.\");\n            else if (this.parent.state == \"start\" || this.parent.state == \"link\")\n                e = new Error(\"Unexpected protocol mismatch.\");\n            else if (this.parent.state == \"ticket\")\n                e = new Error(\"Bad password.\");\n            else\n                e = new Error(\"Unexpected close while \" + this.parent.state);\n\n            this.parent.onerror(e);\n            this.parent.log_err(e.toString());\n        }\n    });\n\n    if (this.ws.readyState == 2 || this.ws.readyState == 3)\n        throw new Error(\"Unable to connect to \" + o.uri);\n\n    this.timeout = window.setTimeout(spiceconn_timeout, SPICE_CONNECT_TIMEOUT, this);\n}\n\nSpiceConn.prototype =\n{\n    send_hdr : function ()\n    {\n        var hdr = new SpiceLinkHeader;\n        var msg = new SpiceLinkMess;\n\n        msg.connection_id = this.connection_id;\n        msg.channel_type = this.type;\n        // FIXME - we're not setting a channel_id...\n        msg.common_caps.push(\n            (1 << SPICE_COMMON_CAP_PROTOCOL_AUTH_SELECTION) |\n            (1 << SPICE_COMMON_CAP_MINI_HEADER)\n            );\n\n        if (msg.channel_type == SPICE_CHANNEL_PLAYBACK)\n            msg.channel_caps.push(\n                (1 << SPICE_PLAYBACK_CAP_OPUS)\n            );\n        else if (msg.channel_type == SPICE_CHANNEL_MAIN)\n            msg.channel_caps.push(\n                (1 << SPICE_MAIN_CAP_AGENT_CONNECTED_TOKENS)\n            );\n\n        hdr.size = msg.buffer_size();\n\n        var mb = new ArrayBuffer(hdr.buffer_size() + msg.buffer_size());\n        hdr.to_buffer(mb);\n        msg.to_buffer(mb, hdr.buffer_size());\n\n        DEBUG > 1 && console.log(\"Sending header:\");\n        DEBUG > 2 && hexdump_buffer(mb);\n        this.ws.send(mb);\n    },\n\n    send_ticket: function(ticket)\n    {\n        var hdr = new SpiceLinkAuthTicket();\n        hdr.auth_mechanism = SPICE_COMMON_CAP_AUTH_SPICE;\n        // FIXME - we need to implement RSA to make this work right\n        hdr.encrypted_data = ticket;\n        var mb = new ArrayBuffer(hdr.buffer_size());\n\n        hdr.to_buffer(mb);\n        DEBUG > 1 && console.log(\"Sending ticket:\");\n        DEBUG > 2 && hexdump_buffer(mb);\n        this.ws.send(mb);\n    },\n\n    send_msg: function(msg)\n    {\n        var mb = new ArrayBuffer(msg.buffer_size());\n        msg.to_buffer(mb);\n        this.messages_sent++;\n        DEBUG > 0 && console.log(\">> hdr \" + this.channel_type() + \" type \" + msg.type + \" size \" + mb.byteLength);\n        DEBUG > 2 && hexdump_buffer(mb);\n        this.ws.send(mb);\n    },\n\n    process_inbound: function(mb, saved_header)\n    {\n        DEBUG > 2 && console.log(this.type + \": processing message of size \" + mb.byteLength + \"; state is \" + this.state);\n        if (this.state == \"ready\")\n        {\n            if (saved_header == undefined)\n            {\n                var msg = new SpiceMiniData(mb);\n\n                if (msg.type > 500)\n                {\n                    alert(\"Something has gone very wrong; we think we have message of type \" + msg.type);\n                    debugger;\n                }\n\n                if (msg.size == 0)\n                {\n                    this.process_message(msg);\n                    this.wire_reader.request(SpiceMiniData.prototype.buffer_size());\n                }\n                else\n                {\n                    this.wire_reader.request(msg.size);\n                    this.wire_reader.save_header(msg);\n                }\n            }\n            else\n            {\n                saved_header.data = mb;\n                this.process_message(saved_header);\n                this.wire_reader.request(SpiceMiniData.prototype.buffer_size());\n                this.wire_reader.save_header(undefined);\n            }\n        }\n\n        else if (this.state == \"start\")\n        {\n            this.reply_hdr = new SpiceLinkHeader(mb);\n            if (this.reply_hdr.magic != SPICE_MAGIC)\n            {\n                this.state = \"error\";\n                var e = new Error('Error: magic mismatch: ' + this.reply_hdr.magic);\n                this.report_error(e);\n            }\n            else\n            {\n                // FIXME - Determine major/minor version requirements\n                this.wire_reader.request(this.reply_hdr.size);\n                this.state = \"link\";\n            }\n        }\n\n        else if (this.state == \"link\")\n        {\n            this.reply_link = new SpiceLinkReply(mb);\n             // FIXME - Screen the caps - require minihdr at least, right?\n            if (this.reply_link.error)\n            {\n                this.state = \"error\";\n                var e = new Error('Error: reply link error ' + this.reply_link.error);\n                this.report_error(e);\n            }\n            else\n            {\n                this.send_ticket(rsa_encrypt(this.reply_link.pub_key, this.password + String.fromCharCode(0)));\n                this.state = \"ticket\";\n                this.wire_reader.request(SpiceLinkAuthReply.prototype.buffer_size());\n            }\n        }\n\n        else if (this.state == \"ticket\")\n        {\n            this.auth_reply = new SpiceLinkAuthReply(mb);\n            if (this.auth_reply.auth_code == SPICE_LINK_ERR_OK)\n            {\n                DEBUG > 0 && console.log(this.type + ': Connected');\n\n                if (this.type == SPICE_CHANNEL_DISPLAY)\n                {\n                    // FIXME - pixmap and glz dictionary config info?\n                    var dinit = new SpiceMsgcDisplayInit();\n                    var reply = new SpiceMiniData();\n                    reply.build_msg(SPICE_MSGC_DISPLAY_INIT, dinit);\n                    DEBUG > 0 && console.log(\"Request display init\");\n                    this.send_msg(reply);\n                }\n                this.state = \"ready\";\n                this.wire_reader.request(SpiceMiniData.prototype.buffer_size());\n                if (this.timeout)\n                {\n                    window.clearTimeout(this.timeout);\n                    delete this.timeout;\n                }\n            }\n            else\n            {\n                this.state = \"error\";\n                if (this.auth_reply.auth_code == SPICE_LINK_ERR_PERMISSION_DENIED)\n                {\n                    var e = new Error(\"Permission denied.\");\n                }\n                else\n                {\n                    var e = new Error(\"Unexpected link error \" + this.auth_reply.auth_code);\n                }\n                this.report_error(e);\n            }\n        }\n    },\n\n    process_common_messages : function(msg)\n    {\n        if (msg.type == SPICE_MSG_SET_ACK)\n        {\n            var ack = new SpiceMsgSetAck(msg.data);\n            // FIXME - what to do with generation?\n            this.ack_window = ack.window;\n            DEBUG > 1 && console.log(this.type + \": set ack to \" + ack.window);\n            this.msgs_until_ack = this.ack_window;\n            var ackack = new SpiceMsgcAckSync(ack);\n            var reply = new SpiceMiniData();\n            reply.build_msg(SPICE_MSGC_ACK_SYNC, ackack);\n            this.send_msg(reply);\n            return true;\n        }\n\n        if (msg.type == SPICE_MSG_PING)\n        {\n            DEBUG > 1 && console.log(\"ping!\");\n            var pong = new SpiceMiniData;\n            pong.type = SPICE_MSGC_PONG;\n            if (msg.data)\n            {\n                pong.data = msg.data.slice(0, 12);\n            }\n            pong.size = pong.buffer_size();\n            this.send_msg(pong);\n            return true;\n        }\n\n        if (msg.type == SPICE_MSG_NOTIFY)\n        {\n            // FIXME - Visibility + what\n            var notify = new SpiceMsgNotify(msg.data);\n            if (notify.severity == SPICE_NOTIFY_SEVERITY_ERROR)\n                this.log_err(notify.message);\n            else if (notify.severity == SPICE_NOTIFY_SEVERITY_WARN )\n                this.log_warn(notify.message);\n            else\n                this.log_info(notify.message);\n            return true;\n        }\n\n        return false;\n\n    },\n\n    process_message: function(msg)\n    {\n        var rc;\n        DEBUG > 0 && console.log(\"<< hdr \" + this.channel_type() + \" type \" + msg.type + \" size \" + (msg.data && msg.data.byteLength));\n        rc = this.process_common_messages(msg);\n        if (! rc)\n        {\n            if (this.process_channel_message)\n            {\n                rc = this.process_channel_message(msg);\n                if (! rc)\n                    this.log_warn(this.type + \": Unknown message type \" + msg.type + \"!\");\n            }\n            else\n                this.log_err(this.type + \": No message handlers for this channel; message \" + msg.type);\n        }\n\n        if (this.msgs_until_ack !== undefined && this.ack_window)\n        {\n            this.msgs_until_ack--;\n            if (this.msgs_until_ack <= 0)\n            {\n                this.msgs_until_ack = this.ack_window;\n                var ack = new SpiceMiniData();\n                ack.type = SPICE_MSGC_ACK;\n                this.send_msg(ack);\n                DEBUG > 1 && console.log(this.type + \": sent ack\");\n            }\n        }\n\n        return rc;\n    },\n\n    channel_type: function()\n    {\n        if (this.type == SPICE_CHANNEL_MAIN)\n            return \"main\";\n        else if (this.type == SPICE_CHANNEL_DISPLAY)\n            return \"display\";\n        else if (this.type == SPICE_CHANNEL_INPUTS)\n            return \"inputs\";\n        else if (this.type == SPICE_CHANNEL_CURSOR)\n            return \"cursor\";\n        return \"unknown-\" + this.type;\n\n    },\n\n    log_info: function()\n    {\n        var msg = Array.prototype.join.call(arguments, \" \");\n        console.log(msg);\n        if (this.message_id)\n        {\n            var p = document.createElement(\"p\");\n            p.appendChild(document.createTextNode(msg));\n            p.className += \"spice-message-info\";\n            document.getElementById(this.message_id).appendChild(p);\n        }\n    },\n\n    log_warn: function()\n    {\n        var msg = Array.prototype.join.call(arguments, \" \");\n        console.log(\"WARNING: \" + msg);\n        if (this.message_id)\n        {\n            var p = document.createElement(\"p\");\n            p.appendChild(document.createTextNode(msg));\n            p.className += \"spice-message-warning\";\n            document.getElementById(this.message_id).appendChild(p);\n        }\n    },\n\n    log_err: function()\n    {\n        var msg = Array.prototype.join.call(arguments, \" \");\n        console.log(\"ERROR: \" + msg);\n        if (this.message_id)\n        {\n            var p = document.createElement(\"p\");\n            p.appendChild(document.createTextNode(msg));\n            p.className += \"spice-message-error\";\n            document.getElementById(this.message_id).appendChild(p);\n        }\n    },\n\n    known_unimplemented: function(type, msg)\n    {\n        if ( (!this.warnings[type]) || DEBUG > 1)\n        {\n            var str = \"\";\n            if (DEBUG <= 1)\n                str = \" [ further notices suppressed ]\";\n            this.log_warn(\"Unimplemented function \" + type + \"(\" + msg + \")\" + str);\n            this.warnings[type] = true;\n        }\n    },\n\n    report_error: function(e)\n    {\n        this.log_err(e.toString());\n        if (this.onerror != undefined)\n            this.onerror(e);\n        else\n            throw(e);\n    },\n\n    report_success: function(m)\n    {\n        if (this.onsuccess != undefined)\n            this.onsuccess(m);\n    },\n\n    cleanup: function()\n    {\n        if (this.timeout)\n        {\n            window.clearTimeout(this.timeout);\n            delete this.timeout;\n        }\n        if (this.ws)\n        {\n            this.ws.close();\n            this.ws = undefined;\n        }\n    },\n\n    handle_timeout: function()\n    {\n        var e = new Error(\"Connection timed out.\");\n        this.report_error(e);\n    },\n}\n\nfunction spiceconn_timeout(sc)\n{\n    SpiceConn.prototype.handle_timeout.call(sc);\n}\n;\ndefine(\"spice-spiceconn\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2012 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*----------------------------------------------------------------------------\n**  SpiceArrayBufferSlice\n**    This function is a work around for IE 10, which has no slice()\n**    method in it's subclass.\n**--------------------------------------------------------------------------*/\nfunction SpiceArrayBufferSlice(start, end)\n{\n    start = start || 0;\n    end = end || this.byteLength;\n    if (end < 0)\n        end = this.byteLength + end;\n    if (start < 0)\n        start = this.byteLength + start;\n    if (start < 0)\n        start = 0;\n    if (end < 0)\n        end = 0;\n    if (end > this.byteLength)\n        end = this.byteLength;\n    if (start > end)\n        start = end;\n\n    var ret = new ArrayBuffer(end - start);\n    var in1 = new Uint8Array(this, start, end - start);\n    var out = new Uint8Array(ret);\n    var i;\n\n    for (i = 0; i < end - start; i++)\n        out[i] = in1[i];\n\n    return ret;\n}\n\nif (! ArrayBuffer.prototype.slice)\n{\n    ArrayBuffer.prototype.slice = SpiceArrayBufferSlice;\n    console.log(\"WARNING:  ArrayBuffer.slice() is missing; we are extending ArrayBuffer to compensate\");\n}\n;\ndefine(\"spice-spicearraybuffer\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2012 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n/*----------------------------------------------------------------------------\n**  enums.js\n**      'constants' for Spice\n**--------------------------------------------------------------------------*/\nvar SPICE_MAGIC         = \"REDQ\";\nvar SPICE_VERSION_MAJOR = 2;\nvar SPICE_VERSION_MINOR = 2;\n\nvar SPICE_CONNECT_TIMEOUT = (30 * 1000);\n\nvar SPICE_COMMON_CAP_PROTOCOL_AUTH_SELECTION = 0;\nvar SPICE_COMMON_CAP_AUTH_SPICE              = 1;\nvar SPICE_COMMON_CAP_AUTH_SASL               = 2;\nvar SPICE_COMMON_CAP_MINI_HEADER             = 3;\n\nvar SPICE_TICKET_KEY_PAIR_LENGTH             = 1024;\nvar SPICE_TICKET_PUBKEY_BYTES                = (SPICE_TICKET_KEY_PAIR_LENGTH / 8 + 34);\n\nvar SPICE_LINK_ERR_OK                        = 0,\n    SPICE_LINK_ERR_ERROR                     = 1,\n    SPICE_LINK_ERR_INVALID_MAGIC             = 2,\n    SPICE_LINK_ERR_INVALID_DATA              = 3,\n    SPICE_LINK_ERR_VERSION_MISMATCH          = 4,\n    SPICE_LINK_ERR_NEED_SECURED              = 5,\n    SPICE_LINK_ERR_NEED_UNSECURED            = 6,\n    SPICE_LINK_ERR_PERMISSION_DENIED         = 7,\n    SPICE_LINK_ERR_BAD_CONNECTION_ID         = 8,\n    SPICE_LINK_ERR_CHANNEL_NOT_AVAILABLE     = 9;\n\nvar SPICE_MSG_MIGRATE                   = 1;\nvar SPICE_MSG_MIGRATE_DATA              = 2;\nvar SPICE_MSG_SET_ACK                   = 3;\nvar SPICE_MSG_PING                      = 4;\nvar SPICE_MSG_WAIT_FOR_CHANNELS         = 5;\nvar SPICE_MSG_DISCONNECTING             = 6;\nvar SPICE_MSG_NOTIFY                    = 7;\nvar SPICE_MSG_LIST                      = 8;\n\nvar SPICE_MSG_MAIN_MIGRATE_BEGIN        = 101;\nvar SPICE_MSG_MAIN_MIGRATE_CANCEL       = 102;\nvar SPICE_MSG_MAIN_INIT                 = 103;\nvar SPICE_MSG_MAIN_CHANNELS_LIST        = 104;\nvar SPICE_MSG_MAIN_MOUSE_MODE           = 105;\nvar SPICE_MSG_MAIN_MULTI_MEDIA_TIME     = 106;\nvar SPICE_MSG_MAIN_AGENT_CONNECTED      = 107;\nvar SPICE_MSG_MAIN_AGENT_DISCONNECTED   = 108;\nvar SPICE_MSG_MAIN_AGENT_DATA           = 109;\nvar SPICE_MSG_MAIN_AGENT_TOKEN          = 110;\nvar SPICE_MSG_MAIN_MIGRATE_SWITCH_HOST  = 111;\nvar SPICE_MSG_MAIN_MIGRATE_END          = 112;\nvar SPICE_MSG_MAIN_NAME                 = 113;\nvar SPICE_MSG_MAIN_UUID                 = 114;\nvar SPICE_MSG_MAIN_AGENT_CONNECTED_TOKENS = 115;\nvar SPICE_MSG_MAIN_MIGRATE_BEGIN_SEAMLESS = 116;\nvar SPICE_MSG_MAIN_MIGRATE_DST_SEAMLESS_ACK = 117;\nvar SPICE_MSG_MAIN_MIGRATE_DST_SEAMLESS_NACK = 118;\nvar SPICE_MSG_END_MAIN                  = 119;\n\n\n\nvar SPICE_MSGC_ACK_SYNC                 = 1;\nvar SPICE_MSGC_ACK                      = 2;\nvar SPICE_MSGC_PONG                     = 3;\nvar SPICE_MSGC_MIGRATE_FLUSH_MARK       = 4;\nvar SPICE_MSGC_MIGRATE_DATA             = 5;\nvar SPICE_MSGC_DISCONNECTING            = 6;\n\n\nvar SPICE_MSGC_MAIN_CLIENT_INFO         = 101;\nvar SPICE_MSGC_MAIN_MIGRATE_CONNECTED   = 102;\nvar SPICE_MSGC_MAIN_MIGRATE_CONNECT_ERROR = 103;\nvar SPICE_MSGC_MAIN_ATTACH_CHANNELS     = 104;\nvar SPICE_MSGC_MAIN_MOUSE_MODE_REQUEST  = 105;\nvar SPICE_MSGC_MAIN_AGENT_START         = 106;\nvar SPICE_MSGC_MAIN_AGENT_DATA          = 107;\nvar SPICE_MSGC_MAIN_AGENT_TOKEN         = 108;\nvar SPICE_MSGC_MAIN_MIGRATE_END         = 109;\nvar SPICE_MSGC_END_MAIN                 = 110;\n\nvar SPICE_MSG_DISPLAY_MODE              = 101;\nvar SPICE_MSG_DISPLAY_MARK              = 102;\nvar SPICE_MSG_DISPLAY_RESET             = 103;\nvar SPICE_MSG_DISPLAY_COPY_BITS         = 104;\nvar SPICE_MSG_DISPLAY_INVAL_LIST        = 105;\nvar SPICE_MSG_DISPLAY_INVAL_ALL_PIXMAPS = 106;\nvar SPICE_MSG_DISPLAY_INVAL_PALETTE     = 107;\nvar SPICE_MSG_DISPLAY_INVAL_ALL_PALETTES= 108;\n\nvar SPICE_MSG_DISPLAY_STREAM_CREATE     = 122;\nvar SPICE_MSG_DISPLAY_STREAM_DATA       = 123;\nvar SPICE_MSG_DISPLAY_STREAM_CLIP       = 124;\nvar SPICE_MSG_DISPLAY_STREAM_DESTROY    = 125;\nvar SPICE_MSG_DISPLAY_STREAM_DESTROY_ALL= 126;\n\nvar SPICE_MSG_DISPLAY_DRAW_FILL         = 302;\nvar SPICE_MSG_DISPLAY_DRAW_OPAQUE       = 303;\nvar SPICE_MSG_DISPLAY_DRAW_COPY         = 304;\nvar SPICE_MSG_DISPLAY_DRAW_BLEND        = 305;\nvar SPICE_MSG_DISPLAY_DRAW_BLACKNESS    = 306;\nvar SPICE_MSG_DISPLAY_DRAW_WHITENESS    = 307;\nvar SPICE_MSG_DISPLAY_DRAW_INVERS       = 308;\nvar SPICE_MSG_DISPLAY_DRAW_ROP3         = 309;\nvar SPICE_MSG_DISPLAY_DRAW_STROKE       = 310;\nvar SPICE_MSG_DISPLAY_DRAW_TEXT         = 311;\nvar SPICE_MSG_DISPLAY_DRAW_TRANSPARENT  = 312;\nvar SPICE_MSG_DISPLAY_DRAW_ALPHA_BLEND  = 313;\nvar SPICE_MSG_DISPLAY_SURFACE_CREATE    = 314;\nvar SPICE_MSG_DISPLAY_SURFACE_DESTROY   = 315;\n\nvar SPICE_MSGC_DISPLAY_INIT             = 101;\n\nvar SPICE_MSG_INPUTS_INIT               = 101;\nvar SPICE_MSG_INPUTS_KEY_MODIFIERS      = 102;\n\nvar SPICE_MSG_INPUTS_MOUSE_MOTION_ACK   = 111;\n\nvar SPICE_MSGC_INPUTS_KEY_DOWN          = 101;\nvar SPICE_MSGC_INPUTS_KEY_UP            = 102;\nvar SPICE_MSGC_INPUTS_KEY_MODIFIERS     = 103;\n\nvar SPICE_MSGC_INPUTS_MOUSE_MOTION      = 111;\nvar SPICE_MSGC_INPUTS_MOUSE_POSITION    = 112;\nvar SPICE_MSGC_INPUTS_MOUSE_PRESS       = 113;\nvar SPICE_MSGC_INPUTS_MOUSE_RELEASE     = 114;\n\nvar SPICE_MSG_CURSOR_INIT               = 101;\nvar SPICE_MSG_CURSOR_RESET              = 102;\nvar SPICE_MSG_CURSOR_SET                = 103;\nvar SPICE_MSG_CURSOR_MOVE               = 104;\nvar SPICE_MSG_CURSOR_HIDE               = 105;\nvar SPICE_MSG_CURSOR_TRAIL              = 106;\nvar SPICE_MSG_CURSOR_INVAL_ONE          = 107;\nvar SPICE_MSG_CURSOR_INVAL_ALL          = 108;\n\nvar SPICE_MSG_PLAYBACK_DATA             = 101;\nvar SPICE_MSG_PLAYBACK_MODE             = 102;\nvar SPICE_MSG_PLAYBACK_START            = 103;\nvar SPICE_MSG_PLAYBACK_STOP             = 104;\nvar SPICE_MSG_PLAYBACK_VOLUME           = 105;\nvar SPICE_MSG_PLAYBACK_MUTE             = 106;\nvar SPICE_MSG_PLAYBACK_LATENCY          = 107;\n\nvar SPICE_PLAYBACK_CAP_CELT_0_5_1       = 0;\nvar SPICE_PLAYBACK_CAP_VOLUME           = 1;\nvar SPICE_PLAYBACK_CAP_LATENCY          = 2;\nvar SPICE_PLAYBACK_CAP_OPUS             = 3;\n\nvar SPICE_MAIN_CAP_SEMI_SEAMLESS_MIGRATE  = 0;\nvar SPICE_MAIN_CAP_NAME_AND_UUID          = 1;\nvar SPICE_MAIN_CAP_AGENT_CONNECTED_TOKENS = 2;\nvar SPICE_MAIN_CAP_SEAMLESS_MIGRATE       = 3;\n\nvar SPICE_AUDIO_DATA_MODE_INVALID       = 0;\nvar SPICE_AUDIO_DATA_MODE_RAW           = 1;\nvar SPICE_AUDIO_DATA_MODE_CELT_0_5_1    = 2;\nvar SPICE_AUDIO_DATA_MODE_OPUS          = 3;\n\nvar SPICE_AUDIO_FMT_INVALID             = 0;\nvar SPICE_AUDIO_FMT_S16                 = 1;\n\nvar SPICE_CHANNEL_MAIN                  = 1;\nvar SPICE_CHANNEL_DISPLAY               = 2;\nvar SPICE_CHANNEL_INPUTS                = 3;\nvar SPICE_CHANNEL_CURSOR                = 4;\nvar SPICE_CHANNEL_PLAYBACK              = 5;\nvar SPICE_CHANNEL_RECORD                = 6;\nvar SPICE_CHANNEL_TUNNEL                = 7;\nvar SPICE_CHANNEL_SMARTCARD             = 8;\nvar SPICE_CHANNEL_USBREDIR              = 9;\n\nvar SPICE_SURFACE_FLAGS_PRIMARY = (1 << 0);\n\nvar SPICE_NOTIFY_SEVERITY_INFO  = 0;\nvar SPICE_NOTIFY_SEVERITY_WARN  = 1;\nvar SPICE_NOTIFY_SEVERITY_ERROR = 2;\n\nvar SPICE_MOUSE_MODE_SERVER = (1 << 0),\n    SPICE_MOUSE_MODE_CLIENT = (1 << 1),\n    SPICE_MOUSE_MODE_MASK = 0x3;\n\nvar SPICE_CLIP_TYPE_NONE            = 0;\nvar SPICE_CLIP_TYPE_RECTS           = 1;\n\nvar SPICE_IMAGE_TYPE_BITMAP         = 0;\nvar SPICE_IMAGE_TYPE_QUIC           = 1;\nvar SPICE_IMAGE_TYPE_RESERVED       = 2;\nvar SPICE_IMAGE_TYPE_LZ_PLT         = 100;\nvar SPICE_IMAGE_TYPE_LZ_RGB         = 101;\nvar SPICE_IMAGE_TYPE_GLZ_RGB        = 102;\nvar SPICE_IMAGE_TYPE_FROM_CACHE     = 103;\nvar SPICE_IMAGE_TYPE_SURFACE        = 104;\nvar SPICE_IMAGE_TYPE_JPEG           = 105;\nvar SPICE_IMAGE_TYPE_FROM_CACHE_LOSSLESS = 106;\nvar SPICE_IMAGE_TYPE_ZLIB_GLZ_RGB   = 107;\nvar SPICE_IMAGE_TYPE_JPEG_ALPHA     = 108;\n\nvar SPICE_IMAGE_FLAGS_CACHE_ME = (1 << 0),\n    SPICE_IMAGE_FLAGS_HIGH_BITS_SET = (1 << 1),\n    SPICE_IMAGE_FLAGS_CACHE_REPLACE_ME = (1 << 2);\n\nvar SPICE_BITMAP_FLAGS_PAL_CACHE_ME = (1 << 0),\n    SPICE_BITMAP_FLAGS_PAL_FROM_CACHE = (1 << 1),\n    SPICE_BITMAP_FLAGS_TOP_DOWN = (1 << 2),\n    SPICE_BITMAP_FLAGS_MASK = 0x7;\n\nvar SPICE_BITMAP_FMT_INVALID        = 0,\n    SPICE_BITMAP_FMT_1BIT_LE        = 1,\n    SPICE_BITMAP_FMT_1BIT_BE        = 2,\n    SPICE_BITMAP_FMT_4BIT_LE        = 3,\n    SPICE_BITMAP_FMT_4BIT_BE        = 4,\n    SPICE_BITMAP_FMT_8BIT           = 5,\n    SPICE_BITMAP_FMT_16BIT          = 6,\n    SPICE_BITMAP_FMT_24BIT          = 7,\n    SPICE_BITMAP_FMT_32BIT          = 8,\n    SPICE_BITMAP_FMT_RGBA           = 9;\n\n\nvar SPICE_CURSOR_FLAGS_NONE = (1 << 0),\n    SPICE_CURSOR_FLAGS_CACHE_ME = (1 << 1),\n    SPICE_CURSOR_FLAGS_FROM_CACHE = (1 << 2),\n    SPICE_CURSOR_FLAGS_MASK = 0x7;\n\nvar SPICE_MOUSE_BUTTON_MASK_LEFT = (1 << 0),\n    SPICE_MOUSE_BUTTON_MASK_MIDDLE = (1 << 1),\n    SPICE_MOUSE_BUTTON_MASK_RIGHT = (1 << 2),\n    SPICE_MOUSE_BUTTON_MASK_MASK = 0x7;\n    \nvar SPICE_MOUSE_BUTTON_INVALID  = 0;\nvar SPICE_MOUSE_BUTTON_LEFT     = 1;\nvar SPICE_MOUSE_BUTTON_MIDDLE   = 2;\nvar SPICE_MOUSE_BUTTON_RIGHT    = 3;\nvar SPICE_MOUSE_BUTTON_UP       = 4;\nvar SPICE_MOUSE_BUTTON_DOWN     = 5;\n\nvar SPICE_BRUSH_TYPE_NONE = 0,\n    SPICE_BRUSH_TYPE_SOLID = 1,\n    SPICE_BRUSH_TYPE_PATTERN = 2;\n\nvar SPICE_SURFACE_FMT_INVALID = 0,\n    SPICE_SURFACE_FMT_1_A = 1,\n    SPICE_SURFACE_FMT_8_A = 8,\n    SPICE_SURFACE_FMT_16_555 = 16,\n    SPICE_SURFACE_FMT_32_xRGB = 32,\n    SPICE_SURFACE_FMT_16_565 = 80,\n    SPICE_SURFACE_FMT_32_ARGB = 96;\n\nvar SPICE_ROPD_INVERS_SRC = (1 << 0),\n    SPICE_ROPD_INVERS_BRUSH = (1 << 1),\n    SPICE_ROPD_INVERS_DEST = (1 << 2),\n    SPICE_ROPD_OP_PUT = (1 << 3),\n    SPICE_ROPD_OP_OR = (1 << 4),\n    SPICE_ROPD_OP_AND = (1 << 5),\n    SPICE_ROPD_OP_XOR = (1 << 6),\n    SPICE_ROPD_OP_BLACKNESS = (1 << 7),\n    SPICE_ROPD_OP_WHITENESS = (1 << 8),\n    SPICE_ROPD_OP_INVERS = (1 << 9),\n    SPICE_ROPD_INVERS_RES = (1 << 10),\n    SPICE_ROPD_MASK = 0x7ff;\n\nvar LZ_IMAGE_TYPE_INVALID = 0,\n    LZ_IMAGE_TYPE_PLT1_LE = 1,\n    LZ_IMAGE_TYPE_PLT1_BE = 2,      // PLT stands for palette\n    LZ_IMAGE_TYPE_PLT4_LE = 3,\n    LZ_IMAGE_TYPE_PLT4_BE = 4,\n    LZ_IMAGE_TYPE_PLT8    = 5,\n    LZ_IMAGE_TYPE_RGB16   = 6,\n    LZ_IMAGE_TYPE_RGB24   = 7,\n    LZ_IMAGE_TYPE_RGB32   = 8,\n    LZ_IMAGE_TYPE_RGBA    = 9,\n    LZ_IMAGE_TYPE_XXXA    = 10;\n\n\nvar QUIC_IMAGE_TYPE_INVALID = 0,\n    QUIC_IMAGE_TYPE_GRAY    = 1,\n    QUIC_IMAGE_TYPE_RGB16   = 2,\n    QUIC_IMAGE_TYPE_RGB24   = 3,\n    QUIC_IMAGE_TYPE_RGB32   = 4,\n    QUIC_IMAGE_TYPE_RGBA    = 5;\n\nvar SPICE_INPUT_MOTION_ACK_BUNCH = 4;\n\n\nvar SPICE_CURSOR_TYPE_ALPHA     = 0,\n    SPICE_CURSOR_TYPE_MONO      = 1,\n    SPICE_CURSOR_TYPE_COLOR4    = 2,\n    SPICE_CURSOR_TYPE_COLOR8    = 3,\n    SPICE_CURSOR_TYPE_COLOR16   = 4,\n    SPICE_CURSOR_TYPE_COLOR24   = 5,\n    SPICE_CURSOR_TYPE_COLOR32   = 6;\n\nvar SPICE_VIDEO_CODEC_TYPE_MJPEG = 1;\n\nvar VD_AGENT_PROTOCOL = 1;\nvar VD_AGENT_MAX_DATA_SIZE = 2048;\n\nvar VD_AGENT_MOUSE_STATE            = 1,\n    VD_AGENT_MONITORS_CONFIG        = 2,\n    VD_AGENT_REPLY                  = 3,\n    VD_AGENT_CLIPBOARD              = 4,\n    VD_AGENT_DISPLAY_CONFIG         = 5,\n    VD_AGENT_ANNOUNCE_CAPABILITIES  = 6,\n    VD_AGENT_CLIPBOARD_GRAB         = 7,\n    VD_AGENT_CLIPBOARD_REQUEST      = 8,\n    VD_AGENT_CLIPBOARD_RELEASE      = 9,\n    VD_AGENT_FILE_XFER_START        =10,\n    VD_AGENT_FILE_XFER_STATUS       =11,\n    VD_AGENT_FILE_XFER_DATA         =12,\n    VD_AGENT_CLIENT_DISCONNECTED    =13,\n    VD_AGENT_MAX_CLIPBOARD          =14;\n\nvar VD_AGENT_CAP_MOUSE_STATE            = 0,\n    VD_AGENT_CAP_MONITORS_CONFIG        = 1,\n    VD_AGENT_CAP_REPLY                  = 2,\n    VD_AGENT_CAP_CLIPBOARD              = 3,\n    VD_AGENT_CAP_DISPLAY_CONFIG         = 4,\n    VD_AGENT_CAP_CLIPBOARD_BY_DEMAND    = 5,\n    VD_AGENT_CAP_CLIPBOARD_SELECTION    = 6,\n    VD_AGENT_CAP_SPARSE_MONITORS_CONFIG = 7,\n    VD_AGENT_CAP_GUEST_LINEEND_LF       = 8,\n    VD_AGENT_CAP_GUEST_LINEEND_CRLF     = 9,\n    VD_AGENT_CAP_MAX_CLIPBOARD          = 10,\n    VD_AGENT_END_CAP                    = 11;\n\nvar VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA = 0,\n    VD_AGENT_FILE_XFER_STATUS_CANCELLED     = 1,\n    VD_AGENT_FILE_XFER_STATUS_ERROR         = 2,\n    VD_AGENT_FILE_XFER_STATUS_SUCCESS       = 3;\n\ndefine(\"spice-enums\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2012 by Aric Stewart <aric@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/*\n * Copyright 1990,91 by Thomas Roell, Dinkelscherben, Germany.\n *\n * Permission to use, copy, modify, distribute, and sell this software and its\n * documentation for any purpose is hereby granted without fee, provided that\n * the above copyright notice appear in all copies and that both that\n * copyright notice and this permission notice appear in supporting\n * documentation, and that the name of Thomas Roell not be used in\n * advertising or publicity pertaining to distribution of the software without\n * specific, written prior permission.  Thomas Roell makes no representations\n * about the suitability of this software for any purpose.  It is provided\n * \"as is\" without express or implied warranty.\n *\n * THOMAS ROELL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,\n * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO\n * EVENT SHALL THOMAS ROELL BE LIABLE FOR ANY SPECIAL, INDIRECT OR\n * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,\n * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n *\n */\n/*\n * Copyright (c) 1994-2003 by The XFree86 Project, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR\n * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n *\n * Except as contained in this notice, the name of the copyright holder(s)\n * and author(s) shall not be used in advertising or otherwise to promote\n * the sale, use or other dealings in this Software without prior written\n * authorization from the copyright holder(s) and author(s).\n */\n\n/*\n * NOTE: The AT/MF keyboards can generate (via the 8042) two (MF: three)\n *       sets of scancodes. Set3 can only be generated by a MF keyboard.\n *       Set2 sends a makecode for keypress, and the same code prefixed by a\n *       F0 for keyrelease. This is a little bit ugly to handle. Thus we use\n *       here for X386 the PC/XT compatible Set1. This set uses 8bit scancodes.\n *       Bit 7 ist set if the key is released. The code E0 switches to a\n *       different meaning to add the new MF cursorkeys, while not breaking old\n *       applications. E1 is another special prefix. Since I assume that there\n *       will be further versions of PC/XT scancode compatible keyboards, we\n *       may be in trouble one day.\n *\n * IDEA: 1) Use Set2 on AT84 keyboards and translate it to MF Set3.\n *       2) Use the keyboards native set and translate it to common keysyms.\n */\n\n/*\n * definition of the AT84/MF101/MF102 Keyboard:\n * ============================================================\n *       Defined             Key Cap Glyphs       Pressed value\n *      Key Name            Main       Also       (hex)    (dec)\n *      ----------------   ---------- -------    ------    ------\n */\n\nvar KEY_Escape      =/* Escape                0x01  */    1\nvar KEY_1           =/* 1           !         0x02  */    2\nvar KEY_2           =/* 2           @         0x03  */    3\nvar KEY_3           =/* 3           #         0x04  */    4\nvar KEY_4           =/* 4           $         0x05  */    5\nvar KEY_5           =/* 5           %         0x06  */    6\nvar KEY_6           =/* 6           ^         0x07  */    7\nvar KEY_7           =/* 7           &         0x08  */    8\nvar KEY_8           =/* 8           *         0x09  */    9\nvar KEY_9           =/* 9           (         0x0a  */   10\nvar KEY_0           =/* 0           )         0x0b  */   11\nvar KEY_Minus       =/* - (Minus)   _ (Under) 0x0c  */   12\nvar KEY_Equal       =/* = (Equal)   +         0x0d  */   13\nvar KEY_BackSpace   =/* Back Space            0x0e  */   14\nvar KEY_Tab         =/* Tab                   0x0f  */   15\nvar KEY_Q           =/* Q                     0x10  */   16\nvar KEY_W           =/* W                     0x11  */   17\nvar KEY_E           =/* E                     0x12  */   18\nvar KEY_R           =/* R                     0x13  */   19\nvar KEY_T           =/* T                     0x14  */   20\nvar KEY_Y           =/* Y                     0x15  */   21\nvar KEY_U           =/* U                     0x16  */   22\nvar KEY_I           =/* I                     0x17  */   23\nvar KEY_O           =/* O                     0x18  */   24\nvar KEY_P           =/* P                     0x19  */   25\nvar KEY_LBrace      =/* [           {         0x1a  */   26\nvar KEY_RBrace      =/* ]           }         0x1b  */   27\nvar KEY_Enter       =/* Enter                 0x1c  */   28\nvar KEY_LCtrl       =/* Ctrl(left)            0x1d  */   29\nvar KEY_A           =/* A                     0x1e  */   30\nvar KEY_S           =/* S                     0x1f  */   31\nvar KEY_D           =/* D                     0x20  */   32\nvar KEY_F           =/* F                     0x21  */   33\nvar KEY_G           =/* G                     0x22  */   34\nvar KEY_H           =/* H                     0x23  */   35\nvar KEY_J           =/* J                     0x24  */   36\nvar KEY_K           =/* K                     0x25  */   37\nvar KEY_L           =/* L                     0x26  */   38\nvar KEY_SemiColon   =/* ;(SemiColon) :(Colon) 0x27  */   39\nvar KEY_Quote       =/* ' (Apostr)  \" (Quote) 0x28  */   40\nvar KEY_Tilde       =/* ` (Accent)  ~ (Tilde) 0x29  */   41\nvar KEY_ShiftL      =/* Shift(left)           0x2a  */   42\nvar KEY_BSlash      =/* \\(BckSlash) |(VertBar)0x2b  */   43\nvar KEY_Z           =/* Z                     0x2c  */   44\nvar KEY_X           =/* X                     0x2d  */   45\nvar KEY_C           =/* C                     0x2e  */   46\nvar KEY_V           =/* V                     0x2f  */   47\nvar KEY_B           =/* B                     0x30  */   48\nvar KEY_N           =/* N                     0x31  */   49\nvar KEY_M           =/* M                     0x32  */   50\nvar KEY_Comma       =/* , (Comma)   < (Less)  0x33  */   51\nvar KEY_Period      =/* . (Period)  >(Greater)0x34  */   52\nvar KEY_Slash       =/* / (Slash)   ?         0x35  */   53\nvar KEY_ShiftR      =/* Shift(right)          0x36  */   54\nvar KEY_KP_Multiply =/* *                     0x37  */   55\nvar KEY_Alt         =/* Alt(left)             0x38  */   56\nvar KEY_Space       =/*   (SpaceBar)          0x39  */   57\nvar KEY_CapsLock    =/* CapsLock              0x3a  */   58\nvar KEY_F1          =/* F1                    0x3b  */   59\nvar KEY_F2          =/* F2                    0x3c  */   60\nvar KEY_F3          =/* F3                    0x3d  */   61\nvar KEY_F4          =/* F4                    0x3e  */   62\nvar KEY_F5          =/* F5                    0x3f  */   63\nvar KEY_F6          =/* F6                    0x40  */   64\nvar KEY_F7          =/* F7                    0x41  */   65\nvar KEY_F8          =/* F8                    0x42  */   66\nvar KEY_F9          =/* F9                    0x43  */   67\nvar KEY_F10         =/* F10                   0x44  */   68\nvar KEY_NumLock     =/* NumLock               0x45  */   69\nvar KEY_ScrollLock  =/* ScrollLock            0x46  */   70\nvar KEY_KP_7        =/* 7           Home      0x47  */   71\nvar KEY_KP_8        =/* 8           Up        0x48  */   72\nvar KEY_KP_9        =/* 9           PgUp      0x49  */   73\nvar KEY_KP_Minus    =/* - (Minus)             0x4a  */   74\nvar KEY_KP_4        =/* 4           Left      0x4b  */   75\nvar KEY_KP_5        =/* 5                     0x4c  */   76\nvar KEY_KP_6        =/* 6           Right     0x4d  */   77\nvar KEY_KP_Plus     =/* + (Plus)              0x4e  */   78\nvar KEY_KP_1        =/* 1           End       0x4f  */   79\nvar KEY_KP_2        =/* 2           Down      0x50  */   80\nvar KEY_KP_3        =/* 3           PgDown    0x51  */   81\nvar KEY_KP_0        =/* 0           Insert    0x52  */   82\nvar KEY_KP_Decimal  =/* . (Decimal) Delete    0x53  */   83\nvar KEY_SysReqest   =/* SysReqest             0x54  */   84\n                         /* NOTUSED               0x55  */\nvar KEY_Less        =/* < (Less)   >(Greater) 0x56  */   86\nvar KEY_F11         =/* F11                   0x57  */   87\nvar KEY_F12         =/* F12                   0x58  */   88\n\nvar KEY_Prefix0     =/* special               0x60  */   96\nvar KEY_Prefix1     =/* specail               0x61  */   97\n;\ndefine(\"spice-atKeynames\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2012 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*----------------------------------------------------------------------------\n**  Utility settings and functions for Spice\n**--------------------------------------------------------------------------*/\nvar DEBUG = 0;\nvar DUMP_DRAWS = false;\nvar DUMP_CANVASES = false;\n\n\n/*----------------------------------------------------------------------------\n**  combine_array_buffers\n**      Combine two array buffers.\n**      FIXME - this can't be optimal.  See wire.js about eliminating the need.\n**--------------------------------------------------------------------------*/\nfunction combine_array_buffers(a1, a2)\n{\n    var in1 = new Uint8Array(a1);\n    var in2 = new Uint8Array(a2);\n    var ret = new ArrayBuffer(a1.byteLength + a2.byteLength);\n    var out = new Uint8Array(ret);\n    var o = 0;\n    var i;\n    for (i = 0; i < in1.length; i++)\n        out[o++] = in1[i];\n    for (i = 0; i < in2.length; i++)\n        out[o++] = in2[i];\n\n    return ret;\n}\n\n/*----------------------------------------------------------------------------\n**  hexdump_buffer\n**--------------------------------------------------------------------------*/\nfunction hexdump_buffer(a)\n{\n    var mg = new Uint8Array(a);\n    var hex = \"\";\n    var str = \"\";\n    var last_zeros = 0;\n    for (var i = 0; i < mg.length; i++)\n    {\n        var h = Number(mg[i]).toString(16);\n        if (h.length == 1)\n            hex += \"0\";\n        hex += h + \" \";\n\n        if (mg[i] == 10 || mg[i] == 13 || mg[i] == 8)\n            str += \".\";\n        else\n            str += String.fromCharCode(mg[i]);\n\n        if ((i % 16 == 15) || (i == (mg.length - 1)))\n        {\n            while (i % 16 != 15)\n            {\n                hex += \"   \";\n                i++;\n            }\n\n            if (last_zeros == 0)\n                console.log(hex + \" | \" + str);\n\n            if (hex == \"00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \")\n            {\n                if (last_zeros == 1)\n                {\n                    console.log(\".\");\n                    last_zeros++;\n                }\n                else if (last_zeros == 0)\n                    last_zeros++;\n            }\n            else\n                last_zeros = 0;\n\n            hex = str = \"\";\n        }\n    }\n}\n\n/*----------------------------------------------------------------------------\n** Converting keycodes to AT scancodes is very hard.\n** luckly there are some resources on the web and in the Xorg driver that help\n** us figure out what browser depenend keycodes match to what scancodes.\n**\n** This will most likely not work for non US keyboard and browsers other than\n** modern Chrome and FireFox.\n**--------------------------------------------------------------------------*/\nvar common_scanmap = [];\ncommon_scanmap['Q'.charCodeAt(0)]  = KEY_Q;\ncommon_scanmap['W'.charCodeAt(0)]  = KEY_W;\ncommon_scanmap['E'.charCodeAt(0)]  = KEY_E;\ncommon_scanmap['R'.charCodeAt(0)]  = KEY_R;\ncommon_scanmap['T'.charCodeAt(0)]  = KEY_T;\ncommon_scanmap['Y'.charCodeAt(0)]  = KEY_Y;\ncommon_scanmap['U'.charCodeAt(0)]  = KEY_U;\ncommon_scanmap['I'.charCodeAt(0)]  = KEY_I;\ncommon_scanmap['O'.charCodeAt(0)]  = KEY_O;\ncommon_scanmap['P'.charCodeAt(0)]  = KEY_P;\ncommon_scanmap['A'.charCodeAt(0)]  = KEY_A;\ncommon_scanmap['S'.charCodeAt(0)]  = KEY_S;\ncommon_scanmap['D'.charCodeAt(0)]  = KEY_D;\ncommon_scanmap['F'.charCodeAt(0)]  = KEY_F;\ncommon_scanmap['G'.charCodeAt(0)]  = KEY_G;\ncommon_scanmap['H'.charCodeAt(0)]  = KEY_H;\ncommon_scanmap['J'.charCodeAt(0)]  = KEY_J;\ncommon_scanmap['K'.charCodeAt(0)]  = KEY_K;\ncommon_scanmap['L'.charCodeAt(0)]  = KEY_L;\ncommon_scanmap['Z'.charCodeAt(0)]  = KEY_Z;\ncommon_scanmap['X'.charCodeAt(0)]  = KEY_X;\ncommon_scanmap['C'.charCodeAt(0)]  = KEY_C;\ncommon_scanmap['V'.charCodeAt(0)]  = KEY_V;\ncommon_scanmap['B'.charCodeAt(0)]  = KEY_B;\ncommon_scanmap['N'.charCodeAt(0)]  = KEY_N;\ncommon_scanmap['M'.charCodeAt(0)]  = KEY_M;\ncommon_scanmap[' '.charCodeAt(0)]  = KEY_Space;\ncommon_scanmap[13]                 = KEY_Enter;\ncommon_scanmap[27]                 = KEY_Escape;\ncommon_scanmap[8]                  = KEY_BackSpace;\ncommon_scanmap[9]                  = KEY_Tab;\ncommon_scanmap[16]                 = KEY_ShiftL;\ncommon_scanmap[17]                 = KEY_LCtrl;\ncommon_scanmap[18]                 = KEY_Alt;\ncommon_scanmap[20]                 = KEY_CapsLock;\ncommon_scanmap[144]                = KEY_NumLock;\ncommon_scanmap[112]                = KEY_F1;\ncommon_scanmap[113]                = KEY_F2;\ncommon_scanmap[114]                = KEY_F3;\ncommon_scanmap[115]                = KEY_F4;\ncommon_scanmap[116]                = KEY_F5;\ncommon_scanmap[117]                = KEY_F6;\ncommon_scanmap[118]                = KEY_F7;\ncommon_scanmap[119]                = KEY_F8;\ncommon_scanmap[120]                = KEY_F9;\ncommon_scanmap[121]                = KEY_F10;\ncommon_scanmap[122]                = KEY_F11;\ncommon_scanmap[123]                = KEY_F12;\n\n/* These externded scancodes do not line up with values from atKeynames */\ncommon_scanmap[42]                 = 99;\ncommon_scanmap[19]                 = 101;    // Break\ncommon_scanmap[111]                = 0xE035; // KP_Divide\ncommon_scanmap[106]                = 0xE037; // KP_Multiply\ncommon_scanmap[36]                 = 0xE047; // Home\ncommon_scanmap[38]                 = 0xE048; // Up\ncommon_scanmap[33]                 = 0xE049; // PgUp\ncommon_scanmap[37]                 = 0xE04B; // Left\ncommon_scanmap[39]                 = 0xE04D; // Right\ncommon_scanmap[35]                 = 0xE04F; // End\ncommon_scanmap[40]                 = 0xE050; // Down\ncommon_scanmap[34]                 = 0xE051; // PgDown\ncommon_scanmap[45]                 = 0xE052; // Insert\ncommon_scanmap[46]                 = 0xE053; // Delete\ncommon_scanmap[44]                 = 0x2A37; // Print\n\n/* These are not common between ALL browsers but are between Firefox and DOM3 */\ncommon_scanmap['1'.charCodeAt(0)]  = KEY_1;\ncommon_scanmap['2'.charCodeAt(0)]  = KEY_2;\ncommon_scanmap['3'.charCodeAt(0)]  = KEY_3;\ncommon_scanmap['4'.charCodeAt(0)]  = KEY_4;\ncommon_scanmap['5'.charCodeAt(0)]  = KEY_5;\ncommon_scanmap['6'.charCodeAt(0)]  = KEY_6;\ncommon_scanmap['7'.charCodeAt(0)]  = KEY_7;\ncommon_scanmap['8'.charCodeAt(0)]  = KEY_8;\ncommon_scanmap['9'.charCodeAt(0)]  = KEY_9;\ncommon_scanmap['0'.charCodeAt(0)]  = KEY_0;\ncommon_scanmap[145]                = KEY_ScrollLock;\ncommon_scanmap[103]                = KEY_KP_7;\ncommon_scanmap[104]                = KEY_KP_8;\ncommon_scanmap[105]                = KEY_KP_9;\ncommon_scanmap[100]                = KEY_KP_4;\ncommon_scanmap[101]                = KEY_KP_5;\ncommon_scanmap[102]                = KEY_KP_6;\ncommon_scanmap[107]                = KEY_KP_Plus;\ncommon_scanmap[97]                 = KEY_KP_1;\ncommon_scanmap[98]                 = KEY_KP_2;\ncommon_scanmap[99]                 = KEY_KP_3;\ncommon_scanmap[96]                 = KEY_KP_0;\ncommon_scanmap[110]                = KEY_KP_Decimal;\ncommon_scanmap[191]                = KEY_Slash;\ncommon_scanmap[190]                = KEY_Period;\ncommon_scanmap[188]                = KEY_Comma;\ncommon_scanmap[220]                = KEY_BSlash;\ncommon_scanmap[192]                = KEY_Tilde;\ncommon_scanmap[222]                = KEY_Quote;\ncommon_scanmap[219]                = KEY_LBrace;\ncommon_scanmap[221]                = KEY_RBrace;\n\ncommon_scanmap[91]                 = 0xE05B; //KEY_LMeta\ncommon_scanmap[92]                 = 0xE05C; //KEY_RMeta\ncommon_scanmap[93]                 = 0xE05D; //KEY_Menu\n\n/* Firefox/Mozilla codes */\nvar firefox_scanmap = [];\nfirefox_scanmap[173]                = KEY_Minus;\nfirefox_scanmap[109]                = KEY_Minus;\nfirefox_scanmap[61]                 = KEY_Equal;\nfirefox_scanmap[59]                 = KEY_SemiColon;\n\n/* DOM3 codes */\nvar DOM_scanmap = [];\nDOM_scanmap[189]                = KEY_Minus;\nDOM_scanmap[187]                = KEY_Equal;\nDOM_scanmap[186]                = KEY_SemiColon;\n\nfunction get_scancode(code)\n{\n    if (common_scanmap[code] === undefined)\n    {\n        if (navigator.userAgent.indexOf(\"Firefox\") != -1)\n            return firefox_scanmap[code];\n        else\n            return DOM_scanmap[code];\n    }\n    else\n        return common_scanmap[code];\n}\n\nfunction keycode_to_start_scan(code)\n{\n    var scancode = get_scancode(code);\n    if (scancode === undefined)\n    {\n        alert('no map for ' + code);\n        return 0;\n    }\n\n    if (scancode < 0x100) {\n        return scancode;\n    } else {\n        return 0xe0 | ((scancode - 0x100) << 8);\n    }\n}\n\nfunction keycode_to_end_scan(code)\n{\n    var scancode = get_scancode(code);\n    if (scancode === undefined)\n        return 0;\n\n    if (scancode < 0x100) {\n        return scancode | 0x80;\n    } else {\n        return 0x80e0 | ((scancode - 0x100) << 8);\n    }\n}\n;\ndefine(\"spice-utils\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2012 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*----------------------------------------------------------------------------\n**  crc logic from rfc2083 ported to Javascript\n**--------------------------------------------------------------------------*/\n\nvar rfc2083_crc_table = Array(256);\nvar rfc2083_crc_table_computed = 0;\n/* Make the table for a fast CRC. */\nfunction rfc2083_make_crc_table()\n{\n    var c;\n    var n, k;\n    for (n = 0; n < 256; n++)\n    {\n        c = n;\n        for (k = 0; k < 8; k++)\n        {\n            if (c & 1)\n                c = ((0xedb88320 ^ (c >>> 1)) >>> 0) & 0xffffffff;\n            else\n                c = c >>> 1;\n        }\n        rfc2083_crc_table[n] = c;\n    }\n\n    rfc2083_crc_table_computed = 1;\n}\n\n/* Update a running CRC with the bytes buf[0..len-1]--the CRC\n     should be initialized to all 1's, and the transmitted value\n     is the 1's complement of the final running CRC (see the\n     crc() routine below)). */\n\nfunction rfc2083_update_crc(crc, u8buf, at, len)\n{\n    var c = crc;\n    var n;\n\n    if (!rfc2083_crc_table_computed)\n        rfc2083_make_crc_table();\n\n    for (n = 0; n < len; n++)\n    {\n        c = rfc2083_crc_table[(c ^ u8buf[at + n]) & 0xff] ^ (c >>> 8);\n    }\n\n    return c;\n}\n\nfunction rfc2083_crc(u8buf, at, len)\n{\n    return rfc2083_update_crc(0xffffffff, u8buf, at, len) ^ 0xffffffff;\n}\n\nfunction crc32(mb, at, len)\n{\n    var u8 = new Uint8Array(mb);\n    return rfc2083_crc(u8, at, len);\n}\n\nfunction PngIHDR(width, height)\n{\n    this.width = width;\n    this.height = height;\n    this.depth = 8;\n    this.type = 6;\n    this.compression = 0;\n    this.filter = 0;\n    this.interlace = 0;\n}\n\nPngIHDR.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var orig = at;\n        var dv = new SpiceDataView(a);\n        dv.setUint32(at, this.buffer_size() - 12); at += 4;\n        dv.setUint8(at, 'I'.charCodeAt(0)); at++;\n        dv.setUint8(at, 'H'.charCodeAt(0)); at++;\n        dv.setUint8(at, 'D'.charCodeAt(0)); at++;\n        dv.setUint8(at, 'R'.charCodeAt(0)); at++;\n        dv.setUint32(at, this.width); at += 4;\n        dv.setUint32(at, this.height); at += 4;\n        dv.setUint8(at, this.depth); at++;\n        dv.setUint8(at, this.type); at++;\n        dv.setUint8(at, this.compression); at++;\n        dv.setUint8(at, this.filter); at++;\n        dv.setUint8(at, this.interlace); at++;\n        dv.setUint32(at, crc32(a, orig + 4, this.buffer_size() - 8)); at += 4;\n        return at;\n    },\n    buffer_size: function()\n    {\n        return 12 + 13;\n    }\n}\n\n\nfunction adler()\n{\n    this.s1 = 1;\n    this.s2 = 0;\n}\n\nadler.prototype.update = function(b)\n{\n    this.s1 += b;\n    this.s1 %= 65521;\n    this.s2 += this.s1;\n    this.s2 %= 65521;\n}\n\nfunction PngIDAT(width, height, bytes)\n{\n    if (bytes.byteLength > 65535)\n    {\n        throw new Error(\"Cannot handle more than 64K\");\n    }\n    this.data = bytes;\n    this.width = width;\n    this.height = height;\n}\n\nPngIDAT.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var orig = at;\n        var x, y, i, j;\n        var dv = new SpiceDataView(a);\n        var zsum = new adler();\n        dv.setUint32(at, this.buffer_size() - 12); at += 4;\n        dv.setUint8(at, 'I'.charCodeAt(0)); at++;\n        dv.setUint8(at, 'D'.charCodeAt(0)); at++;\n        dv.setUint8(at, 'A'.charCodeAt(0)); at++;\n        dv.setUint8(at, 'T'.charCodeAt(0)); at++;\n\n        /* zlib header.  */\n        dv.setUint8(at, 0x78); at++;\n        dv.setUint8(at, 0x01); at++;\n\n        /* Deflate header.  Specifies uncompressed, final bit */\n        dv.setUint8(at, 0x80); at++;\n        dv.setUint16(at, this.data.byteLength + this.height); at += 2;\n        dv.setUint16(at, ~(this.data.byteLength + this.height)); at += 2;\n        var u8 = new Uint8Array(this.data);\n        for (i = 0, y = 0; y < this.height; y++)\n        {\n            /* Filter type 0 - uncompressed */\n            dv.setUint8(at, 0); at++;\n            zsum.update(0);\n            for (x = 0; x < this.width && i < this.data.byteLength; x++)\n            {\n                zsum.update(u8[i]);\n                dv.setUint8(at, u8[i++]); at++;\n                zsum.update(u8[i]);\n                dv.setUint8(at, u8[i++]); at++;\n                zsum.update(u8[i]);\n                dv.setUint8(at, u8[i++]); at++;\n                zsum.update(u8[i]);\n                dv.setUint8(at, u8[i++]); at++;\n            }\n        }\n\n        /* zlib checksum.   */\n        dv.setUint16(at, zsum.s2); at+=2;\n        dv.setUint16(at, zsum.s1); at+=2;\n\n        /* FIXME - something is not quite right with the zlib code;\n                   you get an error from libpng if you open the image in\n                   gimp.  But it works, so it's good enough for now... */\n\n        dv.setUint32(at, crc32(a, orig + 4, this.buffer_size() - 8)); at += 4;\n        return at;\n    },\n    buffer_size: function()\n    {\n        return 12 + this.data.byteLength + this.height + 4 + 2 + 1 + 2 + 2;\n    }\n}\n\n\nfunction PngIEND()\n{\n}\n\nPngIEND.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var orig = at;\n        var i;\n        var dv = new SpiceDataView(a);\n        dv.setUint32(at, this.buffer_size() - 12); at += 4;\n        dv.setUint8(at, 'I'.charCodeAt(0)); at++;\n        dv.setUint8(at, 'E'.charCodeAt(0)); at++;\n        dv.setUint8(at, 'N'.charCodeAt(0)); at++;\n        dv.setUint8(at, 'D'.charCodeAt(0)); at++;\n        dv.setUint32(at, crc32(a, orig + 4, this.buffer_size() - 8)); at += 4;\n        return at;\n    },\n    buffer_size: function()\n    {\n        return 12;\n    }\n}\n\n\nfunction create_rgba_png(width, height, bytes)\n{\n    var i;\n    var ihdr = new PngIHDR(width, height);\n    var idat = new PngIDAT(width, height, bytes);\n    var iend = new PngIEND;\n\n    var mb = new ArrayBuffer(ihdr.buffer_size() + idat.buffer_size() + iend.buffer_size());\n    var at = ihdr.to_buffer(mb);\n    at = idat.to_buffer(mb, at);\n    at = iend.to_buffer(mb, at);\n\n    var u8 = new Uint8Array(mb);\n    var str = \"\";\n    for (i = 0; i < at; i++)\n    {\n        str += \"%\";\n        if (u8[i] < 16)\n            str += \"0\";\n        str += u8[i].toString(16);\n    }\n\n\n    return \"%89PNG%0D%0A%1A%0A\" + str;\n}\n;\ndefine(\"spice-png\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2012 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n/*----------------------------------------------------------------------------\n**  lz.js\n**      Functions for handling SPICE_IMAGE_TYPE_LZ_RGB\n**  Adapted from lz.c .\n**--------------------------------------------------------------------------*/\nfunction lz_rgb32_decompress(in_buf, at, out_buf, type, default_alpha)\n{\n    var encoder = at;\n    var op = 0;\n    var ctrl;\n    var ctr = 0;\n\n    for (ctrl = in_buf[encoder++]; (op * 4) < out_buf.length; ctrl = in_buf[encoder++])\n    {\n        var ref = op;\n        var len = ctrl >> 5;\n        var ofs = (ctrl & 31) << 8;\n\n//if (type == LZ_IMAGE_TYPE_RGBA)\n//console.log(ctr++ + \": from \" + (encoder + 28) + \", ctrl \" + ctrl + \", len \" + len + \", ofs \" + ofs + \", op \" + op);\n        if (ctrl >= 32) {\n\n            var code;\n            len--;\n\n            if (len == 7 - 1) {\n                do {\n                    code = in_buf[encoder++];\n                    len += code;\n                } while (code == 255);\n            }\n            code = in_buf[encoder++];\n            ofs += code;\n\n\n            if (code == 255) {\n                if ((ofs - code) == (31 << 8)) {\n                    ofs = in_buf[encoder++] << 8;\n                    ofs += in_buf[encoder++];\n                    ofs += 8191;\n                }\n            }\n            len += 1;\n            if (type == LZ_IMAGE_TYPE_RGBA)\n                len += 2;\n\n            ofs += 1;\n\n            ref -= ofs;\n            if (ref == (op - 1)) {\n                var b = ref;\n//if (type == LZ_IMAGE_TYPE_RGBA) console.log(\"alpha \" + out_buf[(b*4)+3] + \" dupped into pixel \" + op + \" through pixel \" + (op + len));\n                for (; len; --len) {\n                    if (type == LZ_IMAGE_TYPE_RGBA)\n                    {\n                        out_buf[(op*4) + 3] = out_buf[(b*4)+3];\n                    }\n                    else\n                    {\n                        for (i = 0; i < 4; i++)\n                            out_buf[(op*4) + i] = out_buf[(b*4)+i];\n                    }\n                    op++;\n                }\n            } else {\n//if (type == LZ_IMAGE_TYPE_RGBA) console.log(\"alpha copied to pixel \" + op + \" through \" + (op + len) + \" from \" + ref);\n                for (; len; --len) {\n                    if (type == LZ_IMAGE_TYPE_RGBA)\n                    {\n                        out_buf[(op*4) + 3] = out_buf[(ref*4)+3];\n                    }\n                    else\n                    {\n                        for (i = 0; i < 4; i++)\n                            out_buf[(op*4) + i] = out_buf[(ref*4)+i];\n                    }\n                    op++; ref++;\n                }\n            }\n        } else {\n            ctrl++;\n\n            if (type == LZ_IMAGE_TYPE_RGBA)\n            {\n//console.log(\"alpha \" + in_buf[encoder] + \" set into pixel \" + op);\n                out_buf[(op*4) + 3] = in_buf[encoder++];\n            }\n            else\n            {\n                out_buf[(op*4) + 0] = in_buf[encoder + 2];\n                out_buf[(op*4) + 1] = in_buf[encoder + 1];\n                out_buf[(op*4) + 2] = in_buf[encoder + 0];\n                if (default_alpha)\n                    out_buf[(op*4) + 3] = 255;\n                encoder += 3;\n            }\n            op++;\n\n\n            for (--ctrl; ctrl; ctrl--) {\n                if (type == LZ_IMAGE_TYPE_RGBA)\n                {\n//console.log(\"alpha \" + in_buf[encoder] + \" set into pixel \" + op);\n                    out_buf[(op*4) + 3] = in_buf[encoder++];\n                }\n                else\n                {\n                    out_buf[(op*4) + 0] = in_buf[encoder + 2];\n                    out_buf[(op*4) + 1] = in_buf[encoder + 1];\n                    out_buf[(op*4) + 2] = in_buf[encoder + 0];\n                    if (default_alpha)\n                        out_buf[(op*4) + 3] = 255;\n                    encoder += 3;\n                }\n                op++;\n            }\n        }\n\n    }\n    return encoder - 1;\n}\n\nfunction convert_spice_lz_to_web(context, lz_image)\n{\n    var at;\n    if (lz_image.type === LZ_IMAGE_TYPE_RGB32 || lz_image.type === LZ_IMAGE_TYPE_RGBA)\n    {\n        var u8 = new Uint8Array(lz_image.data);\n        var ret = context.createImageData(lz_image.width, lz_image.height);\n\n        at = lz_rgb32_decompress(u8, 0, ret.data, LZ_IMAGE_TYPE_RGB32, lz_image.type != LZ_IMAGE_TYPE_RGBA);\n        if (lz_image.type == LZ_IMAGE_TYPE_RGBA)\n            lz_rgb32_decompress(u8, at, ret.data, LZ_IMAGE_TYPE_RGBA, false);\n    }\n    else if (lz_image.type === LZ_IMAGE_TYPE_XXXA)\n    {\n        var u8 = new Uint8Array(lz_image.data);\n        var ret = context.createImageData(lz_image.width, lz_image.height);\n        lz_rgb32_decompress(u8, 0, ret.data, LZ_IMAGE_TYPE_RGBA, false);\n    }\n    else\n        return undefined;\n\n    return ret;\n}\n;\ndefine(\"spice-lz\", function(){});\n\n",
    "/*\"use strict\";*/\n/* use strict is commented out because it results in a 5x slowdone in chrome */\n/*\n *    Copyright (C) 2012 by Jeremy P. White <jwhite@codeweavers.com>\n *    Copyright (C) 2012 by Aric Stewart <aric@codeweavers.com>\n *\n *    This file is part of spice-html5.\n *\n *    spice-html5 is free software: you can redistribute it and/or modify\n *    it under the terms of the GNU Lesser General Public License as published by\n *    the Free Software Foundation, either version 3 of the License, or\n *    (at your option) any later version.\n *\n *    spice-html5 is distributed in the hope that it will be useful,\n *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *    GNU Lesser General Public License for more details.\n *\n *    You should have received a copy of the GNU Lesser General Public License\n *    along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar encoder;\n\nvar QUIC_IMAGE_TYPE_INVALID = 0;\nvar QUIC_IMAGE_TYPE_GRAY = 1;\nvar QUIC_IMAGE_TYPE_RGB16 = 2;\nvar QUIC_IMAGE_TYPE_RGB24 = 3;\nvar QUIC_IMAGE_TYPE_RGB32 = 4;\nvar QUIC_IMAGE_TYPE_RGBA = 5;\nvar DEFevol = 3;\nvar DEFwmimax = 6;\nvar DEFwminext = 2048;\nvar need_init = true;\nvar DEFmaxclen = 26;\nvar evol = DEFevol;\nvar wmimax = DEFwmimax;\nvar wminext = DEFwminext;\nvar family_5bpc = { nGRcodewords:[0,0,0,0,0,0,0,0],\n                    notGRcwlen:[0,0,0,0,0,0,0,0],\n                    notGRprefixmask:[0,0,0,0,0,0,0,0],\n                    notGRsuffixlen:[0,0,0,0,0,0,0,0],\n                    xlatU2L:[0,0,0,0,0,0,0,0],\n                    xlatL2U:[0,0,0,0,0,0,0,0]\n                  };\nvar family_8bpc = { nGRcodewords:[0,0,0,0,0,0,0,0],\n                    notGRcwlen:[0,0,0,0,0,0,0,0],\n                    notGRprefixmask:[0,0,0,0,0,0,0,0],\n                    notGRsuffixlen:[0,0,0,0,0,0,0,0],\n                    xlatU2L:[0,0,0,0,0,0,0,0],\n                    xlatL2U:[0,0,0,0,0,0,0,0]\n                  };\nvar bppmask = [ 0x00000000,\n    0x00000001, 0x00000003, 0x00000007, 0x0000000f,\n    0x0000001f, 0x0000003f, 0x0000007f, 0x000000ff,\n    0x000001ff, 0x000003ff, 0x000007ff, 0x00000fff,\n    0x00001fff, 0x00003fff, 0x00007fff, 0x0000ffff,\n    0x0001ffff, 0x0003ffff, 0x0007ffff, 0x000fffff,\n    0x001fffff, 0x003fffff, 0x007fffff, 0x00ffffff,\n    0x01ffffff, 0x03ffffff, 0x07ffffff, 0x0fffffff,\n    0x1fffffff, 0x3fffffff, 0x7fffffff, 0xffffffff];\n\nvar zeroLUT = [];\n\nvar besttrigtab = [\n            [ 550, 900, 800, 700, 500, 350, 300, 200, 180, 180, 160],\n            [ 110, 550, 900, 800, 550, 400, 350, 250, 140, 160, 140],\n            [ 100, 120, 550, 900, 700, 500, 400, 300, 220, 250, 160]];\n\nvar J = [ 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 5, 6, 6,\n          7, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n\nvar lzeroes = [\n    8, 7, 6, 6, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n    3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0];\n\nvar tabrand_chaos = [\n    0x02c57542, 0x35427717, 0x2f5a2153, 0x9244f155, 0x7bd26d07, 0x354c6052,\n    0x57329b28, 0x2993868e, 0x6cd8808c, 0x147b46e0, 0x99db66af, 0xe32b4cac,\n    0x1b671264, 0x9d433486, 0x62a4c192, 0x06089a4b, 0x9e3dce44, 0xdaabee13,\n    0x222425ea, 0xa46f331d, 0xcd589250, 0x8bb81d7f, 0xc8b736b9, 0x35948d33,\n    0xd7ac7fd0, 0x5fbe2803, 0x2cfbc105, 0x013dbc4e, 0x7a37820f, 0x39f88e9e,\n    0xedd58794, 0xc5076689, 0xfcada5a4, 0x64c2f46d, 0xb3ba3243, 0x8974b4f9,\n    0x5a05aebd, 0x20afcd00, 0x39e2b008, 0x88a18a45, 0x600bde29, 0xf3971ace,\n    0xf37b0a6b, 0x7041495b, 0x70b707ab, 0x06beffbb, 0x4206051f, 0xe13c4ee3,\n    0xc1a78327, 0x91aa067c, 0x8295f72a, 0x732917a6, 0x1d871b4d, 0x4048f136,\n    0xf1840e7e, 0x6a6048c1, 0x696cb71a, 0x7ff501c3, 0x0fc6310b, 0x57e0f83d,\n    0x8cc26e74, 0x11a525a2, 0x946934c7, 0x7cd888f0, 0x8f9d8604, 0x4f86e73b,\n    0x04520316, 0xdeeea20c, 0xf1def496, 0x67687288, 0xf540c5b2, 0x22401484,\n    0x3478658a, 0xc2385746, 0x01979c2c, 0x5dad73c8, 0x0321f58b, 0xf0fedbee,\n    0x92826ddf, 0x284bec73, 0x5b1a1975, 0x03df1e11, 0x20963e01, 0xa17cf12b,\n    0x740d776e, 0xa7a6bf3c, 0x01b5cce4, 0x1118aa76, 0xfc6fac0a, 0xce927e9b,\n    0x00bf2567, 0x806f216c, 0xbca69056, 0x795bd3e9, 0xc9dc4557, 0x8929b6c2,\n    0x789d52ec, 0x3f3fbf40, 0xb9197368, 0xa38c15b5, 0xc3b44fa8, 0xca8333b0,\n    0xb7e8d590, 0xbe807feb, 0xbf5f8360, 0xd99e2f5c, 0x372928e1, 0x7c757c4c,\n    0x0db5b154, 0xc01ede02, 0x1fc86e78, 0x1f3985be, 0xb4805c77, 0x00c880fa,\n    0x974c1b12, 0x35ab0214, 0xb2dc840d, 0x5b00ae37, 0xd313b026, 0xb260969d,\n    0x7f4c8879, 0x1734c4d3, 0x49068631, 0xb9f6a021, 0x6b863e6f, 0xcee5debf,\n    0x29f8c9fb, 0x53dd6880, 0x72b61223, 0x1f67a9fd, 0x0a0f6993, 0x13e59119,\n    0x11cca12e, 0xfe6b6766, 0x16b6effc, 0x97918fc4, 0xc2b8a563, 0x94f2f741,\n    0x0bfa8c9a, 0xd1537ae8, 0xc1da349c, 0x873c60ca, 0x95005b85, 0x9b5c080e,\n    0xbc8abbd9, 0xe1eab1d2, 0x6dac9070, 0x4ea9ebf1, 0xe0cf30d4, 0x1ef5bd7b,\n    0xd161043e, 0x5d2fa2e2, 0xff5d3cae, 0x86ed9f87, 0x2aa1daa1, 0xbd731a34,\n    0x9e8f4b22, 0xb1c2c67a, 0xc21758c9, 0xa182215d, 0xccb01948, 0x8d168df7,\n    0x04238cfe, 0x368c3dbc, 0x0aeadca5, 0xbad21c24, 0x0a71fee5, 0x9fc5d872,\n    0x54c152c6, 0xfc329483, 0x6783384a, 0xeddb3e1c, 0x65f90e30, 0x884ad098,\n    0xce81675a, 0x4b372f7d, 0x68bf9a39, 0x43445f1e, 0x40f8d8cb, 0x90d5acb6,\n    0x4cd07282, 0x349eeb06, 0x0c9d5332, 0x520b24ef, 0x80020447, 0x67976491,\n    0x2f931ca3, 0xfe9b0535, 0xfcd30220, 0x61a9e6cc, 0xa487d8d7, 0x3f7c5dd1,\n    0x7d0127c5, 0x48f51d15, 0x60dea871, 0xc9a91cb7, 0x58b53bb3, 0x9d5e0b2d,\n    0x624a78b4, 0x30dbee1b, 0x9bdf22e7, 0x1df5c299, 0x2d5643a7, 0xf4dd35ff,\n    0x03ca8fd6, 0x53b47ed8, 0x6f2c19aa, 0xfeb0c1f4, 0x49e54438, 0x2f2577e6,\n    0xbf876969, 0x72440ea9, 0xfa0bafb8, 0x74f5b3a0, 0x7dd357cd, 0x89ce1358,\n    0x6ef2cdda, 0x1e7767f3, 0xa6be9fdb, 0x4f5f88f8, 0xba994a3a, 0x08ca6b65,\n    0xe0893818, 0x9e00a16a, 0xf42bfc8f, 0x9972eedc, 0x749c8b51, 0x32c05f5e,\n    0xd706805f, 0x6bfbb7cf, 0xd9210a10, 0x31a1db97, 0x923a9559, 0x37a7a1f6,\n    0x059f8861, 0xca493e62, 0x65157e81, 0x8f6467dd, 0xab85ff9f, 0x9331aff2,\n    0x8616b9f5, 0xedbd5695, 0xee7e29b1, 0x313ac44f, 0xb903112f, 0x432ef649,\n    0xdc0a36c0, 0x61cf2bba, 0x81474925, 0xa8b6c7ad, 0xee5931de, 0xb2f8158d,\n    0x59fb7409, 0x2e3dfaed, 0x9af25a3f, 0xe1fed4d5 ];\n\nvar rgb32_pixel_pad = 3;\nvar rgb32_pixel_r = 2;\nvar rgb32_pixel_g = 1;\nvar rgb32_pixel_b = 0;\nvar rgb32_pixel_size = 4;\n\n/* Helper Functions */\n\nfunction ceil_log_2(val)\n{\n    if (val === 1)\n        return 0;\n\n    var result = 1;\n    val -= 1;\n    while (val = val >>> 1)\n        result++;\n\n    return result;\n}\n\nfunction family_init(family, bpc, limit)\n{\n    var l;\n    for (l = 0; l < bpc; l++)\n    {\n        var altprefixlen, altcodewords;\n        altprefixlen = limit - bpc;\n        if (altprefixlen > bppmask[bpc - l])\n            altprefixlen = bppmask[bpc - l];\n\n        altcodewords = bppmask[bpc] + 1 - (altprefixlen << l);\n        family.nGRcodewords[l] = (altprefixlen << l);\n        family.notGRcwlen[l] = altprefixlen + ceil_log_2(altcodewords);\n        family.notGRprefixmask[l] = bppmask[32 - altprefixlen]>>>0;\n        family.notGRsuffixlen[l] = ceil_log_2(altcodewords);\n    }\n\n    /* decorelate_init */\n    var pixelbitmask = bppmask[bpc];\n    var pixelbitmaskshr = pixelbitmask >>> 1;\n    var s;\n    for (s = 0; s <= pixelbitmask; s++) {\n        if (s <= pixelbitmaskshr) {\n            family.xlatU2L[s] = s << 1;\n        } else {\n            family.xlatU2L[s] = ((pixelbitmask - s) << 1) + 1;\n        }\n    }\n\n    /* corelate_init */\n    for (s = 0; s <= pixelbitmask; s++) {\n        if (s & 0x01) {\n            family.xlatL2U[s] = pixelbitmask - (s >>> 1);\n        } else {\n            family.xlatL2U[s] = (s >>> 1);\n        }\n    }\n}\n\nfunction quic_image_bpc(type)\n{\n    switch (type) {\n    case QUIC_IMAGE_TYPE_GRAY:\n        return 8;\n    case QUIC_IMAGE_TYPE_RGB16:\n        return 5;\n    case QUIC_IMAGE_TYPE_RGB24:\n        return 8;\n    case QUIC_IMAGE_TYPE_RGB32:\n        return 8;\n    case QUIC_IMAGE_TYPE_RGBA:\n        return 8;\n    case QUIC_IMAGE_TYPE_INVALID:\n    default:\n        console.log(\"quic: bad image type\\n\");\n        return 0;\n    }\n}\n\nfunction cnt_l_zeroes(bits)\n{\n    if (bits & 0xff800000) {\n        return lzeroes[bits >>> 24];\n    } else if (bits & 0xffff8000) {\n        return 8 + lzeroes[(bits >>> 16) & 0x000000ff];\n    } else if (bits & 0xffffff80) {\n        return 16 + lzeroes[(bits >>> 8) & 0x000000ff];\n    } else {\n        return 24 + lzeroes[bits & 0x000000ff];\n    }\n}\n\nfunction golomb_decoding_8bpc(l, bits)\n{\n    var rc;\n    var cwlen;\n\n    if (bits < 0 || bits > family_8bpc.notGRprefixmask[l])\n    {\n        var zeroprefix = cnt_l_zeroes(bits);\n        cwlen = zeroprefix + 1 + l;\n        rc = (zeroprefix << l) | (bits >> (32-cwlen)) & bppmask[l];\n    }\n    else\n    {\n        cwlen = family_8bpc.notGRcwlen[l];\n        rc = family_8bpc.nGRcodewords[l] + ((bits >> (32-cwlen)) & bppmask[family_8bpc.notGRsuffixlen[l]]);\n    }\n    return {'codewordlen':cwlen, 'rc':rc};\n}\n\nfunction golomb_code_len_8bpc(n, l)\n{\n    if (n < family_8bpc.nGRcodewords[l]) {\n        return (n >>> l) + 1 + l;\n    } else {\n        return family_8bpc.notGRcwlen[l];\n    }\n}\n\nfunction QuicModel(bpc)\n{\n    var bstart;\n    var bend = 0;\n\n    this.levels = 0x1 << bpc;\n    this.n_buckets_ptrs = 0;\n\n    switch (evol) {\n        case 1:\n            this.repfirst = 3;\n            this.firstsize = 1;\n            this.repnext = 2;\n            this.mulsize = 2;\n            break;\n        case 3:\n            this.repfirst = 1;\n            this.firstsize = 1;\n            this.repnext = 1;\n            this.mulsize = 2;\n            break;\n        case 5:\n            this.repfirst = 1;\n            this.firstsize = 1;\n            this.repnext = 1;\n            this.mulsize = 4;\n            break;\n        case 0:\n        case 2:\n        case 4:\n            console.log(\"quic: findmodelparams(): evol value obsolete!!!\\n\");\n        default:\n            console.log(\"quic: findmodelparams(): evol out of range!!!\\n\");\n    }\n\n    this.n_buckets = 0;\n    var repcntr = this.repfirst + 1;\n    var bsize = this.firstsize;\n\n    do {\n        if (this.n_buckets) {\n            bstart = bend + 1;\n        } else {\n            bstart = 0;\n        }\n\n        if (!--repcntr) {\n            repcntr = this.repnext;\n            bsize *= this.mulsize;\n        }\n\n        bend = bstart + bsize - 1;\n        if (bend + bsize >= this.levels) {\n            bend = this.levels - 1;\n        }\n\n        if (!this.n_buckets_ptrs) {\n            this.n_buckets_ptrs = this.levels;\n        }\n\n        (this.n_buckets)++;\n    } while (bend < this.levels - 1);\n}\n\nQuicModel.prototype = {\n    n_buckets : 0,\n    n_buckets_ptrs : 0,\n    repfirst : 0,\n    firstsize : 0,\n    repnext : 0,\n    mulsize : 0,\n    levels :0\n}\n\nfunction QuicBucket()\n{\n    this.counters = [0,0,0,0,0,0,0,0];\n}\n\nQuicBucket.prototype = {\n    bestcode: 0,\n\n    reste : function (bpp)\n    {\n        this.bestcode = bpp;\n        this.counters = [0,0,0,0,0,0,0,0];\n    },\n\n    update_model_8bpc : function (state, curval, bpp)\n    {\n        var i;\n\n        var bestcode = bpp - 1;\n        var bestcodelen = (this.counters[bestcode] += golomb_code_len_8bpc(curval, bestcode));\n\n        for (i = bpp - 2; i >= 0; i--) {\n            var ithcodelen = (this.counters[i] += golomb_code_len_8bpc(curval, i));\n\n            if (ithcodelen < bestcodelen) {\n                bestcode = i;\n                bestcodelen = ithcodelen;\n            }\n        }\n\n        this.bestcode = bestcode;\n\n        if (bestcodelen > state.wm_trigger) {\n            for (i = 0; i < bpp; i++) {\n                this.counters[i] = this.counters[i] >>> 1;\n            }\n        }\n    }\n}\n\nfunction QuicFamilyStat()\n{\n    this.buckets_ptrs = [];\n    this.buckets_buf = [];\n}\n\nQuicFamilyStat.prototype = {\n\n    fill_model_structures : function(model)\n    {\n        var bstart;\n        var bend = 0;\n        var bnumber = 0;\n\n        var repcntr = model.repfirst + 1;\n        var bsize = model.firstsize;\n\n        do {\n            if (bnumber) {\n                bstart = bend + 1;\n            } else {\n                bstart = 0;\n            }\n\n            if (!--repcntr) {\n                repcntr = model.repnext;\n                bsize *= model.mulsize;\n            }\n\n            bend = bstart + bsize - 1;\n            if (bend + bsize >= model.levels) {\n                bend = model.levels - 1;\n            }\n\n            this.buckets_buf[bnumber] = new QuicBucket;\n\n            var i;\n            for (i = bstart; i <= bend; i++) {\n                this.buckets_ptrs[i] = this.buckets_buf[bnumber];\n            }\n\n            bnumber++;\n        } while (bend < model.levels - 1);\n        return true;\n    }\n}\n\nfunction QuicChannel(model_8bpc, model_5bpc)\n{\n    this.state = new CommonState;\n    this.family_stat_8bpc = new QuicFamilyStat;\n    this.family_stat_5bpc = new QuicFamilyStat;\n    this.correlate_row = { zero: 0 , row:[] };\n    this.model_8bpc = model_8bpc;\n    this.model_5bpc = model_5bpc;\n    this.buckets_ptrs = [];\n\n    if (!this.family_stat_8bpc.fill_model_structures(this.model_8bpc))\n        return undefined;\n\n    if (!this.family_stat_5bpc.fill_model_structures(this.model_5bpc))\n        return undefined;\n}\n\nQuicChannel.prototype = {\n\n    reste : function (bpc)\n    {\n        var j;\n        this.correlate_row = { zero: 0 , row: []};\n\n        if (bpc == 8) {\n            for (j = 0; j < this.model_8bpc.n_buckets; j++)\n                this.family_stat_8bpc.buckets_buf[j].reste(7);\n            this.buckets_ptrs = this.family_stat_8bpc.buckets_ptrs;\n        } else if (bpc == 5) {\n            for (j = 0; j < this.model_5bpc.n_buckets; j++)\n                this.family_stat_8bpc.buckets_buf[j].reste(4);\n            this.buckets_ptrs = this.family_stat_5bpc.buckets_ptrs;\n        } else {\n            console.log(\"quic: %s: bad bpc %d\\n\", __FUNCTION__, bpc);\n            return false;\n        }\n\n        this.state.reste();\n        return true;\n    }\n}\n\nfunction CommonState()\n{\n}\n\nCommonState.prototype = {\n    waitcnt: 0,\n    tabrand_seed: 0xff,\n    wm_trigger: 0,\n    wmidx: 0,\n    wmileft: wminext,\n    melcstate: 0,\n    melclen: 0,\n    melcorder: 0,\n\n    set_wm_trigger : function()\n    {\n        var wm = this.wmidx;\n        if (wm > 10) {\n            wm = 10;\n        }\n\n        this.wm_trigger = besttrigtab[Math.floor(evol / 2)][wm];\n    },\n\n    reste : function()\n    {\n        this.waitcnt = 0;\n        this.tabrand_seed = 0x0ff;\n        this.wmidx = 0;\n        this.wmileft = wminext;\n\n        this.set_wm_trigger();\n\n        this.melcstate = 0;\n        this.melclen = J[0];\n        this.melcorder = 1 << this.melclen;\n    },\n\n    tabrand : function()\n    {\n        this.tabrand_seed++;\n        return tabrand_chaos[this.tabrand_seed & 0x0ff];\n    }\n}\n\n\nfunction QuicEncoder()\n{\n    this.rgb_state = new CommonState;\n    this.model_8bpc = new QuicModel(8);\n    this.model_5bpc = new QuicModel(5);\n    this.channels = [];\n\n    var i;\n    for (i = 0; i < 4; i++) {\n        this.channels[i] = new QuicChannel(this.model_8bpc, this.model_5bpc);\n        if (!this.channels[i])\n        {\n            console.log(\"quic: failed to create channel\");\n            return undefined;\n        }\n    }\n}\n\nQuicEncoder.prototype = {\n                    type: 0,\n                    width: 0,\n                    height: 0,\n                    io_idx: 0,\n                    io_available_bits: 0,\n                    io_word: 0,\n                    io_next_word: 0,\n                    io_now: 0,\n                    io_end: 0,\n                    rows_completed: 0,\n              };\n\nQuicEncoder.prototype.reste = function(io_ptr)\n{\n    this.rgb_state.reste();\n\n    this.io_now = io_ptr;\n    this.io_end = this.io_now.length;\n    this.io_idx = 0;\n    this.rows_completed = 0;\n    return true;\n}\n\nQuicEncoder.prototype.read_io_word = function()\n{\n    if (this.io_idx >= this.io_end)\n        throw(\"quic: out of data\");\n    this.io_next_word = this.io_now[this.io_idx++] | this.io_now[this.io_idx++]<<8 | this.io_now[this.io_idx++]<<16 | this.io_now[this.io_idx++]<<24;\n}\n\nQuicEncoder.prototype.decode_eatbits = function (len)\n{\n    this.io_word = this.io_word << len;\n\n    var delta = (this.io_available_bits - len);\n    if (delta >= 0)\n    {\n        this.io_available_bits = delta;\n        this.io_word |= this.io_next_word >>> this.io_available_bits;\n    }\n    else\n    {\n        delta = -1 * delta;\n        this.io_word |= this.io_next_word << delta;\n        this.read_io_word();\n        this.io_available_bits = 32 - delta;\n        this.io_word |= this.io_next_word >>> this.io_available_bits;\n    }\n}\n\nQuicEncoder.prototype.decode_eat32bits = function()\n{\n    this.decode_eatbits(16);\n    this.decode_eatbits(16);\n}\n\nQuicEncoder.prototype.reste_channels = function(bpc)\n{\n    var i;\n\n    for (i = 0; i < 4; i++)\n        if (!this.channels[i].reste(bpc))\n            return false;\n    return true;\n}\n\nQuicEncoder.prototype.quic_decode_begin = function(io_ptr)\n{\n    if (!this.reste(io_ptr)) {\n        return false;\n    }\n\n    this.io_idx = 0;\n    this.io_next_word = this.io_now[this.io_idx++] | this.io_now[this.io_idx++]<<8 | this.io_now[this.io_idx++]<<16 | this.io_now[this.io_idx++]<<24;\n    this.io_word = this.io_next_word;\n    this.io_available_bits = 0;\n\n    var magic = this.io_word;\n    this.decode_eat32bits();\n    if (magic != 0x43495551) /*QUIC*/ {\n        console.log(\"quic: bad magic \"+magic.toString(16));\n        return false;\n    }\n\n    var version = this.io_word;\n    this.decode_eat32bits();\n    if (version != ((0 << 16) | (0 & 0xffff))) {\n        console.log(\"quic: bad version \"+version.toString(16));\n        return false;\n    }\n\n    this.type = this.io_word;\n    this.decode_eat32bits();\n\n    this.width = this.io_word;\n    this.decode_eat32bits();\n\n    this.height = this.io_word;\n    this.decode_eat32bits();\n\n    var bpc = quic_image_bpc(this.type);\n\n    if (!this.reste_channels(bpc))\n        return false;\n\n    return true;\n}\n\nQuicEncoder.prototype.quic_rgb32_uncompress_row0_seg = function (i, cur_row, end,\n                                       waitmask, bpc, bpc_mask)\n{\n    var stopidx;\n    var n_channels = 3;\n    var c;\n    var a;\n\n    if (!i) {\n        cur_row[rgb32_pixel_pad] = 0;\n        c = 0;\n        do\n        {\n            a = golomb_decoding_8bpc(this.channels[c].buckets_ptrs[this.channels[c].correlate_row.zero].bestcode, this.io_word);\n            this.channels[c].correlate_row.row[0] = a.rc;\n            cur_row[2-c] = (family_8bpc.xlatL2U[a.rc]&0xFF);\n            this.decode_eatbits(a.codewordlen);\n        } while (++c < n_channels);\n\n        if (this.rgb_state.waitcnt) {\n            --this.rgb_state.waitcnt;\n        } else {\n            this.rgb_state.waitcnt = (this.rgb_state.tabrand() & waitmask);\n            c = 0;\n            do\n            {\n                this.channels[c].buckets_ptrs[this.channels[c].correlate_row.zero].update_model_8bpc(this.rgb_state, this.channels[c].correlate_row.row[0], bpc);\n            } while (++c < n_channels);\n        }\n        stopidx = ++i + this.rgb_state.waitcnt;\n    } else {\n        stopidx = i + this.rgb_state.waitcnt;\n    }\n\n    while (stopidx < end) {\n        for (; i <= stopidx; i++) {\n            cur_row[(i* rgb32_pixel_size)+rgb32_pixel_pad] = 0;\n            c = 0;\n            do\n            {\n                a = golomb_decoding_8bpc(this.channels[c].buckets_ptrs[this.channels[c].correlate_row.row[i - 1]].bestcode, this.io_word);\n                this.channels[c].correlate_row.row[i] = a.rc;\n                cur_row[(i* rgb32_pixel_size)+(2-c)] = (family_8bpc.xlatL2U[a.rc] + cur_row[((i-1) * rgb32_pixel_size) + (2-c)]) & bpc_mask;\n                this.decode_eatbits(a.codewordlen);\n            } while (++c < n_channels);\n        }\n        c = 0;\n        do\n        {\n            this.channels[c].buckets_ptrs[this.channels[c].correlate_row.row[stopidx - 1]].update_model_8bpc(this.rgb_state, this.channels[c].correlate_row.row[stopidx], bpc);\n        } while (++c < n_channels);\n        stopidx = i + (this.rgb_state.tabrand() & waitmask);\n    }\n\n    for (; i < end; i++) {\n        cur_row[(i* rgb32_pixel_size)+rgb32_pixel_pad] = 0;\n        c = 0;\n        do\n        {\n            a = golomb_decoding_8bpc(this.channels[c].buckets_ptrs[this.channels[c].correlate_row.row[i - 1]].bestcode, this.io_word);\n            this.channels[c].correlate_row.row[i] = a.rc;\n            cur_row[(i* rgb32_pixel_size)+(2-c)] = (family_8bpc.xlatL2U[a.rc] + cur_row[((i-1) * rgb32_pixel_size) + (2-c)]) & bpc_mask;\n            this.decode_eatbits(a.codewordlen);\n        } while (++c < n_channels);\n    }\n    this.rgb_state.waitcnt = stopidx - end;\n}\n\nQuicEncoder.prototype.quic_rgb32_uncompress_row0 = function (cur_row)\n{\n    var bpc = 8;\n    var bpc_mask = 0xff;\n    var pos = 0;\n    var width = this.width;\n\n    while ((wmimax > this.rgb_state.wmidx) && (this.rgb_state.wmileft <= width)) {\n        if (this.rgb_state.wmileft) {\n            this.quic_rgb32_uncompress_row0_seg(pos, cur_row,\n                                       pos + this.rgb_state.wmileft,\n                                       bppmask[this.rgb_state.wmidx],\n                                       bpc, bpc_mask);\n            pos += this.rgb_state.wmileft;\n            width -= this.rgb_state.wmileft;\n        }\n\n        this.rgb_state.wmidx++;\n        this.rgb_state.set_wm_trigger();\n        this.rgb_state.wmileft = wminext;\n    }\n\n    if (width) {\n        this.quic_rgb32_uncompress_row0_seg(pos, cur_row, pos + width,\n                                   bppmask[this.rgb_state.wmidx], bpc, bpc_mask);\n        if (wmimax > this.rgb_state.wmidx) {\n            this.rgb_state.wmileft -= width;\n        }\n    }\n}\n\nQuicEncoder.prototype.quic_rgb32_uncompress_row_seg = function( prev_row, cur_row, i, end, bpc, bpc_mask)\n{\n    var n_channels = 3;\n    var waitmask = bppmask[this.rgb_state.wmidx];\n\n    var a;\n    var run_index = 0;\n    var stopidx = 0;\n    var run_end = 0;\n    var c;\n\n    if (!i)\n    {\n        cur_row[rgb32_pixel_pad] = 0;\n\n        c = 0;\n        do {\n            a = golomb_decoding_8bpc(this.channels[c].buckets_ptrs[this.channels[c].correlate_row.zero].bestcode, this.io_word);\n            this.channels[c].correlate_row.row[0] = a.rc;\n            cur_row[2-c] = (family_8bpc.xlatL2U[this.channels[c].correlate_row.row[0]] + prev_row[2-c]) & bpc_mask;\n            this.decode_eatbits(a.codewordlen);\n        } while (++c < n_channels);\n\n        if (this.rgb_state.waitcnt) {\n            --this.rgb_state.waitcnt;\n        } else {\n            this.rgb_state.waitcnt = (this.rgb_state.tabrand() & waitmask);\n            c = 0;\n            do {\n                this.channels[c].buckets_ptrs[this.channels[c].correlate_row.zero].update_model_8bpc(this.rgb_state, this.channels[c].correlate_row.row[0], bpc);\n            } while (++c < n_channels);\n        }\n        stopidx = ++i + this.rgb_state.waitcnt;\n    } else {\n        stopidx = i + this.rgb_state.waitcnt;\n    }\n    for (;;) {\n        var rc = 0;\n        while (stopidx < end && !rc) {\n            for (; i <= stopidx && !rc; i++) {\n                var pixel = i * rgb32_pixel_size;\n                var pixelm1 = (i-1) * rgb32_pixel_size;\n                var pixelm2 = (i-2) * rgb32_pixel_size;\n\n                if ( prev_row[pixelm1+rgb32_pixel_r] == prev_row[pixel+rgb32_pixel_r] && prev_row[pixelm1+rgb32_pixel_g] == prev_row[pixel+rgb32_pixel_g] && prev_row[pixelm1 + rgb32_pixel_b] == prev_row[pixel+rgb32_pixel_b])\n                {\n                    if (run_index != i && i > 2 && (cur_row[pixelm1+rgb32_pixel_r] == cur_row[pixelm2+rgb32_pixel_r] && cur_row[pixelm1+rgb32_pixel_g] == cur_row[pixelm2+rgb32_pixel_g] && cur_row[pixelm1+rgb32_pixel_b] == cur_row[pixelm2+rgb32_pixel_b]))\n                    {\n                        /* do run */\n                        this.rgb_state.waitcnt = stopidx - i;\n                        run_index = i;\n                        run_end = i + this.decode_run(this.rgb_state);\n\n                        for (; i < run_end; i++) {\n                            var pixel = i * rgb32_pixel_size;\n                            var pixelm1 = (i-1) * rgb32_pixel_size;\n                            cur_row[pixel+rgb32_pixel_pad] = 0;\n                            cur_row[pixel+rgb32_pixel_r] = cur_row[pixelm1+rgb32_pixel_r];\n                            cur_row[pixel+rgb32_pixel_g] = cur_row[pixelm1+rgb32_pixel_g];\n                            cur_row[pixel+rgb32_pixel_b] = cur_row[pixelm1+rgb32_pixel_b];\n                        }\n\n                        if (i == end) {\n                            return;\n                        }\n                        else\n                        {\n                            stopidx = i + this.rgb_state.waitcnt;\n                            rc = 1;\n                            break;\n                        }\n                    }\n                }\n\n                c = 0;\n                cur_row[pixel+rgb32_pixel_pad] = 0;\n                do {\n                    var cc = this.channels[c];\n                    var cr = cc.correlate_row;\n\n                    a = golomb_decoding_8bpc(cc.buckets_ptrs[cr.row[i-1]].bestcode, this.io_word);\n                    cr.row[i] = a.rc;\n                cur_row[pixel+(2-c)] = (family_8bpc.xlatL2U[a.rc] + ((cur_row[pixelm1+(2-c)] + prev_row[pixel+(2-c)]) >> 1)) & bpc_mask;\n                    this.decode_eatbits(a.codewordlen);\n                } while (++c < n_channels);\n            }\n            if (rc)\n                break;\n\n            c = 0;\n            do {\n                this.channels[c].buckets_ptrs[this.channels[c].correlate_row.row[stopidx - 1]].update_model_8bpc(this.rgb_state, this.channels[c].correlate_row.row[stopidx], bpc);\n            } while (++c < n_channels);\n\n            stopidx = i + (this.rgb_state.tabrand() & waitmask);\n        }\n\n        for (; i < end && !rc; i++) {\n            var pixel = i * rgb32_pixel_size;\n            var pixelm1 = (i-1) * rgb32_pixel_size;\n            var pixelm2 = (i-2) * rgb32_pixel_size;\n\n            if (prev_row[pixelm1+rgb32_pixel_r] == prev_row[pixel+rgb32_pixel_r] && prev_row[pixelm1+rgb32_pixel_g] == prev_row[pixel+rgb32_pixel_g] && prev_row[pixelm1+rgb32_pixel_b] == prev_row[pixel+rgb32_pixel_b])\n            {\n                if (run_index != i && i > 2 && (cur_row[pixelm1+rgb32_pixel_r] == cur_row[pixelm2+rgb32_pixel_r] && cur_row[pixelm1+rgb32_pixel_g] == cur_row[pixelm2+rgb32_pixel_g] && cur_row[pixelm1+rgb32_pixel_b] == cur_row[pixelm2+rgb32_pixel_b]))\n                {\n                    /* do run */\n                    this.rgb_state.waitcnt = stopidx - i;\n                    run_index = i;\n                    run_end = i + this.decode_run(this.rgb_state);\n\n                    for (; i < run_end; i++) {\n                        var pixel = i * rgb32_pixel_size;\n                        var pixelm1 = (i-1) * rgb32_pixel_size;\n                        cur_row[pixel+rgb32_pixel_pad] = 0;\n                        cur_row[pixel+rgb32_pixel_r] = cur_row[pixelm1+rgb32_pixel_r];\n                        cur_row[pixel+rgb32_pixel_g] = cur_row[pixelm1+rgb32_pixel_g];\n                        cur_row[pixel+rgb32_pixel_b] = cur_row[pixelm1+rgb32_pixel_b];\n                    }\n\n                    if (i == end) {\n                        return;\n                    }\n                    else\n                    {\n                        stopidx = i + this.rgb_state.waitcnt;\n                        rc = 1;\n                        break;\n                    }\n                }\n            }\n\n            cur_row[pixel+rgb32_pixel_pad] = 0;\n            c = 0;\n            do\n            {\n                a = golomb_decoding_8bpc(this.channels[c].buckets_ptrs[this.channels[c].correlate_row.row[i-1]].bestcode, this.io_word);\n                this.channels[c].correlate_row.row[i] = a.rc;\n                cur_row[pixel+(2-c)] = (family_8bpc.xlatL2U[a.rc] + ((cur_row[pixelm1+(2-c)] + prev_row[pixel+(2-c)]) >> 1)) & bpc_mask;\n                this.decode_eatbits(a.codewordlen);\n            } while (++c < n_channels);\n        }\n\n          if (!rc)\n          {\n            this.rgb_state.waitcnt = stopidx - end;\n            return;\n          }\n        }\n}\n\nQuicEncoder.prototype.decode_run = function(state)\n{\n    var runlen = 0;\n\n    do {\n        var hits;\n        var x = (~(this.io_word >>> 24)>>>0)&0xff;\n        var temp = zeroLUT[x];\n\n        for (hits = 1; hits <= temp; hits++) {\n            runlen += state.melcorder;\n\n            if (state.melcstate < 32) {\n                state.melclen = J[++state.melcstate];\n                state.melcorder = (1 << state.melclen);\n            }\n        }\n        if (temp != 8) {\n            this.decode_eatbits(temp + 1);\n\n            break;\n        }\n        this.decode_eatbits(8);\n    } while (true);\n\n    if (state.melclen) {\n        runlen += this.io_word >>> (32 - state.melclen);\n        this.decode_eatbits(state.melclen);\n    }\n\n    if (state.melcstate) {\n        state.melclen = J[--state.melcstate];\n        state.melcorder = (1 << state.melclen);\n    }\n\n    return runlen;\n}\n\nQuicEncoder.prototype.quic_rgb32_uncompress_row = function (prev_row, cur_row)\n{\n    var bpc = 8;\n    var bpc_mask = 0xff;\n    var pos = 0;\n    var width = this.width;\n\n    while ((wmimax > this.rgb_state.wmidx) && (this.rgb_state.wmileft <= width)) {\n        if (this.rgb_state.wmileft) {\n            this.quic_rgb32_uncompress_row_seg(prev_row, cur_row, pos,\n                                      pos + this.rgb_state.wmileft, bpc, bpc_mask);\n            pos += this.rgb_state.wmileft;\n            width -= this.rgb_state.wmileft;\n        }\n\n        this.rgb_state.wmidx++;\n        this.rgb_state.set_wm_trigger();\n        this.rgb_state.wmileft = wminext;\n    }\n\n    if (width) {\n        this.quic_rgb32_uncompress_row_seg(prev_row, cur_row, pos,\n                                  pos + width, bpc, bpc_mask);\n        if (wmimax > this.rgb_state.wmidx) {\n            this.rgb_state.wmileft -= width;\n        }\n    }\n}\n\nQuicEncoder.prototype.quic_four_uncompress_row0_seg = function (channel, i,\n                                       correlate_row, cur_row, end, waitmask,\n                                       bpc, bpc_mask)\n{\n    var stopidx;\n    var a;\n\n    if (i == 0) {\n        a = golomb_decoding_8bpc(channel.buckets_ptrs[correlate_row.zero].bestcode, this.io_word);\n        correlate_row.row[0] = a.rc;\n        cur_row[rgb32_pixel_pad] = family_8bpc.xlatL2U[a.rc];\n        this.decode_eatbits(a.codewordlen);\n\n        if (channel.state.waitcnt) {\n            --channel.state.waitcnt;\n        } else {\n            channel.state.waitcnt = (channel.state.tabrand() & waitmask);\n            channel.buckets_ptrs[correlate_row.zero].update_model_8bpc(channel.state, correlate_row.row[0], bpc);\n        }\n        stopidx = ++i + channel.state.waitcnt;\n    } else {\n        stopidx = i + channel.state.waitcnt;\n    }\n\n    while (stopidx < end) {\n        var pbucket;\n\n        for (; i <= stopidx; i++) {\n            pbucket = channel.buckets_ptrs[correlate_row.row[i - 1]];\n\n            a = golomb_decoding_8bpc(pbucket.bestcode, this.io_word);\n            correlate_row.row[i] = a.rc;\n            cur_row[(i*rgb32_pixel_size)+rgb32_pixel_pad] = (family_8bpc.xlatL2U[a.rc] + cur_row[((i-1)*rgb32_pixel_size)+rgb32_pixel_pad]) & bpc_mask;\n            this.decode_eatbits(a.codewordlen);\n        }\n\n        pbucket.update_model_8bpc(channel.state, correlate_row.row[stopidx], bpc);\n\n        stopidx = i + (channel.state.tabrand() & waitmask);\n    }\n\n    for (; i < end; i++) {\n        a = golomb_decoding_8bpc(channel.buckets_ptrs[correlate_row.row[i-1]].bestcode, this.io_word);\n\n        correlate_row.row[i] = a.rc;\n        cur_row[(i*rgb32_pixel_size)+rgb32_pixel_pad] = (family_8bpc.xlatL2U[a.rc] + cur_row[((i-1)*rgb32_pixel_size)+rgb32_pixel_pad]) & bpc_mask;\n        this.decode_eatbits(a.codewordlen);\n    }\n    channel.state.waitcnt = stopidx - end;\n}\n\nQuicEncoder.prototype.quic_four_uncompress_row0 = function(channel, cur_row)\n{\n    var bpc = 8;\n    var bpc_mask = 0xff;\n    var correlate_row = channel.correlate_row;\n    var pos = 0;\n    var width = this.width;\n\n    while ((wmimax > channel.state.wmidx) && (channel.state.wmileft <= width)) {\n        if (channel.state.wmileft) {\n            this.quic_four_uncompress_row0_seg(channel, pos, correlate_row, cur_row,\n                                       pos + channel.state.wmileft, bppmask[channel.state.wmidx],\n                                       bpc, bpc_mask);\n            pos += channel.state.wmileft;\n            width -= channel.state.wmileft;\n        }\n\n        channel.state.wmidx++;\n        channel.state.set_wm_trigger();\n        channel.state.wmileft = wminext;\n    }\n\n    if (width) {\n        this.quic_four_uncompress_row0_seg(channel, pos, correlate_row, cur_row, pos + width,\n                                   bppmask[channel.state.wmidx], bpc, bpc_mask);\n        if (wmimax > channel.state.wmidx) {\n            channel.state.wmileft -= width;\n        }\n    }\n}\n\nQuicEncoder.prototype.quic_four_uncompress_row_seg = function (channel,\n                                      correlate_row, prev_row, cur_row, i,\n                                      end, bpc, bpc_mask)\n{\n    var waitmask = bppmask[channel.state.wmidx];\n    var stopidx;\n\n    var run_index = 0;\n    var run_end;\n\n    var a;\n\n    if (i == 0) {\n        a = golomb_decoding_8bpc(channel.buckets_ptrs[correlate_row.zero].bestcode, this.io_word);\n\n        correlate_row.row[0] = a.rc\n        cur_row[rgb32_pixel_pad] = (family_8bpc.xlatL2U[a.rc] + prev_row[rgb32_pixel_pad]) & bpc_mask;\n        this.decode_eatbits(a.codewordlen);\n\n        if (channel.state.waitcnt) {\n            --channel.state.waitcnt;\n        } else {\n            channel.state.waitcnt = (channel.state.tabrand() & waitmask);\n            channel.buckets_ptrs[correlate_row.zero].update_model_8bpc(channel.state, correlate_row.row[0], bpc);\n        }\n        stopidx = ++i + channel.state.waitcnt;\n    } else {\n        stopidx = i + channel.state.waitcnt;\n    }\n    for (;;) {\n        var rc = 0;\n        while (stopidx < end && !rc) {\n            var pbucket;\n            for (; i <= stopidx && !rc; i++) {\n                var pixel = i * rgb32_pixel_size;\n                var pixelm1 = (i-1) * rgb32_pixel_size;\n                var pixelm2 = (i-2) * rgb32_pixel_size;\n\n                if (prev_row[pixelm1+rgb32_pixel_pad] == prev_row[pixel+rgb32_pixel_pad])\n                {\n                    if (run_index != i && i > 2 && cur_row[pixelm1+rgb32_pixel_pad] == cur_row[pixelm2+rgb32_pixel_pad])\n                    {\n                        /* do run */\n                        channel.state.waitcnt = stopidx - i;\n                        run_index = i;\n\n                        run_end = i + this.decode_run(channel.state);\n\n                        for (; i < run_end; i++) {\n                            var pixel = i * rgb32_pixel_size;\n                            var pixelm1 = (i-1) * rgb32_pixel_size;\n                            cur_row[pixel+rgb32_pixel_pad] = cur_row[pixelm1+rgb32_pixel_pad];\n                        }\n\n                        if (i == end) {\n                            return;\n                        }\n                        else\n                        {\n                            stopidx = i + channel.state.waitcnt;\n                            rc = 1;\n                            break;\n                        }\n                    }\n                }\n\n                pbucket = channel.buckets_ptrs[correlate_row.row[i - 1]];\n                a = golomb_decoding_8bpc(pbucket.bestcode, this.io_word);\n                correlate_row.row[i] = a.rc\n                cur_row[pixel+rgb32_pixel_pad] = (family_8bpc.xlatL2U[a.rc] + ((cur_row[pixelm1+rgb32_pixel_pad] + prev_row[pixel+rgb32_pixel_pad]) >> 1)) & bpc_mask;\n                this.decode_eatbits(a.codewordlen);\n            }\n            if (rc)\n                break;\n\n            pbucket.update_model_8bpc(channel.state, correlate_row.row[stopidx], bpc);\n\n            stopidx = i + (channel.state.tabrand() & waitmask);\n        }\n\n        for (; i < end && !rc; i++) {\n            var pixel = i * rgb32_pixel_size;\n            var pixelm1 = (i-1) * rgb32_pixel_size;\n            var pixelm2 = (i-2) * rgb32_pixel_size;\n            if (prev_row[pixelm1+rgb32_pixel_pad] == prev_row[pixel+rgb32_pixel_pad])\n            {\n                if (run_index != i && i > 2 && cur_row[pixelm1+rgb32_pixel_pad] == cur_row[pixelm2+rgb32_pixel_pad])\n                {\n                    /* do run */\n                    channel.state.waitcnt = stopidx - i;\n                    run_index = i;\n\n                    run_end = i + this.decode_run(channel.state);\n\n                    for (; i < run_end; i++) {\n                        var pixel = i * rgb32_pixel_size;\n                        var pixelm1 = (i-1) * rgb32_pixel_size;\n                        cur_row[pixel+rgb32_pixel_pad] = cur_row[pixelm1+rgb32_pixel_pad];\n                    }\n\n                    if (i == end) {\n                        return;\n                    }\n                    else\n                    {\n                        stopidx = i + channel.state.waitcnt;\n                        rc = 1;\n                        break;\n                    }\n                }\n            }\n\n            a = golomb_decoding_8bpc(channel.buckets_ptrs[correlate_row.row[i-1]].bestcode, this.io_word);\n            correlate_row.row[i] = a.rc;\n            cur_row[pixel+rgb32_pixel_pad] = (family_8bpc.xlatL2U[a.rc] + ((cur_row[pixelm1+rgb32_pixel_pad] + prev_row[pixel+rgb32_pixel_pad]) >> 1)) & bpc_mask;\n            this.decode_eatbits(a.codewordlen);\n        }\n\n        if (!rc)\n        {\n            channel.state.waitcnt = stopidx - end;\n            return;\n        }\n    }\n}\n\nQuicEncoder.prototype.quic_four_uncompress_row = function(channel, prev_row,\n                                                        cur_row)\n{\n    var bpc = 8;\n    var bpc_mask = 0xff;\n    var correlate_row = channel.correlate_row;\n    var pos = 0;\n    var width = this.width;\n\n    while ((wmimax > channel.state.wmidx) && (channel.state.wmileft <= width)) {\n        if (channel.state.wmileft) {\n            this.quic_four_uncompress_row_seg(channel, correlate_row, prev_row, cur_row, pos,\n                                      pos + channel.state.wmileft, bpc, bpc_mask);\n            pos += channel.state.wmileft;\n            width -= channel.state.wmileft;\n        }\n\n        channel.state.wmidx++;\n        channel.state.set_wm_trigger();\n        channel.state.wmileft = wminext;\n    }\n\n    if (width) {\n        this.quic_four_uncompress_row_seg(channel, correlate_row, prev_row, cur_row, pos,\n                                  pos + width, bpc, bpc_mask);\n        if (wmimax > channel.state.wmidx) {\n            channel.state.wmileft -= width;\n        }\n    }\n}\n\n/* We need to be generating rgb32 or rgba */\nQuicEncoder.prototype.quic_decode = function(buf, stride)\n{\n    var row;\n\n    switch (this.type)\n    {\n        case QUIC_IMAGE_TYPE_RGB32:\n        case QUIC_IMAGE_TYPE_RGB24:\n            this.channels[0].correlate_row.zero = 0;\n            this.channels[1].correlate_row.zero = 0;\n            this.channels[2].correlate_row.zero = 0;\n            this.quic_rgb32_uncompress_row0(buf);\n\n            this.rows_completed++;\n            for (row = 1; row < this.height; row++)\n            {\n                var prev = buf;\n                buf = prev.subarray(stride);\n                this.channels[0].correlate_row.zero = this.channels[0].correlate_row.row[0];\n                this.channels[1].correlate_row.zero = this.channels[1].correlate_row.row[0];\n                this.channels[2].correlate_row.zero = this.channels[2].correlate_row.row[0];\n                this.quic_rgb32_uncompress_row(prev, buf);\n                this.rows_completed++;\n            };\n            break;\n        case QUIC_IMAGE_TYPE_RGB16:\n            console.log(\"quic: unsupported output format\\n\");\n            return false;\n            break;\n        case QUIC_IMAGE_TYPE_RGBA:\n            this.channels[0].correlate_row.zero = 0;\n            this.channels[1].correlate_row.zero = 0;\n            this.channels[2].correlate_row.zero = 0;\n            this.quic_rgb32_uncompress_row0(buf);\n\n            this.channels[3].correlate_row.zero = 0;\n            this.quic_four_uncompress_row0(this.channels[3], buf);\n\n            this.rows_completed++;\n            for (row = 1; row < this.height; row++) {\n                var prev = buf;\n                buf = prev.subarray(stride);\n\n                this.channels[0].correlate_row.zero = this.channels[0].correlate_row.row[0];\n                this.channels[1].correlate_row.zero = this.channels[1].correlate_row.row[0];\n                this.channels[2].correlate_row.zero = this.channels[2].correlate_row.row[0];\n                this.quic_rgb32_uncompress_row(prev, buf);\n\n                this.channels[3].correlate_row.zero = this.channels[3].correlate_row.row[0];\n                this.quic_four_uncompress_row(encoder.channels[3], prev, buf);\n                this.rows_completed++;\n            }\n            break;\n\n        case QUIC_IMAGE_TYPE_GRAY:\n            console.log(\"quic: unsupported output format\\n\");\n            return false;\n            break;\n\n        case QUIC_IMAGE_TYPE_INVALID:\n        default:\n            console.log(\"quic: bad image type\\n\");\n            return false;\n    }\n    return true;\n}\n\nQuicEncoder.prototype.simple_quic_decode = function(buf)\n{\n    var stride = 4; /* FIXME - proper stride calc please */\n    if (!this.quic_decode_begin(buf))\n        return undefined;\n    if (this.type != QUIC_IMAGE_TYPE_RGB32 && this.type != QUIC_IMAGE_TYPE_RGB24\n        && this.type != QUIC_IMAGE_TYPE_RGBA)\n        return undefined;\n    var out = new Uint8Array(this.width*this.height*4);\n    out[0] = 69;\n    if (this.quic_decode( out, (this.width * stride)))\n        return out;\n    return undefined;\n}\n\nfunction SpiceQuic()\n{\n}\n\nSpiceQuic.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        if (!encoder)\n            throw(\"quic: no quic encoder\");\n        this.data_size = dv.getUint32(at, true);\n        at += 4;\n        var buf = new Uint8Array(mb.slice(at));\n        this.outptr = encoder.simple_quic_decode(buf);\n        if (this.outptr)\n        {\n            this.type = encoder.type;\n            this.width = encoder.width;\n            this.height = encoder.height;\n        }\n        at += buf.length;\n        return at;\n    },\n}\n\nfunction convert_spice_quic_to_web(context, spice_quic)\n{\n    var ret = context.createImageData(spice_quic.width, spice_quic.height);\n    var i;\n    for (i = 0; i < (ret.width * ret.height * 4); i+=4)\n    {\n        ret.data[i + 0] = spice_quic.outptr[i + 2];\n        ret.data[i + 1] = spice_quic.outptr[i + 1];\n        ret.data[i + 2] = spice_quic.outptr[i + 0];\n        if (spice_quic.type !== QUIC_IMAGE_TYPE_RGBA)\n            ret.data[i + 3] = 255;\n        else\n            ret.data[i + 3] = 255 - spice_quic.outptr[i + 3];\n    }\n   return ret;\n}\n\n/* Module initialization */\nif (need_init)\n{\n    need_init = false;\n\n    family_init(family_8bpc, 8, DEFmaxclen);\n    family_init(family_5bpc, 5, DEFmaxclen);\n    /* init_zeroLUT */\n    var i, j, k, l;\n\n    j = k = 1;\n    l = 8;\n    for (i = 0; i < 256; ++i) {\n        zeroLUT[i] = l;\n        --k;\n        if (k == 0) {\n            k = j;\n            --l;\n            j *= 2;\n        }\n    }\n\n    encoder = new QuicEncoder;\n\n    if (!encoder)\n        throw(\"quic: failed to create encoder\");\n}\n;\ndefine(\"spice-quic\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2012 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n/*----------------------------------------------------------------------------\n**  bitmap.js\n**      Handle SPICE_IMAGE_TYPE_BITMAP\n**--------------------------------------------------------------------------*/\nfunction convert_spice_bitmap_to_web(context, spice_bitmap)\n{\n    var ret;\n    var offset, x;\n    var u8 = new Uint8Array(spice_bitmap.data);\n    if (spice_bitmap.format != SPICE_BITMAP_FMT_32BIT &&\n        spice_bitmap.format != SPICE_BITMAP_FMT_RGBA)\n        return undefined;\n\n    ret = context.createImageData(spice_bitmap.x, spice_bitmap.y);\n    for (offset = 0; offset < (spice_bitmap.y * spice_bitmap.stride); )\n        for (x = 0; x < spice_bitmap.x; x++, offset += 4)\n        {\n            ret.data[offset + 0 ] = u8[offset + 2];\n            ret.data[offset + 1 ] = u8[offset + 1];\n            ret.data[offset + 2 ] = u8[offset + 0];\n\n            // FIXME - We effectively treat all images as having SPICE_IMAGE_FLAGS_HIGH_BITS_SET\n            if (spice_bitmap.format == SPICE_BITMAP_FMT_32BIT)\n                ret.data[offset + 3] = 255;\n            else\n                ret.data[offset + 3] = u8[offset];\n        }\n\n    return ret;\n}\n;\ndefine(\"spice-bitmap\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2012 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*----------------------------------------------------------------------------\n**  SpiceDataView\n** FIXME FIXME \n**    This is used because Firefox does not have DataView yet.\n**    We should use DataView if we have it, because it *has* to \n**    be faster than this code \n**--------------------------------------------------------------------------*/\nfunction SpiceDataView(buffer, byteOffset, byteLength)\n{\n    if (byteOffset !== undefined)\n    {\n        if (byteLength !== undefined)\n            this.u8 = new Uint8Array(buffer, byteOffset, byteLength);\n        else\n            this.u8 = new Uint8Array(buffer, byteOffset);\n    }\n    else\n        this.u8 = new Uint8Array(buffer);\n};\n\nSpiceDataView.prototype = {\n    getUint8:  function(byteOffset)\n    {\n        return this.u8[byteOffset];\n    },\n    getUint16:  function(byteOffset, littleEndian)\n    {\n        var low = 1, high = 0;\n        if (littleEndian)\n        {\n            low = 0;\n            high = 1;\n        }\n\n        return (this.u8[byteOffset + high] << 8) | this.u8[byteOffset + low];\n    },\n    getUint32:  function(byteOffset, littleEndian)\n    {\n        var low = 2, high = 0;\n        if (littleEndian)\n        {\n            low = 0;\n            high = 2;\n        }\n\n        return (this.getUint16(byteOffset + high, littleEndian) << 16) | \n                this.getUint16(byteOffset + low, littleEndian);\n    },\n    getUint64: function (byteOffset, littleEndian)\n    {\n        var low = 4, high = 0;\n        if (littleEndian)\n        {\n            low = 0;\n            high = 4;\n        }\n\n        return (this.getUint32(byteOffset + high, littleEndian) << 32) |\n                this.getUint32(byteOffset + low, littleEndian);\n    },\n    setUint8:  function(byteOffset, b)\n    {\n        this.u8[byteOffset] = (b & 0xff);\n    },\n    setUint16:  function(byteOffset, i, littleEndian)\n    {\n        var low = 1, high = 0;\n        if (littleEndian)\n        {\n            low = 0;\n            high = 1;\n        }\n        this.u8[byteOffset + high] = (i & 0xffff) >> 8;\n        this.u8[byteOffset + low]  = (i & 0x00ff);\n    },\n    setUint32:  function(byteOffset, w, littleEndian)\n    {\n        var low = 2, high = 0;\n        if (littleEndian)\n        {\n            low = 0;\n            high = 2;\n        }\n\n        this.setUint16(byteOffset + high, (w & 0xffffffff) >> 16, littleEndian);\n        this.setUint16(byteOffset + low,  (w & 0x0000ffff), littleEndian);\n    },\n    setUint64:  function(byteOffset, w, littleEndian)\n    {\n        var low = 4, high = 0;\n        if (littleEndian)\n        {\n            low = 0;\n            high = 4;\n        }\n\n        this.setUint32(byteOffset + high, (w & 0xffffffffffffffff) >> 32, littleEndian);\n        this.setUint32(byteOffset + low,  (w & 0x00000000ffffffff), littleEndian);\n    },\n}\n;\ndefine(\"spice-spicedataview\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2012 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*----------------------------------------------------------------------------\n**  Spice types\n**      This file contains classes for common spice types.\n**  Generally, they are used as helpers in reading and writing messages\n**  to and from the server.\n**--------------------------------------------------------------------------*/\n\nfunction SpiceChannelId()\n{\n}\nSpiceChannelId.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        this.type = dv.getUint8(at, true); at ++;\n        this.id = dv.getUint8(at, true); at ++;\n        return at;\n    },\n}\n\nfunction SpiceRect()\n{\n}\n\nSpiceRect.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        this.top = dv.getUint32(at, true); at += 4;\n        this.left = dv.getUint32(at, true); at += 4;\n        this.bottom = dv.getUint32(at, true); at += 4;\n        this.right = dv.getUint32(at, true); at += 4;\n        return at;\n    },\n    is_same_size : function(r)\n    {\n        if ((this.bottom - this.top) == (r.bottom - r.top) &&\n            (this.right - this.left) == (r.right - r.left) )\n            return true;\n\n        return false;\n    },\n}\n\nfunction SpiceClipRects()\n{\n}\n\nSpiceClipRects.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        var i;\n        this.num_rects = dv.getUint32(at, true); at += 4;\n        if (this.num_rects > 0)\n            this.rects = [];\n        for (i = 0; i < this.num_rects; i++)\n        {\n            this.rects[i] = new SpiceRect();\n            at = this.rects[i].from_dv(dv, at, mb);\n        }\n        return at;\n    },\n}\n\nfunction SpiceClip()\n{\n}\n\nSpiceClip.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        this.type = dv.getUint8(at, true); at ++;\n        if (this.type == SPICE_CLIP_TYPE_RECTS)\n        {\n            this.rects = new SpiceClipRects();\n            at = this.rects.from_dv(dv, at, mb);\n        }\n        return at;\n    },\n}\n\nfunction SpiceImageDescriptor()\n{\n}\n\nSpiceImageDescriptor.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        this.id = dv.getUint64(at, true); at += 8;\n        this.type  = dv.getUint8(at, true); at ++;\n        this.flags = dv.getUint8(at, true); at ++;\n        this.width = dv.getUint32(at, true); at += 4;\n        this.height= dv.getUint32(at, true); at += 4;\n        return at;\n    },\n}\n\nfunction SpicePalette()\n{\n}\n\nSpicePalette.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        var i;\n        this.unique = dv.getUint64(at, true); at += 8;\n        this.num_ents = dv.getUint16(at, true); at += 2;\n        this.ents = [];\n        for (i = 0; i < this.num_ents; i++)\n        {\n            this.ents[i] = dv.getUint32(at, true); at += 4;\n        }\n        return at;\n    },\n}\n\nfunction SpiceBitmap()\n{\n}\n\nSpiceBitmap.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        this.format = dv.getUint8(at, true); at++;\n        this.flags  = dv.getUint8(at, true); at++;\n        this.x = dv.getUint32(at, true); at += 4;\n        this.y = dv.getUint32(at, true); at += 4;\n        this.stride = dv.getUint32(at, true); at += 4;\n        if (this.flags & SPICE_BITMAP_FLAGS_PAL_FROM_CACHE)\n        {\n            this.palette_id = dv.getUint64(at, true); at += 8;\n        }\n        else\n        {\n            var offset = dv.getUint32(at, true); at += 4;\n            if (offset == 0)\n                this.palette = null;\n            else\n            {\n                this.palette = new SpicePalette;\n                this.palette.from_dv(dv, offset, mb);\n            }\n        }\n        // FIXME - should probably constrain this to the offset\n        //          of palette, if non zero\n        this.data   = mb.slice(at);\n        at += this.data.byteLength;\n        return at;\n    },\n}\n\nfunction SpiceImage()\n{\n}\n\nSpiceImage.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        this.descriptor = new SpiceImageDescriptor;\n        at = this.descriptor.from_dv(dv, at, mb);\n\n        if (this.descriptor.type == SPICE_IMAGE_TYPE_LZ_RGB)\n        {\n            this.lz_rgb = new Object();\n            this.lz_rgb.length = dv.getUint32(at, true); at += 4;\n            var initial_at = at;\n            this.lz_rgb.magic = \"\";\n            for (var i = 3; i >= 0; i--)\n                this.lz_rgb.magic += String.fromCharCode(dv.getUint8(at + i));\n            at += 4;\n\n            // NOTE:  The endian change is *correct*\n            this.lz_rgb.version = dv.getUint32(at); at += 4;\n            this.lz_rgb.type = dv.getUint32(at); at += 4;\n            this.lz_rgb.width = dv.getUint32(at); at += 4;\n            this.lz_rgb.height = dv.getUint32(at); at += 4;\n            this.lz_rgb.stride = dv.getUint32(at); at += 4;\n            this.lz_rgb.top_down = dv.getUint32(at); at += 4;\n\n            var header_size = at - initial_at;\n\n            this.lz_rgb.data   = mb.slice(at, this.lz_rgb.length + at - header_size);\n            at += this.lz_rgb.data.byteLength;\n\n        }\n\n        if (this.descriptor.type == SPICE_IMAGE_TYPE_BITMAP)\n        {\n            this.bitmap = new SpiceBitmap;\n            at = this.bitmap.from_dv(dv, at, mb);\n        }\n\n        if (this.descriptor.type == SPICE_IMAGE_TYPE_SURFACE)\n        {\n            this.surface_id = dv.getUint32(at, true); at += 4;\n        }\n\n        if (this.descriptor.type == SPICE_IMAGE_TYPE_JPEG)\n        {\n            this.jpeg = new Object;\n            this.jpeg.data_size = dv.getUint32(at, true); at += 4;\n            this.jpeg.data = mb.slice(at);\n            at += this.jpeg.data.byteLength;\n        }\n\n        if (this.descriptor.type == SPICE_IMAGE_TYPE_JPEG_ALPHA)\n        {\n            this.jpeg_alpha = new Object;\n            this.jpeg_alpha.flags = dv.getUint8(at, true); at += 1;\n            this.jpeg_alpha.jpeg_size = dv.getUint32(at, true); at += 4;\n            this.jpeg_alpha.data_size = dv.getUint32(at, true); at += 4;\n            this.jpeg_alpha.data = mb.slice(at, this.jpeg_alpha.jpeg_size + at);\n            at += this.jpeg_alpha.data.byteLength;\n            // Alpha channel is an LZ image\n            this.jpeg_alpha.alpha = new Object();\n            this.jpeg_alpha.alpha.length = this.jpeg_alpha.data_size - this.jpeg_alpha.jpeg_size;\n            var initial_at = at;\n            this.jpeg_alpha.alpha.magic = \"\";\n            for (var i = 3; i >= 0; i--)\n                this.jpeg_alpha.alpha.magic += String.fromCharCode(dv.getUint8(at + i));\n            at += 4;\n\n            // NOTE:  The endian change is *correct*\n            this.jpeg_alpha.alpha.version = dv.getUint32(at); at += 4;\n            this.jpeg_alpha.alpha.type = dv.getUint32(at); at += 4;\n            this.jpeg_alpha.alpha.width = dv.getUint32(at); at += 4;\n            this.jpeg_alpha.alpha.height = dv.getUint32(at); at += 4;\n            this.jpeg_alpha.alpha.stride = dv.getUint32(at); at += 4;\n            this.jpeg_alpha.alpha.top_down = dv.getUint32(at); at += 4;\n\n            var header_size = at - initial_at;\n\n            this.jpeg_alpha.alpha.data   = mb.slice(at, this.jpeg_alpha.alpha.length + at - header_size);\n            at += this.jpeg_alpha.alpha.data.byteLength;\n        }\n\n        if (this.descriptor.type == SPICE_IMAGE_TYPE_QUIC)\n        {\n            this.quic = new SpiceQuic;\n            at = this.quic.from_dv(dv, at, mb);\n        }\n        return at;\n    },\n}\n\n\nfunction SpiceQMask()\n{\n}\n\nSpiceQMask.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        this.flags  = dv.getUint8(at, true); at++;\n        this.pos = new SpicePoint;\n        at = this.pos.from_dv(dv, at, mb);\n        var offset = dv.getUint32(at, true); at += 4;\n        if (offset == 0)\n        {\n            this.bitmap = null;\n            return at;\n        }\n\n        this.bitmap = new SpiceImage;\n        return this.bitmap.from_dv(dv, offset, mb);\n    },\n}\n\n\nfunction SpicePattern()\n{\n}\n\nSpicePattern.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        var offset = dv.getUint32(at, true); at += 4;\n        if (offset == 0)\n        {\n            this.pat = null;\n        }\n        else\n        {\n            this.pat = new SpiceImage;\n            this.pat.from_dv(dv, offset, mb);\n        }\n\n        this.pos = new SpicePoint;\n        return this.pos.from_dv(dv, at, mb);\n    }\n}\n\nfunction SpiceBrush()\n{\n}\n\nSpiceBrush.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        this.type = dv.getUint8(at, true); at ++;\n        if (this.type == SPICE_BRUSH_TYPE_SOLID)\n        {\n            this.color = dv.getUint32(at, true); at += 4;\n        }\n        else if (this.type == SPICE_BRUSH_TYPE_PATTERN)\n        {\n            this.pattern = new SpicePattern;\n            at = this.pattern.from_dv(dv, at, mb);\n        }\n        return at;\n    },\n}\n\nfunction SpiceFill()\n{\n}\n\nSpiceFill.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        this.brush = new SpiceBrush;\n        at = this.brush.from_dv(dv, at, mb);\n        this.rop_descriptor = dv.getUint16(at, true); at += 2;\n        this.mask = new SpiceQMask;\n        return this.mask.from_dv(dv, at, mb);\n    },\n}\n\n\nfunction SpiceCopy()\n{\n}\n\nSpiceCopy.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        var offset = dv.getUint32(at, true); at += 4;\n        if (offset == 0)\n        {\n            this.src_bitmap = null;\n        }\n        else\n        {\n            this.src_bitmap = new SpiceImage;\n            this.src_bitmap.from_dv(dv, offset, mb);\n        }\n        this.src_area = new SpiceRect;\n        at = this.src_area.from_dv(dv, at, mb);\n        this.rop_descriptor = dv.getUint16(at, true); at += 2;\n        this.scale_mode = dv.getUint8(at, true); at ++;\n        this.mask = new SpiceQMask;\n        return this.mask.from_dv(dv, at, mb);\n    },\n}\n\nfunction SpicePoint16()\n{\n}\n\nSpicePoint16.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        this.x = dv.getUint16(at, true); at += 2;\n        this.y = dv.getUint16(at, true); at += 2;\n        return at;\n    },\n}\n\nfunction SpicePoint()\n{\n}\n\nSpicePoint.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        this.x = dv.getUint32(at, true); at += 4;\n        this.y = dv.getUint32(at, true); at += 4;\n        return at;\n    },\n}\n\nfunction SpiceCursorHeader()\n{\n}\n\nSpiceCursorHeader.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        this.unique = dv.getUint64(at, true); at += 8;\n        this.type = dv.getUint8(at, true); at ++;\n        this.width = dv.getUint16(at, true); at += 2;\n        this.height = dv.getUint16(at, true); at += 2;\n        this.hot_spot_x = dv.getUint16(at, true); at += 2;\n        this.hot_spot_y = dv.getUint16(at, true); at += 2;\n        return at;\n    },\n}\n\nfunction SpiceCursor()\n{\n}\n\nSpiceCursor.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        this.flags = dv.getUint16(at, true); at += 2;\n        if (this.flags & SPICE_CURSOR_FLAGS_NONE)\n            this.header = null;\n        else\n        {\n            this.header = new SpiceCursorHeader;\n            at = this.header.from_dv(dv, at, mb);\n            this.data   = mb.slice(at);\n            at += this.data.byteLength;\n        }\n        return at;\n    },\n}\n\nfunction SpiceSurface()\n{\n}\n\nSpiceSurface.prototype =\n{\n    from_dv: function(dv, at, mb)\n    {\n        this.surface_id = dv.getUint32(at, true); at += 4;\n        this.width = dv.getUint32(at, true); at += 4;\n        this.height = dv.getUint32(at, true); at += 4;\n        this.format = dv.getUint32(at, true); at += 4;\n        this.flags = dv.getUint32(at, true); at += 4;\n        return at;\n    },\n}\n\n/* FIXME - SpiceImage  types lz_plt, jpeg, zlib_glz, and jpeg_alpha are \n           completely unimplemented */\n;\ndefine(\"spice-spicetype\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2012 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*----------------------------------------------------------------------------\n**  Spice messages\n**      This file contains classes for passing messages to and from\n**  a spice server.  This file should arguably be generated from \n**  spice.proto, but it was instead put together by hand.\n**--------------------------------------------------------------------------*/\nfunction SpiceLinkHeader(a, at)\n{\n    this.magic = SPICE_MAGIC;\n    this.major_version = SPICE_VERSION_MAJOR;\n    this.minor_version = SPICE_VERSION_MINOR;\n    this.size = 0;\n    if (a !== undefined)\n        this.from_buffer(a, at);\n}\n\nSpiceLinkHeader.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.magic = \"\";\n        for (var i = 0; i < 4; i++)\n            this.magic += String.fromCharCode(dv.getUint8(at + i));\n        at += 4;\n\n        this.major_version = dv.getUint32(at, true); at += 4;\n        this.minor_version = dv.getUint32(at, true); at += 4;\n        this.size = dv.getUint32(at, true); at += 4;\n    },\n\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        for (var i = 0; i < 4; i++)\n            dv.setUint8(at + i, this.magic.charCodeAt(i));\n        at += 4;\n\n        dv.setUint32(at, this.major_version, true); at += 4;\n        dv.setUint32(at, this.minor_version, true); at += 4;\n        dv.setUint32(at, this.size, true); at += 4;\n    },\n    buffer_size: function()\n    { \n        return 16;\n    },\n}\n\nfunction SpiceLinkMess(a, at)\n{\n    this.connection_id = 0;\n    this.channel_type = 0;\n    this.channel_id = 0;\n    this.common_caps = [];\n    this.channel_caps = [];\n\n    if (a !== undefined)\n        this.from_buffer(a, at);\n}\n\nSpiceLinkMess.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var i;\n        var orig_at = at;\n        var dv = new SpiceDataView(a);\n        this.connection_id = dv.getUint32(at, true); at += 4;\n        this.channel_type = dv.getUint8(at, true); at++;\n        this.channel_id = dv.getUint8(at, true); at++;\n        var num_common_caps = dv.getUint32(at, true); at += 4;\n        var num_channel_caps  = dv.getUint32(at, true); at += 4;\n        var caps_offset = dv.getUint32(at, true); at += 4;\n\n        at = orig_at + caps_offset;\n        this.common_caps = [];\n        for (i = 0; i < num_common_caps; i++)\n        {\n            this.common_caps.unshift(dv.getUint32(at, true)); at += 4;\n        }\n\n        this.channel_caps = [];\n        for (i = 0; i < num_channel_caps; i++)\n        {\n            this.channel_caps.unshift(dv.getUint32(at, true)); at += 4;\n        }\n    },\n\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var orig_at = at;\n        var i;\n        var dv = new SpiceDataView(a);\n        dv.setUint32(at, this.connection_id, true); at += 4;\n        dv.setUint8(at, this.channel_type, true); at++;\n        dv.setUint8(at, this.channel_id, true); at++;\n        dv.setUint32(at, this.common_caps.length, true); at += 4;\n        dv.setUint32(at, this.channel_caps.length, true); at += 4;\n        dv.setUint32(at, (at - orig_at) + 4, true); at += 4;\n\n        for (i = 0; i < this.common_caps.length; i++)\n        {\n            dv.setUint32(at, this.common_caps[i], true); at += 4;\n        }\n\n        for (i = 0; i < this.channel_caps.length; i++)\n        {\n            dv.setUint32(at, this.channel_caps[i], true); at += 4;\n        }\n    },\n    buffer_size: function()\n    {\n        return 18 + (4 * this.common_caps.length) + (4 * this.channel_caps.length);\n    }\n}\n\nfunction SpiceLinkReply(a, at)\n{\n    this.error = 0;\n    this.pub_key = undefined;\n    this.common_caps = [];\n    this.channel_caps = [];\n\n    if (a !== undefined)\n        this.from_buffer(a, at);\n}\n\nSpiceLinkReply.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var i;\n        var orig_at = at;\n        var dv = new SpiceDataView(a);\n        this.error = dv.getUint32(at, true); at += 4;\n\n        this.pub_key = create_rsa_from_mb(a, at);\n        at += SPICE_TICKET_PUBKEY_BYTES;\n\n        var num_common_caps = dv.getUint32(at, true); at += 4;\n        var num_channel_caps  = dv.getUint32(at, true); at += 4;\n        var caps_offset = dv.getUint32(at, true); at += 4;\n\n        at = orig_at + caps_offset;\n        this.common_caps = [];\n        for (i = 0; i < num_common_caps; i++)\n        {\n            this.common_caps.unshift(dv.getUint32(at, true)); at += 4;\n        }\n\n        this.channel_caps = [];\n        for (i = 0; i < num_channel_caps; i++)\n        {\n            this.channel_caps.unshift(dv.getUint32(at, true)); at += 4;\n        }\n    },\n}\n\nfunction SpiceLinkAuthTicket(a, at)\n{\n    this.auth_mechanism = 0;\n    this.encrypted_data = undefined;\n}\n\nSpiceLinkAuthTicket.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var i;\n        var dv = new SpiceDataView(a);\n        dv.setUint32(at, this.auth_mechanism, true); at += 4;\n        for (i = 0; i < SPICE_TICKET_KEY_PAIR_LENGTH / 8; i++)\n        {\n            if (this.encrypted_data && i < this.encrypted_data.length)\n                dv.setUint8(at, this.encrypted_data[i], true);\n            else\n                dv.setUint8(at, 0, true);\n            at++;\n        }\n    },\n    buffer_size: function()\n    {\n        return 4 + (SPICE_TICKET_KEY_PAIR_LENGTH / 8);\n    }\n}\n\nfunction SpiceLinkAuthReply(a, at)\n{\n    this.auth_code = 0;\n    if (a !== undefined)\n        this.from_buffer(a, at);\n}\n\nSpiceLinkAuthReply.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.auth_code = dv.getUint32(at, true); at += 4;\n    },\n    buffer_size: function()\n    {\n        return 4;\n    }\n}\n\nfunction SpiceMiniData(a, at)\n{\n    this.type = 0;\n    this.size = 0;\n    this.data = undefined;\n    if (a !== undefined)\n        this.from_buffer(a, at);\n}\n\nSpiceMiniData.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var i;\n        var dv = new SpiceDataView(a);\n        this.type = dv.getUint16(at, true); at += 2;\n        this.size = dv.getUint32(at, true); at += 4;\n        if (a.byteLength > at)\n        {\n            this.data = a.slice(at);\n            at += this.data.byteLength;\n        }\n    },\n    to_buffer : function(a, at)\n    {\n        at = at || 0;\n        var i;\n        var dv = new SpiceDataView(a);\n        dv.setUint16(at, this.type, true); at += 2;\n        dv.setUint32(at, this.data ? this.data.byteLength : 0, true); at += 4;\n        if (this.data && this.data.byteLength > 0)\n        {\n            var u8arr = new Uint8Array(this.data);\n            for (i = 0; i < u8arr.length; i++, at++)\n                dv.setUint8(at, u8arr[i], true);\n        }\n    },\n    build_msg : function(in_type,  extra)\n    {\n        this.type = in_type;\n        this.size = extra.buffer_size();\n        this.data = new ArrayBuffer(this.size);\n        extra.to_buffer(this.data);\n    },\n    buffer_size: function()\n    {\n        if (this.data)\n            return 6 + this.data.byteLength;\n        else\n            return 6;\n    },\n}\n\nfunction SpiceMsgChannels(a, at)\n{\n    this.num_of_channels = 0;\n    this.channels = [];\n    if (a !== undefined)\n        this.from_buffer(a, at);\n}\n\nSpiceMsgChannels.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var i;\n        var dv = new SpiceDataView(a);\n        this.num_of_channels = dv.getUint32(at, true); at += 4;\n        for (i = 0; i < this.num_of_channels; i++)\n        {\n            var chan = new SpiceChannelId();\n            at = chan.from_dv(dv, at, a);\n            this.channels.push(chan);\n        }\n    },\n}\n\nfunction SpiceMsgMainInit(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgMainInit.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.session_id = dv.getUint32(at, true); at += 4;\n        this.display_channels_hint = dv.getUint32(at, true); at += 4;\n        this.supported_mouse_modes = dv.getUint32(at, true); at += 4;\n        this.current_mouse_mode = dv.getUint32(at, true); at += 4;\n        this.agent_connected = dv.getUint32(at, true); at += 4;\n        this.agent_tokens = dv.getUint32(at, true); at += 4;\n        this.multi_media_time = dv.getUint32(at, true); at += 4;\n        this.ram_hint = dv.getUint32(at, true); at += 4;\n    },\n}\n\nfunction SpiceMsgMainMouseMode(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgMainMouseMode.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.supported_modes = dv.getUint16(at, true); at += 2;\n        this.current_mode = dv.getUint16(at, true); at += 2;\n    },\n}\n\nfunction SpiceMsgMainAgentData(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgMainAgentData.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.protocol = dv.getUint32(at, true); at += 4;\n        this.type = dv.getUint32(at, true); at += 4;\n        this.opaque = dv.getUint64(at, true); at += 8;\n        this.size = dv.getUint32(at, true); at += 4;\n        if (a.byteLength > at)\n        {\n            this.data = a.slice(at);\n            at += this.data.byteLength;\n        }\n    }\n}\n\nfunction SpiceMsgMainAgentTokens(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgMainAgentTokens.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.num_tokens = dv.getUint32(at, true); at += 4;\n    },\n}\n\nfunction SpiceMsgSetAck(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgSetAck.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.generation = dv.getUint32(at, true); at += 4;\n        this.window = dv.getUint32(at, true); at += 4;\n    },\n}\n\nfunction SpiceMsgcAckSync(ack)\n{\n    this.generation = ack.generation;\n}\n\nSpiceMsgcAckSync.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        dv.setUint32(at, this.generation, true); at += 4;\n    },\n    buffer_size: function()\n    {\n        return 4;\n    }\n}\n\nfunction SpiceMsgcMainMouseModeRequest(mode)\n{\n    this.mode = mode;\n}\n\nSpiceMsgcMainMouseModeRequest.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        dv.setUint16(at, this.mode, true); at += 2;\n    },\n    buffer_size: function()\n    {\n        return 2;\n    }\n}\n\nfunction SpiceMsgcMainAgentStart(num_tokens)\n{\n    this.num_tokens = num_tokens;\n}\n\nSpiceMsgcMainAgentStart.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        dv.setUint32(at, this.num_tokens, true); at += 4;\n    },\n    buffer_size: function()\n    {\n        return 4;\n    }\n}\n\nfunction SpiceMsgcMainAgentData(type, data)\n{\n    this.protocol = VD_AGENT_PROTOCOL;\n    this.type = type;\n    this.opaque = 0;\n    this.size = data.buffer_size();\n    this.data = data;\n}\n\nSpiceMsgcMainAgentData.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        dv.setUint32(at, this.protocol, true); at += 4;\n        dv.setUint32(at, this.type, true); at += 4;\n        dv.setUint64(at, this.opaque, true); at += 8;\n        dv.setUint32(at, this.size, true); at += 4;\n        this.data.to_buffer(a, at);\n    },\n    buffer_size: function()\n    {\n        return 4 + 4 + 8 + 4 + this.data.buffer_size();\n    }\n}\n\nfunction VDAgentAnnounceCapabilities(request, caps)\n{\n    if (caps)\n    {\n        this.request = request;\n        this.caps = caps;\n    }\n    else\n        this.from_buffer(request);\n}\n\nVDAgentAnnounceCapabilities.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        dv.setUint32(at, this.request, true); at += 4;\n        dv.setUint32(at, this.caps, true); at += 4;\n    },\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.request = dv.getUint32(at, true); at += 4;\n        this.caps = dv.getUint32(at, true); at += 4;\n        return at;\n    },\n    buffer_size: function()\n    {\n        return 8;\n    }\n}\n\nfunction VDAgentMonitorsConfig(flags, width, height, depth, x, y)\n{\n    this.num_mon = 1;\n    this.flags = flags;\n    this.width = width;\n    this.height = height;\n    this.depth = depth;\n    this.x = x;\n    this.y = y;\n}\n\nVDAgentMonitorsConfig.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        dv.setUint32(at, this.num_mon, true); at += 4;\n        dv.setUint32(at, this.flags, true); at += 4;\n        dv.setUint32(at, this.height, true); at += 4;\n        dv.setUint32(at, this.width, true); at += 4;\n        dv.setUint32(at, this.depth, true); at += 4;\n        dv.setUint32(at, this.x, true); at += 4;\n        dv.setUint32(at, this.y, true); at += 4;\n    },\n    buffer_size: function()\n    {\n        return 28;\n    }\n}\n\nfunction VDAgentFileXferStatusMessage(data, result)\n{\n    if (result)\n    {\n        this.id = data;\n        this.result = result;\n    }\n    else\n        this.from_buffer(data);\n}\n\nVDAgentFileXferStatusMessage.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        dv.setUint32(at, this.id, true); at += 4;\n        dv.setUint32(at, this.result, true); at += 4;\n    },\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.id = dv.getUint32(at, true); at += 4;\n        this.result = dv.getUint32(at, true); at += 4;\n        return at;\n    },\n    buffer_size: function()\n    {\n        return 8;\n    }\n}\n\nfunction VDAgentFileXferStartMessage(id, name, size)\n{\n    this.id = id;\n    this.string = \"[vdagent-file-xfer]\\n\"+\"name=\"+name+\"\\nsize=\"+size+\"\\n\";\n}\n\nVDAgentFileXferStartMessage.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        dv.setUint32(at, this.id, true); at += 4;\n        for (var i = 0; i < this.string.length; i++, at++)\n            dv.setUint8(at, this.string.charCodeAt(i));\n    },\n    buffer_size: function()\n    {\n        return 4 + this.string.length + 1;\n    }\n}\n\nfunction VDAgentFileXferDataMessage(id, size, data)\n{\n    this.id = id;\n    this.size = size;\n    this.data = data;\n}\n\nVDAgentFileXferDataMessage.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        dv.setUint32(at, this.id, true); at += 4;\n        dv.setUint64(at, this.size, true); at += 8;\n        if (this.data && this.data.byteLength > 0)\n        {\n            var u8arr = new Uint8Array(this.data);\n            for (var i = 0; i < u8arr.length; i++, at++)\n                dv.setUint8(at, u8arr[i]);\n        }\n    },\n    buffer_size: function()\n    {\n        return 12 + this.size;\n    }\n}\n\nfunction SpiceMsgNotify(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgNotify.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var i;\n        var dv = new SpiceDataView(a);\n        this.time_stamp = dv.getUint64(at, true); at += 8;\n        this.severity = dv.getUint32(at, true); at += 4;\n        this.visibility = dv.getUint32(at, true); at += 4;\n        this.what = dv.getUint32(at, true); at += 4;\n        this.message_len = dv.getUint32(at, true); at += 4;\n        this.message = \"\";\n        for (i = 0; i < this.message_len; i++)\n        {\n            var c = dv.getUint8(at, true); at++;\n            this.message += String.fromCharCode(c);\n        }\n    },\n}\n\nfunction SpiceMsgcDisplayInit()\n{\n    this.pixmap_cache_id = 1;\n    this.glz_dictionary_id = 0;\n    this.pixmap_cache_size = 10 * 1024 * 1024;\n    this.glz_dictionary_window_size = 0;\n}\n\nSpiceMsgcDisplayInit.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        dv.setUint8(at, this.pixmap_cache_id, true); at++;\n        dv.setUint64(at, this.pixmap_cache_size, true); at += 8;\n        dv.setUint8(at, this.glz_dictionary_id, true); at++;\n        dv.setUint32(at, this.glz_dictionary_window_size, true); at += 4;\n    },\n    buffer_size: function()\n    {\n        return 14;\n    }\n}\n\nfunction SpiceMsgDisplayBase()\n{\n}\n\nSpiceMsgDisplayBase.prototype =\n{\n    from_dv : function(dv, at, mb)\n    {\n        this.surface_id = dv.getUint32(at, true); at += 4;\n        this.box = new SpiceRect;\n        at = this.box.from_dv(dv, at, mb);\n        this.clip = new SpiceClip;\n        return this.clip.from_dv(dv, at, mb);\n    },\n}\n\nfunction SpiceMsgDisplayDrawCopy(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgDisplayDrawCopy.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.base = new SpiceMsgDisplayBase;\n        at = this.base.from_dv(dv, at, a);\n        this.data = new SpiceCopy;\n        return this.data.from_dv(dv, at, a);\n    },\n}\n\nfunction SpiceMsgDisplayDrawFill(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgDisplayDrawFill.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.base = new SpiceMsgDisplayBase;\n        at = this.base.from_dv(dv, at, a);\n        this.data = new SpiceFill;\n        return this.data.from_dv(dv, at, a);\n    },\n}\n\nfunction SpiceMsgDisplayCopyBits(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgDisplayCopyBits.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.base = new SpiceMsgDisplayBase;\n        at = this.base.from_dv(dv, at, a);\n        this.src_pos = new SpicePoint;\n        return this.src_pos.from_dv(dv, at, a);\n    },\n}\n\n\nfunction SpiceMsgSurfaceCreate(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgSurfaceCreate.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.surface = new SpiceSurface;\n        return this.surface.from_dv(dv, at, a);\n    },\n}\n\nfunction SpiceMsgSurfaceDestroy(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgSurfaceDestroy.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.surface_id = dv.getUint32(at, true); at += 4;\n    },\n}\n\nfunction SpiceMsgInputsInit(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgInputsInit.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.keyboard_modifiers = dv.getUint16(at, true); at += 2;\n        return at;\n    },\n}\n\nfunction SpiceMsgInputsKeyModifiers(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgInputsKeyModifiers.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.keyboard_modifiers = dv.getUint16(at, true); at += 2;\n        return at;\n    },\n}\n\nfunction SpiceMsgCursorInit(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgCursorInit.prototype =\n{\n    from_buffer: function(a, at, mb)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.position = new SpicePoint16;\n        at = this.position.from_dv(dv, at, mb);\n        this.trail_length = dv.getUint16(at, true); at += 2;\n        this.trail_frequency = dv.getUint16(at, true); at += 2;\n        this.visible = dv.getUint8(at, true); at ++;\n        this.cursor = new SpiceCursor;\n        return this.cursor.from_dv(dv, at, a);\n    },\n}\n\nfunction SpiceMsgPlaybackData(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgPlaybackData.prototype =\n{\n    from_buffer: function(a, at, mb)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.time = dv.getUint32(at, true); at += 4;\n        if (a.byteLength > at)\n        {\n            this.data = a.slice(at);\n            at += this.data.byteLength;\n        }\n        return at;\n    },\n}\n\nfunction SpiceMsgPlaybackMode(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgPlaybackMode.prototype =\n{\n    from_buffer: function(a, at, mb)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.time = dv.getUint32(at, true); at += 4;\n        this.mode = dv.getUint16(at, true); at += 2;\n        if (a.byteLength > at)\n        {\n            this.data = a.slice(at);\n            at += this.data.byteLength;\n        }\n        return at;\n    },\n}\n\nfunction SpiceMsgPlaybackStart(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgPlaybackStart.prototype =\n{\n    from_buffer: function(a, at, mb)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.channels = dv.getUint32(at, true); at += 4;\n        this.format = dv.getUint16(at, true); at += 2;\n        this.frequency = dv.getUint32(at, true); at += 4;\n        this.time = dv.getUint32(at, true); at += 4;\n        return at;\n    },\n}\n\n\n\nfunction SpiceMsgCursorSet(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgCursorSet.prototype =\n{\n    from_buffer: function(a, at, mb)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.position = new SpicePoint16;\n        at = this.position.from_dv(dv, at, mb);\n        this.visible = dv.getUint8(at, true); at ++;\n        this.cursor = new SpiceCursor;\n        return this.cursor.from_dv(dv, at, a);\n    },\n}\n\n\nfunction SpiceMsgcMousePosition(sc, e)\n{\n    // FIXME - figure out how to correctly compute display_id\n    this.display_id = 0;\n    this.buttons_state = sc.buttons_state;\n    if (e)\n    {\n        var scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n        var scrollLeft = document.body.scrollLeft || document.documentElement.scrollLeft;\n\n        this.x = e.clientX - sc.display.surfaces[sc.display.primary_surface].canvas.offsetLeft + scrollLeft;\n        this.y = e.clientY - sc.display.surfaces[sc.display.primary_surface].canvas.offsetTop + scrollTop;\n        sc.mousex = this.x;\n        sc.mousey = this.y; \n    }\n    else\n    {\n        this.x = this.y = this.buttons_state = 0;\n    }\n}\n\nSpiceMsgcMousePosition.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        dv.setUint32(at, this.x, true); at += 4;\n        dv.setUint32(at, this.y, true); at += 4;\n        dv.setUint16(at, this.buttons_state, true); at += 2;\n        dv.setUint8(at, this.display_id, true); at += 1;\n        return at;\n    },\n    buffer_size: function()\n    {\n        return 11;\n    }\n}\n\nfunction SpiceMsgcMouseMotion(sc, e)\n{\n    // FIXME - figure out how to correctly compute display_id\n    this.display_id = 0;\n    this.buttons_state = sc.buttons_state;\n    if (e)\n    {\n        this.x = e.clientX - sc.display.surfaces[sc.display.primary_surface].canvas.offsetLeft;\n        this.y = e.clientY - sc.display.surfaces[sc.display.primary_surface].canvas.offsetTop;\n\n        if (sc.mousex !== undefined)\n        {\n            this.x -= sc.mousex;\n            this.y -= sc.mousey;\n        }\n        sc.mousex = e.clientX - sc.display.surfaces[sc.display.primary_surface].canvas.offsetLeft;\n        sc.mousey = e.clientY - sc.display.surfaces[sc.display.primary_surface].canvas.offsetTop;\n    }\n    else\n    {\n        this.x = this.y = this.buttons_state = 0;\n    }\n}\n\n/* Use the same functions as for MousePosition */\nSpiceMsgcMouseMotion.prototype.to_buffer = SpiceMsgcMousePosition.prototype.to_buffer;\nSpiceMsgcMouseMotion.prototype.buffer_size = SpiceMsgcMousePosition.prototype.buffer_size;\n\nfunction SpiceMsgcMousePress(sc, e)\n{\n    if (e)\n    {\n        this.button = e.button + 1;\n        this.buttons_state = 1 << e.button;\n        sc.buttons_state = this.buttons_state;\n    }\n    else\n    {\n        this.button = SPICE_MOUSE_BUTTON_LEFT;\n        this.buttons_state = SPICE_MOUSE_BUTTON_MASK_LEFT;\n    }\n}\n\nSpiceMsgcMousePress.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        dv.setUint8(at, this.button, true); at ++;\n        dv.setUint16(at, this.buttons_state, true); at += 2;\n        return at;\n    },\n    buffer_size: function()\n    {\n        return 3;\n    }\n}\n\nfunction SpiceMsgcMouseRelease(sc, e)\n{\n    if (e)\n    {\n        this.button = e.button + 1;\n        this.buttons_state = 0;\n        sc.buttons_state = this.buttons_state;\n    }\n    else\n    {\n        this.button = SPICE_MOUSE_BUTTON_LEFT;\n        this.buttons_state = 0;\n    }\n}\n\n/* Use the same functions as for MousePress */\nSpiceMsgcMouseRelease.prototype.to_buffer = SpiceMsgcMousePress.prototype.to_buffer;\nSpiceMsgcMouseRelease.prototype.buffer_size = SpiceMsgcMousePress.prototype.buffer_size;\n\n\nfunction SpiceMsgcKeyDown(e)\n{\n    if (e)\n    {\n        this.code = keycode_to_start_scan(e.keyCode);\n    }\n    else\n    {\n        this.code = 0;\n    }\n}\n\nSpiceMsgcKeyDown.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        dv.setUint32(at, this.code, true); at += 4;\n        return at;\n    },\n    buffer_size: function()\n    {\n        return 4;\n    }\n}\n\nfunction SpiceMsgcKeyUp(e)\n{\n    if (e)\n    {\n        this.code = keycode_to_end_scan(e.keyCode);\n    }\n    else\n    {\n        this.code = 0;\n    }\n}\n\n/* Use the same functions as for KeyDown */\nSpiceMsgcKeyUp.prototype.to_buffer = SpiceMsgcKeyDown.prototype.to_buffer;\nSpiceMsgcKeyUp.prototype.buffer_size = SpiceMsgcKeyDown.prototype.buffer_size;\n\nfunction SpiceMsgDisplayStreamCreate(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgDisplayStreamCreate.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.surface_id = dv.getUint32(at, true); at += 4;\n        this.id = dv.getUint32(at, true); at += 4;\n        this.flags = dv.getUint8(at, true); at += 1;\n        this.codec_type = dv.getUint8(at, true); at += 1;\n        this.stamp = dv.getUint64(at, true); at += 8;\n        this.stream_width = dv.getUint32(at, true); at += 4;\n        this.stream_height = dv.getUint32(at, true); at += 4;\n        this.src_width = dv.getUint32(at, true); at += 4;\n        this.src_height = dv.getUint32(at, true); at += 4;\n\n        this.dest = new SpiceRect;\n        at = this.dest.from_dv(dv, at, a);\n        this.clip = new SpiceClip;\n        this.clip.from_dv(dv, at, a);\n    },\n}\n\nfunction SpiceStreamDataHeader(a, at)\n{\n}\n\nSpiceStreamDataHeader.prototype =\n{\n    from_dv : function(dv, at, mb)\n    {\n        this.id = dv.getUint32(at, true); at += 4;\n        this.multi_media_time = dv.getUint32(at, true); at += 4;\n        return at;\n    },\n}\n\nfunction SpiceMsgDisplayStreamData(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgDisplayStreamData.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.base = new SpiceStreamDataHeader;\n        at = this.base.from_dv(dv, at, a);\n        this.data_size = dv.getUint32(at, true); at += 4;\n        this.data = dv.u8.subarray(at, at + this.data_size);\n    },\n}\n\nfunction SpiceMsgDisplayStreamClip(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgDisplayStreamClip.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.id = dv.getUint32(at, true); at += 4;\n        this.clip = new SpiceClip;\n        this.clip.from_dv(dv, at, a);\n    },\n}\n\nfunction SpiceMsgDisplayStreamDestroy(a, at)\n{\n    this.from_buffer(a, at);\n}\n\nSpiceMsgDisplayStreamDestroy.prototype =\n{\n    from_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.id = dv.getUint32(at, true); at += 4;\n    },\n}\n\nfunction SpiceMsgDisplayInvalList(a, at)\n{\n    this.count = 0;\n    this.resources = [];\n    this.from_buffer(a,at);\n}\n\nSpiceMsgDisplayInvalList.prototype =\n{\n    from_buffer: function (a, at)\n    {\n        var i;\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        this.count = dv.getUint16(at, true); at += 2;\n        for (i = 0; i < this.count; i++)\n        {\n            this.resources[i] = {};\n            this.resources[i].type = dv.getUint8(at, true); at++;\n            this.resources[i].id = dv.getUint64(at, true); at += 8;\n        }\n    },\n}\n;\ndefine(\"spice-spicemsg\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2012 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*--------------------------------------------------------------------------------------\n**  SpiceWireReader\n**      This class will receive messages from a WebSocket and relay it to a given\n**  callback.  It will optionally save and pass along a header, useful in processing\n**  the mini message format.\n**--------------------------------------------------------------------------------------*/\nfunction SpiceWireReader(sc, callback)\n{\n    this.sc = sc;\n    this.callback = callback;\n    this.needed = 0;\n\n    this.buffers = [];\n\n    this.sc.ws.wire_reader = this;\n    this.sc.ws.binaryType = \"arraybuffer\";\n    this.sc.ws.addEventListener('message', wire_blob_catcher);\n}\n\nSpiceWireReader.prototype =\n{\n\n    /*------------------------------------------------------------------------\n    **  Process messages coming in from our WebSocket\n    **----------------------------------------------------------------------*/\n    inbound: function (mb)\n    {\n        var at;\n\n        /* Just buffer if we don't need anything yet */\n        if (this.needed == 0)\n        {\n            this.buffers.push(mb);\n            return;\n        }\n\n        /* Optimization - if we have just one inbound block, and it's\n            suitable for our needs, just use it.  */\n        if (this.buffers.length == 0 && mb.byteLength >= this.needed)\n        {\n            if (mb.byteLength > this.needed)\n            {\n                this.buffers.push(mb.slice(this.needed));\n                mb = mb.slice(0, this.needed);\n            }\n            this.callback.call(this.sc, mb,\n                        this.saved_msg_header || undefined);\n        }\n        else\n        {\n            this.buffers.push(mb);\n        }\n\n\n        /* If we have fragments that add up to what we need, combine them */\n        /*  FIXME - it would be faster to revise the processing code to handle\n        **          multiple fragments directly.  Essentially, we should be\n        **          able to do this without any slice() or combine_array_buffers() calls */\n        while (this.buffers.length > 1 && this.buffers[0].byteLength < this.needed)\n        {\n            var mb1 = this.buffers.shift();\n            var mb2 = this.buffers.shift();\n\n            this.buffers.unshift(combine_array_buffers(mb1, mb2));\n        }\n\n\n        while (this.buffers.length > 0 && this.buffers[0].byteLength >= this.needed)\n        {\n            mb = this.buffers.shift();\n            if (mb.byteLength > this.needed)\n            {\n                this.buffers.unshift(mb.slice(this.needed));\n                mb = mb.slice(0, this.needed);\n            }\n            this.callback.call(this.sc, mb,\n                        this.saved_msg_header || undefined);\n        }\n        \n    },\n\n    request: function(n)\n    {\n        this.needed = n;\n    },\n\n    save_header: function(h)\n    {\n        this.saved_msg_header = h;\n    },\n\n    clear_header: function()\n    {\n        this.saved_msg_header = undefined;\n    },\n}\n\nfunction wire_blob_catcher(e)\n{\n    DEBUG > 1 && console.log(\">> WebSockets.onmessage\");\n    DEBUG > 1 && console.log(\"id \" + this.wire_reader.sc.connection_id +\"; type \" + this.wire_reader.sc.type);\n    SpiceWireReader.prototype.inbound.call(this.wire_reader, e.data);\n}\n;\ndefine(\"spice-wire\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2012 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n/*----------------------------------------------------------------------------\n**  FIXME: putImageData  does not support Alpha blending\n**           or compositing.  So if we have data in an ImageData\n**           format, we have to draw it onto a context,\n**           and then use drawImage to put it onto the target,\n**           as drawImage does alpha.\n**--------------------------------------------------------------------------*/\nfunction putImageDataWithAlpha(context, d, x, y)\n{\n    var c = document.createElement(\"canvas\");\n    var t = c.getContext(\"2d\");\n    c.setAttribute('width', d.width);\n    c.setAttribute('height', d.height);\n    t.putImageData(d, 0, 0);\n    context.drawImage(c, x, y, d.width, d.height);\n}\n\n/*----------------------------------------------------------------------------\n**  FIXME: Spice will send an image with '0' alpha when it is intended to\n**           go on a surface w/no alpha.  So in that case, we have to strip\n**           out the alpha.  The test case for this was flux box; in a Xspice\n**           server, right click on the desktop to get the menu; the top bar\n**           doesn't paint/highlight correctly w/out this change.\n**--------------------------------------------------------------------------*/\nfunction stripAlpha(d)\n{\n    var i;\n    for (i = 0; i < (d.width * d.height * 4); i += 4)\n        d.data[i + 3] = 255;\n}\n\n/*----------------------------------------------------------------------------\n**  SpiceDisplayConn\n**      Drive the Spice Display Channel\n**--------------------------------------------------------------------------*/\nfunction SpiceDisplayConn()\n{\n    SpiceConn.apply(this, arguments);\n}\n\nSpiceDisplayConn.prototype = Object.create(SpiceConn.prototype);\nSpiceDisplayConn.prototype.process_channel_message = function(msg)\n{\n    if (msg.type == SPICE_MSG_DISPLAY_MARK)\n    {\n        // FIXME - DISPLAY_MARK not implemented (may be hard or impossible)\n        this.known_unimplemented(msg.type, \"Display Mark\");\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_DISPLAY_RESET)\n    {\n        DEBUG > 2 && console.log(\"Display reset\");\n        this.surfaces[this.primary_surface].canvas.context.restore();\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_DISPLAY_DRAW_COPY)\n    {\n        var draw_copy = new SpiceMsgDisplayDrawCopy(msg.data);\n\n        DEBUG > 1 && this.log_draw(\"DrawCopy\", draw_copy);\n\n        if (! draw_copy.base.box.is_same_size(draw_copy.data.src_area))\n            this.log_warn(\"FIXME: DrawCopy src_area is a different size than base.box; we do not handle that yet.\");\n        if (draw_copy.base.clip.type != SPICE_CLIP_TYPE_NONE)\n            this.log_warn(\"FIXME: DrawCopy we don't handle clipping yet\");\n        if (draw_copy.data.rop_descriptor != SPICE_ROPD_OP_PUT)\n            this.log_warn(\"FIXME: DrawCopy we don't handle ropd type: \" + draw_copy.data.rop_descriptor);\n        if (draw_copy.data.mask.flags)\n            this.log_warn(\"FIXME: DrawCopy we don't handle mask flag: \" + draw_copy.data.mask.flags);\n        if (draw_copy.data.mask.bitmap)\n            this.log_warn(\"FIXME: DrawCopy we don't handle mask\");\n\n        if (draw_copy.data && draw_copy.data.src_bitmap)\n        {\n            if (draw_copy.data.src_bitmap.descriptor.flags &&\n                draw_copy.data.src_bitmap.descriptor.flags != SPICE_IMAGE_FLAGS_CACHE_ME &&\n                draw_copy.data.src_bitmap.descriptor.flags != SPICE_IMAGE_FLAGS_HIGH_BITS_SET)\n            {\n                this.log_warn(\"FIXME: DrawCopy unhandled image flags: \" + draw_copy.data.src_bitmap.descriptor.flags);\n                DEBUG <= 1 && this.log_draw(\"DrawCopy\", draw_copy);\n            }\n\n            if (draw_copy.data.src_bitmap.descriptor.type == SPICE_IMAGE_TYPE_QUIC)\n            {\n                var canvas = this.surfaces[draw_copy.base.surface_id].canvas;\n                if (! draw_copy.data.src_bitmap.quic)\n                {\n                    this.log_warn(\"FIXME: DrawCopy could not handle this QUIC file.\");\n                    return false;\n                }\n                var source_img = convert_spice_quic_to_web(canvas.context,\n                                        draw_copy.data.src_bitmap.quic);\n\n                return this.draw_copy_helper(\n                    { base: draw_copy.base,\n                      src_area: draw_copy.data.src_area,\n                      image_data: source_img,\n                      tag: \"copyquic.\" + draw_copy.data.src_bitmap.quic.type,\n                      has_alpha: (draw_copy.data.src_bitmap.quic.type == QUIC_IMAGE_TYPE_RGBA ? true : false) ,\n                      descriptor : draw_copy.data.src_bitmap.descriptor\n                    });\n            }\n            else if (draw_copy.data.src_bitmap.descriptor.type == SPICE_IMAGE_TYPE_FROM_CACHE ||\n                    draw_copy.data.src_bitmap.descriptor.type == SPICE_IMAGE_TYPE_FROM_CACHE_LOSSLESS)\n            {\n                if (! this.cache || ! this.cache[draw_copy.data.src_bitmap.descriptor.id])\n                {\n                    this.log_warn(\"FIXME: DrawCopy did not find image id \" + draw_copy.data.src_bitmap.descriptor.id + \" in cache.\");\n                    return false;\n                }\n\n                return this.draw_copy_helper(\n                    { base: draw_copy.base,\n                      src_area: draw_copy.data.src_area,\n                      image_data: this.cache[draw_copy.data.src_bitmap.descriptor.id],\n                      tag: \"copycache.\" + draw_copy.data.src_bitmap.descriptor.id, \n                      has_alpha: true, /* FIXME - may want this to be false... */\n                      descriptor : draw_copy.data.src_bitmap.descriptor\n                    });\n\n                /* FIXME - LOSSLESS CACHE ramifications not understood or handled */\n            }\n            else if (draw_copy.data.src_bitmap.descriptor.type == SPICE_IMAGE_TYPE_SURFACE)\n            {\n                var source_context = this.surfaces[draw_copy.data.src_bitmap.surface_id].canvas.context;\n                var target_context = this.surfaces[draw_copy.base.surface_id].canvas.context;\n\n                var source_img = source_context.getImageData(\n                        draw_copy.data.src_area.left, draw_copy.data.src_area.top,\n                        draw_copy.data.src_area.right - draw_copy.data.src_area.left,\n                        draw_copy.data.src_area.bottom - draw_copy.data.src_area.top);\n                var computed_src_area = new SpiceRect;\n                computed_src_area.top = computed_src_area.left = 0;\n                computed_src_area.right = source_img.width;\n                computed_src_area.bottom = source_img.height;\n\n                /* FIXME - there is a potential optimization here.\n                           That is, if the surface is from 0,0, and\n                           both surfaces are alpha surfaces, you should\n                           be able to just do a drawImage, which should\n                           save time.  */\n\n                return this.draw_copy_helper(\n                    { base: draw_copy.base,\n                      src_area: computed_src_area,\n                      image_data: source_img,\n                      tag: \"copysurf.\" + draw_copy.data.src_bitmap.surface_id,\n                      has_alpha: this.surfaces[draw_copy.data.src_bitmap.surface_id].format == SPICE_SURFACE_FMT_32_xRGB ? false : true,\n                      descriptor : draw_copy.data.src_bitmap.descriptor\n                    });\n\n                return true;\n            }\n            else if (draw_copy.data.src_bitmap.descriptor.type == SPICE_IMAGE_TYPE_JPEG)\n            {\n                if (! draw_copy.data.src_bitmap.jpeg)\n                {\n                    this.log_warn(\"FIXME: DrawCopy could not handle this JPEG file.\");\n                    return false;\n                }\n\n                // FIXME - how lame is this.  Be have it in binary format, and we have\n                //         to put it into string to get it back into jpeg.  Blech.\n                var tmpstr = \"data:image/jpeg,\";\n                var img = new Image;\n                var i;\n                var qdv = new Uint8Array(draw_copy.data.src_bitmap.jpeg.data);\n                for (i = 0; i < qdv.length; i++)\n                {\n                    tmpstr +=  '%';\n                    if (qdv[i] < 16)\n                        tmpstr += '0';\n                    tmpstr += qdv[i].toString(16);\n                }\n\n                img.o = \n                    { base: draw_copy.base,\n                      tag: \"jpeg.\" + draw_copy.data.src_bitmap.surface_id,\n                      descriptor : draw_copy.data.src_bitmap.descriptor,\n                      sc : this,\n                    };\n                img.onload = handle_draw_jpeg_onload;\n                img.src = tmpstr;\n\n                return true;\n            }\n            else if (draw_copy.data.src_bitmap.descriptor.type == SPICE_IMAGE_TYPE_JPEG_ALPHA)\n            {\n                if (! draw_copy.data.src_bitmap.jpeg_alpha)\n                {\n                    this.log_warn(\"FIXME: DrawCopy could not handle this JPEG ALPHA file.\");\n                    return false;\n                }\n\n                // FIXME - how lame is this.  Be have it in binary format, and we have\n                //         to put it into string to get it back into jpeg.  Blech.\n                var tmpstr = \"data:image/jpeg,\";\n                var img = new Image;\n                var i;\n                var qdv = new Uint8Array(draw_copy.data.src_bitmap.jpeg_alpha.data);\n                for (i = 0; i < qdv.length; i++)\n                {\n                    tmpstr +=  '%';\n                    if (qdv[i] < 16)\n                        tmpstr += '0';\n                    tmpstr += qdv[i].toString(16);\n                }\n\n                img.o = \n                    { base: draw_copy.base,\n                      tag: \"jpeg.\" + draw_copy.data.src_bitmap.surface_id,\n                      descriptor : draw_copy.data.src_bitmap.descriptor,\n                      sc : this,\n                    };\n\n                if (this.surfaces[draw_copy.base.surface_id].format == SPICE_SURFACE_FMT_32_ARGB)\n                {\n\n                    var canvas = this.surfaces[draw_copy.base.surface_id].canvas;\n                    img.alpha_img = convert_spice_lz_to_web(canvas.context,\n                                            draw_copy.data.src_bitmap.jpeg_alpha.alpha);\n                }\n                img.onload = handle_draw_jpeg_onload;\n                img.src = tmpstr;\n\n                return true;\n            }\n            else if (draw_copy.data.src_bitmap.descriptor.type == SPICE_IMAGE_TYPE_BITMAP)\n            {\n                var canvas = this.surfaces[draw_copy.base.surface_id].canvas;\n                if (! draw_copy.data.src_bitmap.bitmap)\n                {\n                    this.log_err(\"null bitmap\");\n                    return false;\n                }\n\n                var source_img = convert_spice_bitmap_to_web(canvas.context,\n                                        draw_copy.data.src_bitmap.bitmap);\n                if (! source_img)\n                {\n                    this.log_warn(\"FIXME: Unable to interpret bitmap of format: \" + \n                        draw_copy.data.src_bitmap.bitmap.format);\n                    return false;\n                }\n\n                return this.draw_copy_helper(\n                    { base: draw_copy.base,\n                      src_area: draw_copy.data.src_area,\n                      image_data: source_img,\n                      tag: \"bitmap.\" + draw_copy.data.src_bitmap.bitmap.format,\n                      has_alpha: draw_copy.data.src_bitmap.bitmap == SPICE_BITMAP_FMT_32BIT ? false : true,\n                      descriptor : draw_copy.data.src_bitmap.descriptor\n                    });\n            }\n            else if (draw_copy.data.src_bitmap.descriptor.type == SPICE_IMAGE_TYPE_LZ_RGB)\n            {\n                var canvas = this.surfaces[draw_copy.base.surface_id].canvas;\n                if (! draw_copy.data.src_bitmap.lz_rgb)\n                {\n                    this.log_err(\"null lz_rgb \");\n                    return false;\n                }\n\n                if (draw_copy.data.src_bitmap.lz_rgb.top_down != 1)\n                    this.log_warn(\"FIXME: Implement non top down support for lz_rgb\");\n\n                var source_img = convert_spice_lz_to_web(canvas.context,\n                                            draw_copy.data.src_bitmap.lz_rgb);\n                if (! source_img)\n                {\n                    this.log_warn(\"FIXME: Unable to interpret bitmap of type: \" + \n                        draw_copy.data.src_bitmap.lz_rgb.type);\n                    return false;\n                }\n\n                return this.draw_copy_helper(\n                    { base: draw_copy.base,\n                      src_area: draw_copy.data.src_area,\n                      image_data: source_img,\n                      tag: \"lz_rgb.\" + draw_copy.data.src_bitmap.lz_rgb.type,\n                      has_alpha: draw_copy.data.src_bitmap.lz_rgb.type == LZ_IMAGE_TYPE_RGBA ? true : false ,\n                      descriptor : draw_copy.data.src_bitmap.descriptor\n                    });\n            }\n            else\n            {\n                this.log_warn(\"FIXME: DrawCopy unhandled image type: \" + draw_copy.data.src_bitmap.descriptor.type);\n                this.log_draw(\"DrawCopy\", draw_copy);\n                return false;\n            }\n        }\n\n        this.log_warn(\"FIXME: DrawCopy no src_bitmap.\");\n        return false;\n    }\n\n    if (msg.type == SPICE_MSG_DISPLAY_DRAW_FILL)\n    {\n        var draw_fill = new SpiceMsgDisplayDrawFill(msg.data);\n\n        DEBUG > 1 && this.log_draw(\"DrawFill\", draw_fill);\n\n        if (draw_fill.data.rop_descriptor != SPICE_ROPD_OP_PUT)\n            this.log_warn(\"FIXME: DrawFill we don't handle ropd type: \" + draw_fill.data.rop_descriptor);\n        if (draw_fill.data.mask.flags)\n            this.log_warn(\"FIXME: DrawFill we don't handle mask flag: \" + draw_fill.data.mask.flags);\n        if (draw_fill.data.mask.bitmap)\n            this.log_warn(\"FIXME: DrawFill we don't handle mask\");\n\n        if (draw_fill.data.brush.type == SPICE_BRUSH_TYPE_SOLID)\n        {\n            // FIXME - do brushes ever have alpha?\n            var color = draw_fill.data.brush.color & 0xffffff;\n            var color_str = \"rgb(\" + (color >> 16) + \", \" + ((color >> 8) & 0xff) + \", \" + (color & 0xff) + \")\";\n            this.surfaces[draw_fill.base.surface_id].canvas.context.fillStyle = color_str;\n\n            this.surfaces[draw_fill.base.surface_id].canvas.context.fillRect(\n                draw_fill.base.box.left, draw_fill.base.box.top,\n                draw_fill.base.box.right - draw_fill.base.box.left,\n                draw_fill.base.box.bottom - draw_fill.base.box.top);\n\n            if (DUMP_DRAWS && this.parent.dump_id)\n            {\n                var debug_canvas = document.createElement(\"canvas\");\n                debug_canvas.setAttribute('width', this.surfaces[draw_fill.base.surface_id].canvas.width);\n                debug_canvas.setAttribute('height', this.surfaces[draw_fill.base.surface_id].canvas.height);\n                debug_canvas.setAttribute('id', \"fillbrush.\" + draw_fill.base.surface_id + \".\" + this.surfaces[draw_fill.base.surface_id].draw_count);\n                debug_canvas.getContext(\"2d\").fillStyle = color_str;\n                debug_canvas.getContext(\"2d\").fillRect(\n                    draw_fill.base.box.left, draw_fill.base.box.top,\n                    draw_fill.base.box.right - draw_fill.base.box.left,\n                    draw_fill.base.box.bottom - draw_fill.base.box.top);\n                document.getElementById(this.parent.dump_id).appendChild(debug_canvas);\n            }\n                \n            this.surfaces[draw_fill.base.surface_id].draw_count++;\n\n        }\n        else\n        {\n            this.log_warn(\"FIXME: DrawFill can't handle brush type: \" + draw_fill.data.brush.type);\n        }\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_DISPLAY_COPY_BITS)\n    {\n        var copy_bits = new SpiceMsgDisplayCopyBits(msg.data);\n\n        DEBUG > 1 && this.log_draw(\"CopyBits\", copy_bits);\n\n        var source_canvas = this.surfaces[copy_bits.base.surface_id].canvas;\n        var source_context = source_canvas.context;\n\n        var width = source_canvas.width - copy_bits.src_pos.x;\n        var height = source_canvas.height - copy_bits.src_pos.y;\n        if (width > (copy_bits.base.box.right - copy_bits.base.box.left))\n            width = copy_bits.base.box.right - copy_bits.base.box.left;\n        if (height > (copy_bits.base.box.bottom - copy_bits.base.box.top))\n            height = copy_bits.base.box.bottom - copy_bits.base.box.top;\n\n        var source_img = source_context.getImageData(\n                copy_bits.src_pos.x, copy_bits.src_pos.y, width, height);\n        //source_context.putImageData(source_img, copy_bits.base.box.left, copy_bits.base.box.top);\n        putImageDataWithAlpha(source_context, source_img, copy_bits.base.box.left, copy_bits.base.box.top);\n\n        if (DUMP_DRAWS && this.parent.dump_id)\n        {\n            var debug_canvas = document.createElement(\"canvas\");\n            debug_canvas.setAttribute('width', width);\n            debug_canvas.setAttribute('height', height);\n            debug_canvas.setAttribute('id', \"copybits\" + copy_bits.base.surface_id + \".\" + this.surfaces[copy_bits.base.surface_id].draw_count);\n            debug_canvas.getContext(\"2d\").putImageData(source_img, 0, 0);\n            document.getElementById(this.parent.dump_id).appendChild(debug_canvas);\n        }\n\n\n        this.surfaces[copy_bits.base.surface_id].draw_count++;\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_DISPLAY_INVAL_ALL_PALETTES)\n    {\n        this.known_unimplemented(msg.type, \"Inval All Palettes\");\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_DISPLAY_SURFACE_CREATE)\n    {\n        if (! (\"surfaces\" in this))\n            this.surfaces = [];\n\n        var m = new SpiceMsgSurfaceCreate(msg.data);\n        DEBUG > 1 && console.log(this.type + \": MsgSurfaceCreate id \" + m.surface.surface_id \n                                    + \"; \" + m.surface.width + \"x\" + m.surface.height\n                                    + \"; format \" + m.surface.format \n                                    + \"; flags \" + m.surface.flags);\n        if (m.surface.format != SPICE_SURFACE_FMT_32_xRGB &&\n            m.surface.format != SPICE_SURFACE_FMT_32_ARGB)\n        {\n            this.log_warn(\"FIXME: cannot handle surface format \" + m.surface.format + \" yet.\");\n            return false;\n        }\n\n        var canvas = document.createElement(\"canvas\");\n        canvas.setAttribute('width', m.surface.width);\n        canvas.setAttribute('height', m.surface.height);\n        canvas.setAttribute('id', \"spice_surface_\" + m.surface.surface_id);\n        canvas.setAttribute('tabindex', m.surface.surface_id);\n        canvas.context = canvas.getContext(\"2d\");\n\n        if (DUMP_CANVASES && this.parent.dump_id)\n            document.getElementById(this.parent.dump_id).appendChild(canvas);\n\n        m.surface.canvas = canvas;\n        m.surface.draw_count = 0;\n        this.surfaces[m.surface.surface_id] = m.surface;\n\n        if (m.surface.flags & SPICE_SURFACE_FLAGS_PRIMARY)\n        {\n            this.primary_surface = m.surface.surface_id;\n\n            /* This .save() is done entirely to enable SPICE_MSG_DISPLAY_RESET */\n            canvas.context.save();\n            document.getElementById(this.parent.screen_id).appendChild(canvas);\n\n            /* We're going to leave width dynamic, but correctly set the height */\n            document.getElementById(this.parent.screen_id).style.height = m.surface.height + \"px\";\n            this.hook_events();\n        }\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_DISPLAY_SURFACE_DESTROY)\n    {\n        var m = new SpiceMsgSurfaceDestroy(msg.data);\n        DEBUG > 1 && console.log(this.type + \": MsgSurfaceDestroy id \" + m.surface_id);\n        this.delete_surface(m.surface_id);\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_DISPLAY_STREAM_CREATE)\n    {\n        var m = new SpiceMsgDisplayStreamCreate(msg.data);\n        DEBUG > 1 && console.log(this.type + \": MsgStreamCreate id\" + m.id);\n        if (!this.streams)\n            this.streams = new Array();\n        if (this.streams[m.id])\n            console.log(\"Stream already exists\");\n        else\n            this.streams[m.id] = m;\n        if (m.codec_type != SPICE_VIDEO_CODEC_TYPE_MJPEG)\n            console.log(\"Unhandled stream codec: \"+m.codec_type);\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_DISPLAY_STREAM_DATA)\n    {\n        var m = new SpiceMsgDisplayStreamData(msg.data);\n        if (!this.streams[m.base.id])\n        {\n            console.log(\"no stream for data\");\n            return false;\n        }\n        if (this.streams[m.base.id].codec_type === SPICE_VIDEO_CODEC_TYPE_MJPEG)\n        {\n            var tmpstr = \"data:image/jpeg,\";\n            var img = new Image;\n            var i;\n            for (i = 0; i < m.data.length; i++)\n            {\n                tmpstr +=  '%';\n                if (m.data[i] < 16)\n                tmpstr += '0';\n                tmpstr += m.data[i].toString(16);\n            }\n            var strm_base = new SpiceMsgDisplayBase();\n            strm_base.surface_id = this.streams[m.base.id].surface_id;\n            strm_base.box = this.streams[m.base.id].dest;\n            strm_base.clip = this.streams[m.base.id].clip;\n            img.o =\n                { base: strm_base,\n                  tag: \"mjpeg.\" + m.base.id,\n                  descriptor: null,\n                  sc : this,\n                };\n            img.onload = handle_draw_jpeg_onload;\n            img.src = tmpstr;\n        }\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_DISPLAY_STREAM_CLIP)\n    {\n        var m = new SpiceMsgDisplayStreamClip(msg.data);\n        DEBUG > 1 && console.log(this.type + \": MsgStreamClip id\" + m.id);\n        this.streams[m.id].clip = m.clip;\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_DISPLAY_STREAM_DESTROY)\n    {\n        var m = new SpiceMsgDisplayStreamDestroy(msg.data);\n        DEBUG > 1 && console.log(this.type + \": MsgStreamDestroy id\" + m.id);\n        this.streams[m.id] = undefined;\n        return true;\n    }\n    if (msg.type == SPICE_MSG_DISPLAY_INVAL_LIST)\n    {\n        var m = new SpiceMsgDisplayInvalList(msg.data);\n        var i;\n        DEBUG > 1 && console.log(this.type + \": MsgInvalList \" + m.count + \" items\");\n        for (i = 0; i < m.count; i++)\n            if (this.cache[m.resources[i].id] != undefined)\n                delete this.cache[m.resources[i].id];\n        return true;\n    }\n\n    return false;\n}\n\nSpiceDisplayConn.prototype.delete_surface = function(surface_id)\n{\n    var canvas = document.getElementById(\"spice_surface_\" + surface_id);\n    if (DUMP_CANVASES && this.parent.dump_id)\n        document.getElementById(this.parent.dump_id).removeChild(canvas);\n    if (this.primary_surface == surface_id)\n    {\n        this.unhook_events();\n        this.primary_surface = undefined;\n        document.getElementById(this.parent.screen_id).removeChild(canvas);\n    }\n\n    delete this.surfaces[surface_id];\n}\n\n\nSpiceDisplayConn.prototype.draw_copy_helper = function(o)\n{\n\n    var canvas = this.surfaces[o.base.surface_id].canvas;\n    if (o.has_alpha)\n    {\n        /* FIXME - This is based on trial + error, not a serious thoughtful\n                   analysis of what Spice requires.  See display.js for more. */\n        if (this.surfaces[o.base.surface_id].format == SPICE_SURFACE_FMT_32_xRGB)\n        {\n            stripAlpha(o.image_data);\n            canvas.context.putImageData(o.image_data, o.base.box.left, o.base.box.top);\n        }\n        else\n            putImageDataWithAlpha(canvas.context, o.image_data,\n                    o.base.box.left, o.base.box.top);\n    }\n    else\n        canvas.context.putImageData(o.image_data, o.base.box.left, o.base.box.top);\n\n    if (o.src_area.left > 0 || o.src_area.top > 0)\n    {\n        this.log_warn(\"FIXME: DrawCopy not shifting draw copies just yet...\");\n    }\n\n    if (o.descriptor && (o.descriptor.flags & SPICE_IMAGE_FLAGS_CACHE_ME))\n    {\n        if (! (\"cache\" in this))\n            this.cache = {};\n        this.cache[o.descriptor.id] = o.image_data;\n    }\n\n    if (DUMP_DRAWS && this.parent.dump_id)\n    {\n        var debug_canvas = document.createElement(\"canvas\");\n        debug_canvas.setAttribute('width', o.image_data.width);\n        debug_canvas.setAttribute('height', o.image_data.height);\n        debug_canvas.setAttribute('id', o.tag + \".\" +\n            this.surfaces[o.base.surface_id].draw_count + \".\" +\n            o.base.surface_id + \"@\" + o.base.box.left + \"x\" +  o.base.box.top);\n        debug_canvas.getContext(\"2d\").putImageData(o.image_data, 0, 0);\n        document.getElementById(this.parent.dump_id).appendChild(debug_canvas);\n    }\n\n    this.surfaces[o.base.surface_id].draw_count++;\n\n    return true;\n}\n\n\nSpiceDisplayConn.prototype.log_draw = function(prefix, draw)\n{\n    var str = prefix + \".\" + draw.base.surface_id + \".\" + this.surfaces[draw.base.surface_id].draw_count + \": \";\n    str += \"base.box \" + draw.base.box.left + \", \" + draw.base.box.top + \" to \" + \n                           draw.base.box.right + \", \" + draw.base.box.bottom;\n    str += \"; clip.type \" + draw.base.clip.type;\n\n    if (draw.data)\n    {\n        if (draw.data.src_area)\n            str += \"; src_area \" + draw.data.src_area.left + \", \" + draw.data.src_area.top + \" to \"\n                                 + draw.data.src_area.right + \", \" + draw.data.src_area.bottom;\n\n        if (draw.data.src_bitmap && draw.data.src_bitmap != null)\n        {\n            str += \"; src_bitmap id: \" + draw.data.src_bitmap.descriptor.id;\n            str += \"; src_bitmap width \" + draw.data.src_bitmap.descriptor.width + \", height \" + draw.data.src_bitmap.descriptor.height;\n            str += \"; src_bitmap type \" + draw.data.src_bitmap.descriptor.type + \", flags \" + draw.data.src_bitmap.descriptor.flags;\n            if (draw.data.src_bitmap.surface_id !== undefined)\n                str += \"; src_bitmap surface_id \" + draw.data.src_bitmap.surface_id;\n            if (draw.data.src_bitmap.quic)\n                str += \"; QUIC type \" + draw.data.src_bitmap.quic.type + \n                        \"; width \" + draw.data.src_bitmap.quic.width + \n                        \"; height \" + draw.data.src_bitmap.quic.height ;\n            if (draw.data.src_bitmap.lz_rgb)\n                str += \"; LZ_RGB length \" + draw.data.src_bitmap.lz_rgb.length +\n                       \"; magic \" + draw.data.src_bitmap.lz_rgb.magic + \n                       \"; version 0x\" + draw.data.src_bitmap.lz_rgb.version.toString(16) +\n                       \"; type \" + draw.data.src_bitmap.lz_rgb.type +\n                       \"; width \" + draw.data.src_bitmap.lz_rgb.width +\n                       \"; height \" + draw.data.src_bitmap.lz_rgb.height +\n                       \"; stride \" + draw.data.src_bitmap.lz_rgb.stride +\n                       \"; top down \" + draw.data.src_bitmap.lz_rgb.top_down;\n        }\n        else\n            str += \"; src_bitmap is null\";\n\n        if (draw.data.brush)\n        {\n            if (draw.data.brush.type == SPICE_BRUSH_TYPE_SOLID)\n                str += \"; brush.color 0x\" + draw.data.brush.color.toString(16);\n            if (draw.data.brush.type == SPICE_BRUSH_TYPE_PATTERN)\n            {\n                str += \"; brush.pat \";\n                if (draw.data.brush.pattern.pat != null)\n                    str += \"[SpiceImage]\";\n                else\n                    str += \"[null]\";\n                str += \" at \" + draw.data.brush.pattern.pos.x + \", \" + draw.data.brush.pattern.pos.y;\n            }\n        }\n\n        str += \"; rop_descriptor \" + draw.data.rop_descriptor;\n        if (draw.data.scale_mode !== undefined)\n            str += \"; scale_mode \" + draw.data.scale_mode;\n        str += \"; mask.flags \" + draw.data.mask.flags;\n        str += \"; mask.pos \" + draw.data.mask.pos.x + \", \" + draw.data.mask.pos.y;\n        if (draw.data.mask.bitmap != null)\n        {\n            str += \"; mask.bitmap width \" + draw.data.mask.bitmap.descriptor.width + \", height \" + draw.data.mask.bitmap.descriptor.height;\n            str += \"; mask.bitmap type \" + draw.data.mask.bitmap.descriptor.type + \", flags \" + draw.data.mask.bitmap.descriptor.flags;\n        }\n        else\n            str += \"; mask.bitmap is null\";\n    }\n\n    console.log(str);\n}\n\nSpiceDisplayConn.prototype.hook_events = function()\n{\n    if (this.primary_surface !== undefined)\n    {\n        var canvas = this.surfaces[this.primary_surface].canvas;\n        canvas.sc = this.parent;\n        canvas.addEventListener('mousemove', handle_mousemove);\n        canvas.addEventListener('mousedown', handle_mousedown);\n        canvas.addEventListener('contextmenu', handle_contextmenu);\n        canvas.addEventListener('mouseup', handle_mouseup);\n        canvas.addEventListener('keydown', handle_keydown);\n        canvas.addEventListener('keyup', handle_keyup);\n        canvas.addEventListener('mouseout', handle_mouseout);\n        canvas.addEventListener('mouseover', handle_mouseover);\n        canvas.addEventListener('wheel', handle_mousewheel);\n        canvas.focus();\n    }\n}\n\nSpiceDisplayConn.prototype.unhook_events = function()\n{\n    if (this.primary_surface !== undefined)\n    {\n        var canvas = this.surfaces[this.primary_surface].canvas;\n        canvas.removeEventListener('mousemove', handle_mousemove);\n        canvas.removeEventListener('mousedown', handle_mousedown);\n        canvas.removeEventListener('contextmenu', handle_contextmenu);\n        canvas.removeEventListener('mouseup', handle_mouseup);\n        canvas.removeEventListener('keydown', handle_keydown);\n        canvas.removeEventListener('keyup', handle_keyup);\n        canvas.removeEventListener('mouseout', handle_mouseout);\n        canvas.removeEventListener('mouseover', handle_mouseover);\n        canvas.removeEventListener('wheel', handle_mousewheel);\n    }\n}\n\n\nSpiceDisplayConn.prototype.destroy_surfaces = function()\n{\n    for (var s in this.surfaces)\n    {\n        this.delete_surface(this.surfaces[s].surface_id);\n    }\n\n    this.surfaces = undefined;\n}\n\n\nfunction handle_mouseover(e)\n{\n    this.focus();\n}\n\nfunction handle_mouseout(e)\n{\n    if (this.sc && this.sc.cursor && this.sc.cursor.spice_simulated_cursor)\n        this.sc.cursor.spice_simulated_cursor.style.display = 'none';\n    this.blur();\n}\n\nfunction handle_draw_jpeg_onload()\n{\n    var temp_canvas = null;\n    var context;\n\n    /*------------------------------------------------------------\n    ** FIXME:\n    **  The helper should be extended to be able to handle actual HtmlImageElements\n    **  ...and the cache should be modified to do so as well\n    **----------------------------------------------------------*/\n    if (this.o.sc.surfaces[this.o.base.surface_id] === undefined)\n    {\n        // This can happen; if the jpeg image loads after our surface\n        //  has been destroyed (e.g. open a menu, close it quickly),\n        //  we'll find we have no surface.  \n        DEBUG > 2 && this.o.sc.log_info(\"Discarding jpeg; presumed lost surface \" + this.o.base.surface_id);\n        temp_canvas = document.createElement(\"canvas\");\n        temp_canvas.setAttribute('width', this.o.base.box.right);\n        temp_canvas.setAttribute('height', this.o.base.box.bottom);\n        context = temp_canvas.getContext(\"2d\");\n    }\n    else\n        context = this.o.sc.surfaces[this.o.base.surface_id].canvas.context;\n\n    if (this.alpha_img)\n    {\n        var c = document.createElement(\"canvas\");\n        var t = c.getContext(\"2d\");\n        c.setAttribute('width', this.alpha_img.width);\n        c.setAttribute('height', this.alpha_img.height);\n        t.putImageData(this.alpha_img, 0, 0);\n        t.globalCompositeOperation = 'source-in';\n        t.drawImage(this, 0, 0);\n     \n        context.drawImage(c, this.o.base.box.left, this.o.base.box.top);\n\n        if (this.o.descriptor && \n            (this.o.descriptor.flags & SPICE_IMAGE_FLAGS_CACHE_ME))\n        {\n            if (! (\"cache\" in this.o.sc))\n                this.o.sc.cache = {};\n\n            this.o.sc.cache[this.o.descriptor.id] = \n                t.getImageData(0, 0,\n                    this.alpha_img.width,\n                    this.alpha_img.height);\n        }\n    }\n    else\n    {\n        context.drawImage(this, this.o.base.box.left, this.o.base.box.top);\n\n        // Give the Garbage collector a clue to recycle this; avoids\n        //  fairly massive memory leaks during video playback\n        this.src = null;\n\n        if (this.o.descriptor && \n            (this.o.descriptor.flags & SPICE_IMAGE_FLAGS_CACHE_ME))\n        {\n            if (! (\"cache\" in this.o.sc))\n                this.o.sc.cache = {};\n\n            this.o.sc.cache[this.o.descriptor.id] = \n                context.getImageData(this.o.base.box.left, this.o.base.box.top,\n                    this.o.base.box.right - this.o.base.box.left,\n                    this.o.base.box.bottom - this.o.base.box.top);\n        }\n    }\n\n    if (temp_canvas == null)\n    {\n        if (DUMP_DRAWS && this.o.sc.parent.dump_id)\n        {\n            var debug_canvas = document.createElement(\"canvas\");\n            debug_canvas.setAttribute('id', this.o.tag + \".\" +\n                this.o.sc.surfaces[this.o.base.surface_id].draw_count + \".\" +\n                this.o.base.surface_id + \"@\" + this.o.base.box.left + \"x\" +  this.o.base.box.top);\n            debug_canvas.getContext(\"2d\").drawImage(this, 0, 0);\n            document.getElementById(this.o.sc.parent.dump_id).appendChild(debug_canvas);\n        }\n\n        this.o.sc.surfaces[this.o.base.surface_id].draw_count++;\n    }\n}\n;\ndefine(\"spice-display\", [\"spice-spiceconn\"], function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2012 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*----------------------------------------------------------------------------\n ** Modifier Keystates\n **     These need to be tracked because focus in and out can get the keyboard\n **     out of sync.\n **------------------------------------------------------------------------*/\nvar Shift_state = -1;\nvar Ctrl_state = -1;\nvar Alt_state = -1;\nvar Meta_state = -1;\n\n/*----------------------------------------------------------------------------\n**  SpiceInputsConn\n**      Drive the Spice Inputs channel (e.g. mouse + keyboard)\n**--------------------------------------------------------------------------*/\nfunction SpiceInputsConn()\n{\n    SpiceConn.apply(this, arguments);\n\n    this.mousex = undefined;\n    this.mousey = undefined;\n    this.button_state = 0;\n    this.waiting_for_ack = 0;\n}\n\nSpiceInputsConn.prototype = Object.create(SpiceConn.prototype);\nSpiceInputsConn.prototype.process_channel_message = function(msg)\n{\n    if (msg.type == SPICE_MSG_INPUTS_INIT)\n    {\n        var inputs_init = new SpiceMsgInputsInit(msg.data);\n        this.keyboard_modifiers = inputs_init.keyboard_modifiers;\n        DEBUG > 1 && console.log(\"MsgInputsInit - modifier \" + this.keyboard_modifiers);\n        // FIXME - We don't do anything with the keyboard modifiers...\n        return true;\n    }\n    if (msg.type == SPICE_MSG_INPUTS_KEY_MODIFIERS)\n    {\n        var key = new SpiceMsgInputsKeyModifiers(msg.data);\n        this.keyboard_modifiers = key.keyboard_modifiers;\n        DEBUG > 1 && console.log(\"MsgInputsKeyModifiers - modifier \" + this.keyboard_modifiers);\n        // FIXME - We don't do anything with the keyboard modifiers...\n        return true;\n    }\n    if (msg.type == SPICE_MSG_INPUTS_MOUSE_MOTION_ACK)\n    {\n        DEBUG > 1 && console.log(\"mouse motion ack\");\n        this.waiting_for_ack -= SPICE_INPUT_MOTION_ACK_BUNCH;\n        return true;\n    }\n    return false;\n}\n\n\n\nfunction handle_mousemove(e)\n{\n    var msg = new SpiceMiniData();\n    var move;\n    if (this.sc.mouse_mode == SPICE_MOUSE_MODE_CLIENT)\n    {\n        move = new SpiceMsgcMousePosition(this.sc, e)\n        msg.build_msg(SPICE_MSGC_INPUTS_MOUSE_POSITION, move);\n    }\n    else\n    {\n        move = new SpiceMsgcMouseMotion(this.sc, e)\n        msg.build_msg(SPICE_MSGC_INPUTS_MOUSE_MOTION, move);\n    }\n    if (this.sc && this.sc.inputs && this.sc.inputs.state === \"ready\")\n    {\n        if (this.sc.inputs.waiting_for_ack < (2 * SPICE_INPUT_MOTION_ACK_BUNCH))\n        {\n            this.sc.inputs.send_msg(msg);\n            this.sc.inputs.waiting_for_ack++;\n        }\n        else\n        {\n            DEBUG > 0 && this.sc.log_info(\"Discarding mouse motion\");\n        }\n    }\n\n    if (this.sc && this.sc.cursor && this.sc.cursor.spice_simulated_cursor)\n    {\n        this.sc.cursor.spice_simulated_cursor.style.display = 'block';\n        this.sc.cursor.spice_simulated_cursor.style.left = e.pageX - this.sc.cursor.spice_simulated_cursor.spice_hot_x + 'px';\n        this.sc.cursor.spice_simulated_cursor.style.top = e.pageY - this.sc.cursor.spice_simulated_cursor.spice_hot_y + 'px';\n        e.preventDefault();\n    }\n\n}\n\nfunction handle_mousedown(e)\n{\n    var press = new SpiceMsgcMousePress(this.sc, e)\n    var msg = new SpiceMiniData();\n    msg.build_msg(SPICE_MSGC_INPUTS_MOUSE_PRESS, press);\n    if (this.sc && this.sc.inputs && this.sc.inputs.state === \"ready\")\n        this.sc.inputs.send_msg(msg);\n\n    e.preventDefault();\n}\n\nfunction handle_contextmenu(e)\n{\n    e.preventDefault();\n    return false;\n}\n\nfunction handle_mouseup(e)\n{\n    var release = new SpiceMsgcMouseRelease(this.sc, e)\n    var msg = new SpiceMiniData();\n    msg.build_msg(SPICE_MSGC_INPUTS_MOUSE_RELEASE, release);\n    if (this.sc && this.sc.inputs && this.sc.inputs.state === \"ready\")\n        this.sc.inputs.send_msg(msg);\n\n    e.preventDefault();\n}\n\nfunction handle_mousewheel(e)\n{\n    var press = new SpiceMsgcMousePress;\n    var release = new SpiceMsgcMouseRelease;\n    if (e.deltaY < 0)\n        press.button = release.button = SPICE_MOUSE_BUTTON_UP;\n    else\n        press.button = release.button = SPICE_MOUSE_BUTTON_DOWN;\n    press.buttons_state = 0;\n    release.buttons_state = 0;\n\n    var msg = new SpiceMiniData();\n    msg.build_msg(SPICE_MSGC_INPUTS_MOUSE_PRESS, press);\n    if (this.sc && this.sc.inputs && this.sc.inputs.state === \"ready\")\n        this.sc.inputs.send_msg(msg);\n\n    msg.build_msg(SPICE_MSGC_INPUTS_MOUSE_RELEASE, release);\n    if (this.sc && this.sc.inputs && this.sc.inputs.state === \"ready\")\n        this.sc.inputs.send_msg(msg);\n\n    e.preventDefault();\n}\n\nfunction handle_keydown(e)\n{\n    var key = new SpiceMsgcKeyDown(e)\n    var msg = new SpiceMiniData();\n    check_and_update_modifiers(e, key.code, this.sc);\n    msg.build_msg(SPICE_MSGC_INPUTS_KEY_DOWN, key);\n    if (this.sc && this.sc.inputs && this.sc.inputs.state === \"ready\")\n        this.sc.inputs.send_msg(msg);\n\n    e.preventDefault();\n}\n\nfunction handle_keyup(e)\n{\n    var key = new SpiceMsgcKeyUp(e)\n    var msg = new SpiceMiniData();\n    check_and_update_modifiers(e, key.code, this.sc);\n    msg.build_msg(SPICE_MSGC_INPUTS_KEY_UP, key);\n    if (this.sc && this.sc.inputs && this.sc.inputs.state === \"ready\")\n        this.sc.inputs.send_msg(msg);\n\n    e.preventDefault();\n}\n\nfunction sendCtrlAltDel()\n{\n    if (sc && sc.inputs && sc.inputs.state === \"ready\"){\n        var key = new SpiceMsgcKeyDown();\n        var msg = new SpiceMiniData();\n\n        update_modifier(true, KEY_LCtrl, sc);\n        update_modifier(true, KEY_Alt, sc);\n\n        key.code = KEY_KP_Decimal;\n        msg.build_msg(SPICE_MSGC_INPUTS_KEY_DOWN, key);\n        sc.inputs.send_msg(msg);\n        msg.build_msg(SPICE_MSGC_INPUTS_KEY_UP, key);\n        sc.inputs.send_msg(msg);\n\n        if(Ctrl_state == false) update_modifier(false, KEY_LCtrl, sc);\n        if(Alt_state == false) update_modifier(false, KEY_Alt, sc);\n    }\n}\n\nfunction update_modifier(state, code, sc)\n{\n    var msg = new SpiceMiniData();\n    if (!state)\n    {\n        var key = new SpiceMsgcKeyUp()\n        key.code =(0x80|code);\n        msg.build_msg(SPICE_MSGC_INPUTS_KEY_UP, key);\n    }\n    else\n    {\n        var key = new SpiceMsgcKeyDown()\n        key.code = code;\n        msg.build_msg(SPICE_MSGC_INPUTS_KEY_DOWN, key);\n    }\n\n    sc.inputs.send_msg(msg);\n}\n\nfunction check_and_update_modifiers(e, code, sc)\n{\n    if (Shift_state === -1)\n    {\n        Shift_state = e.shiftKey;\n        Ctrl_state = e.ctrlKey;\n        Alt_state = e.altKey;\n        Meta_state = e.metaKey;\n    }\n\n    if (code === KEY_ShiftL)\n        Shift_state = true;\n    else if (code === KEY_Alt)\n        Alt_state = true;\n    else if (code === KEY_LCtrl)\n        Ctrl_state = true;\n    else if (code === 0xE0B5)\n        Meta_state = true;\n    else if (code === (0x80|KEY_ShiftL))\n        Shift_state = false;\n    else if (code === (0x80|KEY_Alt))\n        Alt_state = false;\n    else if (code === (0x80|KEY_LCtrl))\n        Ctrl_state = false;\n    else if (code === (0x80|0xE0B5))\n        Meta_state = false;\n\n    if (sc && sc.inputs && sc.inputs.state === \"ready\")\n    {\n        if (Shift_state != e.shiftKey)\n        {\n            console.log(\"Shift state out of sync\");\n            update_modifier(e.shiftKey, KEY_ShiftL, sc);\n            Shift_state = e.shiftKey;\n        }\n        if (Alt_state != e.altKey)\n        {\n            console.log(\"Alt state out of sync\");\n            update_modifier(e.altKey, KEY_Alt, sc);\n            Alt_state = e.altKey;\n        }\n        if (Ctrl_state != e.ctrlKey)\n        {\n            console.log(\"Ctrl state out of sync\");\n            update_modifier(e.ctrlKey, KEY_LCtrl, sc);\n            Ctrl_state = e.ctrlKey;\n        }\n        if (Meta_state != e.metaKey)\n        {\n            console.log(\"Meta state out of sync\");\n            update_modifier(e.metaKey, 0xE0B5, sc);\n            Meta_state = e.metaKey;\n        }\n    }\n}\n;\ndefine(\"spice-inputs\", [\"spice-spiceconn\"], function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2014 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n/*----------------------------------------------------------------------------\n**  EBML identifiers\n**--------------------------------------------------------------------------*/\nvar EBML_HEADER =                           [ 0x1a, 0x45, 0xdf, 0xa3 ];\nvar EBML_HEADER_VERSION =                   [ 0x42, 0x86 ];\nvar EBML_HEADER_READ_VERSION =              [ 0x42, 0xf7 ];\nvar EBML_HEADER_MAX_ID_LENGTH =             [ 0x42, 0xf2 ];\nvar EBML_HEADER_MAX_SIZE_LENGTH =           [ 0x42, 0xf3 ];\nvar EBML_HEADER_DOC_TYPE =                  [ 0x42, 0x82 ];\nvar EBML_HEADER_DOC_TYPE_VERSION =          [ 0x42, 0x87 ];\nvar EBML_HEADER_DOC_TYPE_READ_VERSION =     [ 0x42, 0x85 ];\n\nvar WEBM_SEGMENT_HEADER =                   [ 0x18, 0x53, 0x80, 0x67 ];\nvar WEBM_SEGMENT_INFORMATION =              [ 0x15, 0x49, 0xA9, 0x66 ];\n\nvar WEBM_TIMECODE_SCALE =                   [ 0x2A, 0xD7, 0xB1 ];\nvar WEBM_MUXING_APP =                       [ 0x4D, 0x80 ];\nvar WEBM_WRITING_APP =                      [ 0x57, 0x41 ];\n\nvar WEBM_SEEK_HEAD =                        [ 0x11, 0x4D, 0x9B, 0x74 ];\nvar WEBM_SEEK =                             [ 0x4D, 0xBB ];\nvar WEBM_SEEK_ID =                          [ 0x53, 0xAB ];\nvar WEBM_SEEK_POSITION =                    [ 0x53, 0xAC ];\n\nvar WEBM_TRACKS =                           [ 0x16, 0x54, 0xAE, 0x6B ];\nvar WEBM_TRACK_ENTRY =                      [ 0xAE ];\nvar WEBM_TRACK_NUMBER =                     [ 0xD7 ];\nvar WEBM_TRACK_UID =                        [ 0x73, 0xC5 ];\nvar WEBM_TRACK_TYPE =                       [ 0x83 ];\nvar WEBM_FLAG_ENABLED =                     [ 0xB9 ];\nvar WEBM_FLAG_DEFAULT =                     [ 0x88 ];\nvar WEBM_FLAG_FORCED =                      [ 0x55, 0xAA ];\nvar WEBM_FLAG_LACING =                      [ 0x9C ];\nvar WEBM_MIN_CACHE =                        [ 0x6D, 0xE7 ];\n\nvar WEBM_MAX_BLOCK_ADDITION_ID =            [ 0x55, 0xEE ];\nvar WEBM_CODEC_DECODE_ALL =                 [ 0xAA ];\nvar WEBM_SEEK_PRE_ROLL =                    [ 0x56, 0xBB ];\nvar WEBM_CODEC_DELAY =                      [ 0x56, 0xAA ];\nvar WEBM_CODEC_PRIVATE =                    [ 0x63, 0xA2 ];\nvar WEBM_CODEC_ID =                         [ 0x86 ];\n\nvar WEBM_AUDIO =                            [ 0xE1 ] ;\nvar WEBM_SAMPLING_FREQUENCY =               [ 0xB5 ] ;\nvar WEBM_CHANNELS =                         [ 0x9F ] ;\n\nvar WEBM_CLUSTER =                          [ 0x1F, 0x43, 0xB6, 0x75 ];\nvar WEBM_TIME_CODE =                        [ 0xE7 ] ;\nvar WEBM_SIMPLE_BLOCK =                     [ 0xA3 ] ;\n\n/*----------------------------------------------------------------------------\n**  Various OPUS / Webm constants\n**--------------------------------------------------------------------------*/\nvar CLUSTER_SIMPLEBLOCK_FLAG_KEYFRAME       = 1 << 7;\n\nvar OPUS_FREQUENCY                          = 48000;\nvar OPUS_CHANNELS                           = 2;\n\nvar SPICE_PLAYBACK_CODEC                    = 'audio/webm; codecs=\"opus\"';\nvar MAX_CLUSTER_TIME                        = 1000;\n\nvar GAP_DETECTION_THRESHOLD                 = 50;\n\n/*----------------------------------------------------------------------------\n**  EBML utility functions\n**      These classes can create the binary representation of a webm file\n**--------------------------------------------------------------------------*/\nfunction EBML_write_u1_data_len(len, dv, at)\n{\n    var b = 0x80 | len;\n    dv.setUint8(at, b);\n    return at + 1;\n}\n\nfunction EBML_write_u8_value(id, val, dv, at)\n{\n    at = EBML_write_array(id, dv, at);\n    at = EBML_write_u1_data_len(1, dv, at);\n    dv.setUint8(at, val);\n    return at + 1;\n}\n\nfunction EBML_write_u32_value(id, val, dv, at)\n{\n    at = EBML_write_array(id, dv, at);\n    at = EBML_write_u1_data_len(4, dv, at);\n    dv.setUint32(at, val);\n    return at + 4;\n}\n\nfunction EBML_write_u16_value(id, val, dv, at)\n{\n    at = EBML_write_array(id, dv, at);\n    at = EBML_write_u1_data_len(2, dv, at);\n    dv.setUint16(at, val);\n    return at + 2;\n}\n\nfunction EBML_write_float_value(id, val, dv, at)\n{\n    at = EBML_write_array(id, dv, at);\n    at = EBML_write_u1_data_len(4, dv, at);\n    dv.setFloat32(at, val);\n    return at + 4;\n}\n\n\n\nfunction EBML_write_u64_data_len(len, dv, at)\n{\n    /* Javascript doesn't do 64 bit ints, so this cheats and\n        just has a max of 32 bits.  Fine for our purposes */\n    dv.setUint8(at++, 0x01);\n    dv.setUint8(at++, 0x00);\n    dv.setUint8(at++, 0x00);\n    dv.setUint8(at++, 0x00);\n    var val = len & 0xFFFFFFFF;\n    for (var shift = 24; shift >= 0; shift -= 8)\n        dv.setUint8(at++, val >> shift);\n    return at;\n}\n\nfunction EBML_write_array(arr, dv, at)\n{\n    for (var i = 0; i < arr.length; i++)\n        dv.setUint8(at + i, arr[i]);\n    return at + arr.length;\n}\n\nfunction EBML_write_string(str, dv, at)\n{\n    for (var i = 0; i < str.length; i++)\n        dv.setUint8(at + i, str.charCodeAt(i));\n    return at + str.length;\n}\n\nfunction EBML_write_data(id, data, dv, at)\n{\n    at = EBML_write_array(id, dv, at);\n    if (data.length < 127)\n        at = EBML_write_u1_data_len(data.length, dv, at);\n    else\n        at = EBML_write_u64_data_len(data.length, dv, at);\n    if ((typeof data) == \"string\")\n        at = EBML_write_string(data, dv, at);\n    else\n        at = EBML_write_array(data, dv, at);\n    return at;\n}\n\n/*----------------------------------------------------------------------------\n**  Webm objects\n**      These classes can create the binary representation of a webm file\n**--------------------------------------------------------------------------*/\nfunction EBMLHeader()\n{\n    this.id = EBML_HEADER;\n    this.Version = 1;\n    this.ReadVersion = 1;\n    this.MaxIDLength = 4;\n    this.MaxSizeLength = 8;\n    this.DocType = \"webm\";\n    this.DocTypeVersion = 2;  /* Not well specified by the WebM guys, but functionally required for Firefox */\n    this.DocTypeReadVersion = 2;\n}\n\nEBMLHeader.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new DataView(a);\n\n        at = EBML_write_array(this.id, dv, at);\n        at = EBML_write_u64_data_len(0x1f, dv, at);\n        at = EBML_write_u8_value(EBML_HEADER_VERSION, this.Version, dv, at);\n        at = EBML_write_u8_value(EBML_HEADER_READ_VERSION, this.ReadVersion, dv, at);\n        at = EBML_write_u8_value(EBML_HEADER_MAX_ID_LENGTH, this.MaxIDLength, dv, at);\n        at = EBML_write_u8_value(EBML_HEADER_MAX_SIZE_LENGTH, this.MaxSizeLength, dv, at);\n        at = EBML_write_data(EBML_HEADER_DOC_TYPE, this.DocType, dv, at);\n        at = EBML_write_u8_value(EBML_HEADER_DOC_TYPE_VERSION, this.DocTypeVersion, dv, at);\n        at = EBML_write_u8_value(EBML_HEADER_DOC_TYPE_READ_VERSION, this.DocTypeReadVersion, dv, at);\n\n        return at;\n    },\n    buffer_size: function()\n    {\n        return 0x1f + 8 + this.id.length;\n    },\n}\n\nfunction webm_Segment()\n{\n    this.id = WEBM_SEGMENT_HEADER;\n}\n\nwebm_Segment.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new DataView(a);\n\n        at = EBML_write_array(this.id, dv, at);\n        dv.setUint8(at++, 0xff);\n        return at;\n    },\n    buffer_size: function()\n    {\n        return this.id.length + 1;\n    },\n}\n\nfunction webm_SegmentInformation()\n{\n    this.id = WEBM_SEGMENT_INFORMATION;\n    this.timecode_scale = 1000000; /* 1 ms */\n    this.muxing_app = \"spice\";\n    this.writing_app = \"spice-html5\";\n\n}\n\nwebm_SegmentInformation.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new DataView(a);\n\n        at = EBML_write_array(this.id, dv, at);\n        at = EBML_write_u64_data_len(this.buffer_size() - 8 - this.id.length, dv, at);\n        at = EBML_write_u32_value(WEBM_TIMECODE_SCALE, this.timecode_scale, dv, at);\n        at = EBML_write_data(WEBM_MUXING_APP, this.muxing_app, dv, at);\n        at = EBML_write_data(WEBM_WRITING_APP, this.writing_app, dv, at);\n        return at;\n    },\n    buffer_size: function()\n    {\n        return this.id.length + 8 +\n                 WEBM_TIMECODE_SCALE.length + 1 + 4 +\n                 WEBM_MUXING_APP.length + 1 + this.muxing_app.length +\n                 WEBM_WRITING_APP.length + 1 + this.writing_app.length;\n    },\n}\n\nfunction webm_Audio(frequency)\n{\n    this.id = WEBM_AUDIO;\n    this.sampling_frequency = frequency;\n    this.channels = OPUS_CHANNELS;\n}\n\nwebm_Audio.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new DataView(a);\n        at = EBML_write_array(this.id, dv, at);\n        at = EBML_write_u64_data_len(this.buffer_size() - 8 - this.id.length, dv, at);\n        at = EBML_write_u8_value(WEBM_CHANNELS, this.channels, dv, at);\n        at = EBML_write_float_value(WEBM_SAMPLING_FREQUENCY, this.sampling_frequency, dv, at);\n        return at;\n    },\n    buffer_size: function()\n    {\n        return this.id.length + 8 +\n            WEBM_SAMPLING_FREQUENCY.length + 1 + 4 +\n            WEBM_CHANNELS.length + 1 + 1;\n    },\n}\n\n\n/* ---------------------------\n   SeekHead not currently used.  Hopefully not needed.\n*/\nfunction webm_Seek(seekid, pos)\n{\n    this.id = WEBM_SEEK;\n    this.pos = pos;\n    this.seekid = seekid;\n}\n\nwebm_Seek.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new DataView(a);\n        at = EBML_write_array(this.id, dv, at);\n        at = EBML_write_u1_data_len(this.buffer_size() - 1 - this.id.length, dv, at);\n\n        at = EBML_write_data(WEBM_SEEK_ID, this.seekid, dv, at)\n        at = EBML_write_u16_value(WEBM_SEEK_POSITION, this.pos, dv, at)\n\n        return at;\n    },\n    buffer_size: function()\n    {\n        return this.id.length + 1 +\n                WEBM_SEEK_ID.length + 1 + this.seekid.length +\n                WEBM_SEEK_POSITION.length + 1 + 2;\n    },\n}\nfunction webm_SeekHead(info_pos, track_pos)\n{\n    this.id = WEBM_SEEK_HEAD;\n    this.info = new webm_Seek(WEBM_SEGMENT_INFORMATION, info_pos);\n    this.track = new webm_Seek(WEBM_TRACKS, track_pos);\n}\n\nwebm_SeekHead.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new DataView(a);\n        at = EBML_write_array(this.id, dv, at);\n        at = EBML_write_u64_data_len(this.buffer_size() - 8 - this.id.length, dv, at);\n\n        at = this.info.to_buffer(a, at);\n        at = this.track.to_buffer(a, at);\n\n        return at;\n    },\n    buffer_size: function()\n    {\n        return this.id.length + 8 +\n                this.info.buffer_size() +\n                this.track.buffer_size();\n    },\n}\n\n/* -------------------------------\n   End of Seek Head\n*/\n\nfunction webm_TrackEntry()\n{\n    this.id = WEBM_TRACK_ENTRY;\n    this.number = 1;\n    this.uid = 1;\n    this.type = 2; // Audio\n    this.flag_enabled = 1;\n    this.flag_default = 1;\n    this.flag_forced = 1;\n    this.flag_lacing = 0;\n    this.min_cache = 0; // fixme - check\n    this.max_block_addition_id = 0;\n    this.codec_decode_all = 0; // fixme - check\n    this.seek_pre_roll = 0; // 80000000; // fixme - check\n    this.codec_delay =   80000000; // Must match codec_private.preskip\n    this.codec_id = \"A_OPUS\";\n    this.audio = new webm_Audio(OPUS_FREQUENCY);\n\n    // See:  http://tools.ietf.org/html/draft-terriberry-oggopus-01\n    this.codec_private = [ 0x4f, 0x70, 0x75, 0x73, 0x48, 0x65, 0x61, 0x64,  // OpusHead\n                           0x01, // Version\n                           OPUS_CHANNELS,\n                           0x00, 0x0F, // Preskip - 3840 samples - should be 8ms at 48kHz\n                           0x80, 0xbb, 0x00, 0x00,  // 48000\n                           0x00, 0x00, // Output gain\n                           0x00  // Channel mapping family\n                           ];\n}\n\nwebm_TrackEntry.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new DataView(a);\n        at = EBML_write_array(this.id, dv, at);\n        at = EBML_write_u64_data_len(this.buffer_size() - 8 - this.id.length, dv, at);\n        at = EBML_write_u8_value(WEBM_TRACK_NUMBER, this.number, dv, at);\n        at = EBML_write_u8_value(WEBM_TRACK_UID, this.uid, dv, at);\n        at = EBML_write_u8_value(WEBM_FLAG_ENABLED, this.flag_enabled, dv, at);\n        at = EBML_write_u8_value(WEBM_FLAG_DEFAULT, this.flag_default, dv, at);\n        at = EBML_write_u8_value(WEBM_FLAG_FORCED, this.flag_forced, dv, at);\n        at = EBML_write_u8_value(WEBM_FLAG_LACING, this.flag_lacing, dv, at);\n        at = EBML_write_data(WEBM_CODEC_ID, this.codec_id, dv, at);\n        at = EBML_write_u8_value(WEBM_MIN_CACHE, this.min_cache, dv, at);\n        at = EBML_write_u8_value(WEBM_MAX_BLOCK_ADDITION_ID, this.max_block_addition_id, dv, at);\n        at = EBML_write_u8_value(WEBM_CODEC_DECODE_ALL, this.codec_decode_all, dv, at);\n        at = EBML_write_u32_value(WEBM_CODEC_DELAY, this.codec_delay, dv, at);\n        at = EBML_write_u32_value(WEBM_SEEK_PRE_ROLL, this.seek_pre_roll, dv, at);\n        at = EBML_write_u8_value(WEBM_TRACK_TYPE, this.type, dv, at);\n        at = EBML_write_data(WEBM_CODEC_PRIVATE, this.codec_private, dv, at);\n\n        at = this.audio.to_buffer(a, at);\n        return at;\n    },\n    buffer_size: function()\n    {\n        return this.id.length + 8 +\n            WEBM_TRACK_NUMBER.length + 1 + 1 +\n            WEBM_TRACK_UID.length + 1 + 1 +\n            WEBM_TRACK_TYPE.length + 1 + 1 +\n            WEBM_FLAG_ENABLED.length + 1 + 1 +\n            WEBM_FLAG_DEFAULT.length + 1 + 1 +\n            WEBM_FLAG_FORCED.length + 1 + 1 +\n            WEBM_FLAG_LACING.length + 1 + 1 +\n            WEBM_MIN_CACHE.length + 1 + 1 +\n            WEBM_MAX_BLOCK_ADDITION_ID.length + 1 + 1 +\n            WEBM_CODEC_DECODE_ALL.length + 1 + 1 +\n            WEBM_SEEK_PRE_ROLL.length + 1 + 4 +\n            WEBM_CODEC_DELAY.length + 1 + 4 +\n            WEBM_CODEC_ID.length + this.codec_id.length + 1 +\n            WEBM_CODEC_PRIVATE.length + 1 + this.codec_private.length +\n            this.audio.buffer_size();\n    },\n}\nfunction webm_Tracks(entry)\n{\n    this.id = WEBM_TRACKS;\n    this.track_entry = entry;\n}\n\nwebm_Tracks.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new DataView(a);\n        at = EBML_write_array(this.id, dv, at);\n        at = EBML_write_u64_data_len(this.buffer_size() - 8 - this.id.length, dv, at);\n        at = this.track_entry.to_buffer(a, at);\n        return at;\n    },\n    buffer_size: function()\n    {\n        return this.id.length + 8 +\n                 this.track_entry.buffer_size();\n    },\n}\n\nfunction webm_Cluster(timecode, data)\n{\n    this.id = WEBM_CLUSTER;\n    this.timecode = timecode;\n    this.data = data;\n}\n\nwebm_Cluster.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new DataView(a);\n        at = EBML_write_array(this.id, dv, at);\n        dv.setUint8(at++, 0xff);\n        at = EBML_write_u32_value(WEBM_TIME_CODE, this.timecode, dv, at);\n        return at;\n    },\n    buffer_size: function()\n    {\n        return this.id.length + 1 +\n                 WEBM_TIME_CODE.length + 1 + 4;\n    },\n}\n\nfunction webm_SimpleBlock(timecode, data, keyframe)\n{\n    this.id = WEBM_SIMPLE_BLOCK;\n    this.timecode = timecode;\n    this.data = data;\n    this.keyframe = keyframe;\n}\n\nwebm_SimpleBlock.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new DataView(a);\n        at = EBML_write_array(this.id, dv, at);\n        at = EBML_write_u64_data_len(this.data.byteLength + 4, dv, at);\n        at = EBML_write_u1_data_len(1, dv, at); // Track #\n        dv.setUint16(at, this.timecode); at += 2; // timecode - relative to cluster\n        dv.setUint8(at, this.keyframe ? CLUSTER_SIMPLEBLOCK_FLAG_KEYFRAME : 0); at += 1;  // flags\n\n        // FIXME - There should be a better way to copy\n        var u8 = new Uint8Array(this.data);\n        for (var i = 0; i < this.data.byteLength; i++)\n            dv.setUint8(at++, u8[i]);\n\n        return at;\n    },\n    buffer_size: function()\n    {\n        return this.id.length + 8 +\n                 1 + 2 + 1 +\n                 this.data.byteLength;\n    },\n}\n\nfunction webm_Header()\n{\n    this.ebml = new EBMLHeader;\n    this.segment = new webm_Segment;\n    this.seek_head = new webm_SeekHead(0, 0);\n\n    this.seek_head.info.pos = this.segment.buffer_size() + this.seek_head.buffer_size();\n\n    this.info = new webm_SegmentInformation;\n\n    this.seek_head.track.pos = this.seek_head.info.pos + this.info.buffer_size();\n\n    this.track_entry = new webm_TrackEntry;\n    this.tracks = new webm_Tracks(this.track_entry);\n}\n\nwebm_Header.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        at = this.ebml.to_buffer(a, at);\n        at = this.segment.to_buffer(a, at);\n        at = this.info.to_buffer(a, at);\n        at = this.tracks.to_buffer(a, at);\n\n        return at;\n    },\n    buffer_size: function()\n    {\n        return this.ebml.buffer_size() +\n               this.segment.buffer_size() +\n               this.info.buffer_size() +\n               this.tracks.buffer_size();\n    },\n}\n;\ndefine(\"spice-webm\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2014 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*----------------------------------------------------------------------------\n**  SpicePlaybackConn\n**      Drive the Spice Playback channel (sound out)\n**--------------------------------------------------------------------------*/\nfunction SpicePlaybackConn()\n{\n    SpiceConn.apply(this, arguments);\n\n    this.queue = new Array();\n    this.append_okay = false;\n    this.start_time = 0;\n    this.skip_until = 0;\n    this.gap_time = 0;\n}\n\nSpicePlaybackConn.prototype = Object.create(SpiceConn.prototype);\nSpicePlaybackConn.prototype.process_channel_message = function(msg)\n{\n    if (!!!window.MediaSource)\n    {\n        this.log_err('MediaSource API is not available');\n        return false;\n    }\n\n    if (msg.type == SPICE_MSG_PLAYBACK_START)\n    {\n        var start = new SpiceMsgPlaybackStart(msg.data);\n\n        DEBUG > 0 && console.log(\"PlaybackStart; frequency \" + start.frequency);\n\n        if (start.frequency != OPUS_FREQUENCY)\n        {\n            this.log_err('This player cannot handle frequency ' + start.frequency);\n            return false;\n        }\n\n        if (start.channels != OPUS_CHANNELS)\n        {\n            this.log_err('This player cannot handle ' + start.channels + ' channels');\n            return false;\n        }\n\n        if (start.format != SPICE_AUDIO_FMT_S16)\n        {\n            this.log_err('This player cannot format ' + start.format);\n            return false;\n        }\n\n        if (! this.source_buffer)\n        {\n            this.media_source = new MediaSource();\n            this.media_source.spiceconn = this;\n\n            this.audio = document.createElement(\"audio\");\n            this.audio.setAttribute('autoplay', true);\n            this.audio.src = window.URL.createObjectURL(this.media_source);\n            document.getElementById(this.parent.screen_id).appendChild(this.audio);\n\n            this.media_source.addEventListener('sourceopen', handle_source_open, false);\n            this.media_source.addEventListener('sourceended', handle_source_ended, false);\n            this.media_source.addEventListener('sourceclosed', handle_source_closed, false);\n\n            this.bytes_written = 0;\n\n            return true;\n        }\n    }\n\n    if (msg.type == SPICE_MSG_PLAYBACK_DATA)\n    {\n        var data = new SpiceMsgPlaybackData(msg.data);\n\n        // If this packet has the same time as the last, just bump up by one.\n        if (this.last_data_time && data.time <= this.last_data_time)\n        {\n            // FIXME - this is arguably wrong.  But delaying the transmission was worse,\n            //          in initial testing.  Could use more research.\n            DEBUG > 1 && console.log(\"Hacking time of \" + data.time + \" to \" + this.last_data_time + 1);\n            data.time = this.last_data_time + 1;\n        }\n\n        /* Gap detection:  If there has been a delay since our last packet, then audio must\n             have paused.  Handling that gets tricky.  In Chrome, you can seek forward,\n             but you cannot in Firefox.  And seeking forward in Chrome is nice, as it keeps\n             Chrome from being overly cautious in it's buffer strategy.\n\n             So we do two things.  First, we seek forward.  Second, we compute how much of a gap\n             there would have been, and essentially eliminate it.\n        */\n        if (this.last_data_time && data.time >= (this.last_data_time + GAP_DETECTION_THRESHOLD))\n        {\n            this.skip_until = data.time;\n            this.gap_time = (data.time - this.start_time) - \n              (this.source_buffer.buffered.end(this.source_buffer.buffered.end.length - 1) * 1000.0).toFixed(0);\n        }\n\n        this.last_data_time = data.time;\n\n\n        DEBUG > 1 && console.log(\"PlaybackData; time \" + data.time + \"; length \" + data.data.byteLength);\n\n        if (! this.source_buffer)\n            return true;\n\n        if (this.start_time == 0)\n            this.start_playback(data);\n\n        else if (data.time - this.cluster_time >= MAX_CLUSTER_TIME || this.skip_until > 0)\n            this.new_cluster(data);\n\n        else\n            this.simple_block(data, false);\n\n        if (this.skip_until > 0)\n        {\n            this.audio.currentTime = (this.skip_until - this.start_time - this.gap_time) / 1000.0;\n            this.skip_until = 0;\n        }\n\n        if (this.audio.paused)\n            this.audio.play();\n\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_PLAYBACK_MODE)\n    {\n        var mode = new SpiceMsgPlaybackMode(msg.data);\n        if (mode.mode != SPICE_AUDIO_DATA_MODE_OPUS)\n        {\n            this.log_err('This player cannot handle mode ' + mode.mode);\n            delete this.source_buffer;\n        }\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_PLAYBACK_STOP)\n    {\n        return true;\n    }\n\n    return false;\n}\n\nSpicePlaybackConn.prototype.start_playback = function(data)\n{\n    this.start_time = data.time;\n\n    var h = new webm_Header();\n\n    var mb = new ArrayBuffer(h.buffer_size())\n\n    this.bytes_written = h.to_buffer(mb);\n\n    this.source_buffer.addEventListener('error', handle_sourcebuffer_error, false);\n    this.source_buffer.addEventListener('updateend', handle_append_buffer_done, false);\n    playback_append_buffer(this, mb);\n\n    this.new_cluster(data);\n}\n\nSpicePlaybackConn.prototype.new_cluster = function(data)\n{\n    this.cluster_time = data.time;\n\n    var c = new webm_Cluster(data.time - this.start_time - this.gap_time);\n\n    var mb = new ArrayBuffer(c.buffer_size());\n    this.bytes_written += c.to_buffer(mb);\n\n    if (this.append_okay)\n        playback_append_buffer(this, mb);\n    else\n        this.queue.push(mb);\n\n    this.simple_block(data, true);\n}\n\nSpicePlaybackConn.prototype.simple_block = function(data, keyframe)\n{\n    var sb = new webm_SimpleBlock(data.time - this.cluster_time, data.data, keyframe);\n    var mb = new ArrayBuffer(sb.buffer_size());\n\n    this.bytes_written += sb.to_buffer(mb);\n\n    if (this.append_okay)\n        playback_append_buffer(this, mb);\n    else\n        this.queue.push(mb);\n}\n\nfunction handle_source_open(e)\n{\n    var p = this.spiceconn;\n\n    if (p.source_buffer)\n        return;\n\n    p.source_buffer = this.addSourceBuffer(SPICE_PLAYBACK_CODEC);\n    if (! p.source_buffer)\n    {\n        p.log_err('Codec ' + SPICE_PLAYBACK_CODEC + ' not available.');\n        return;\n    }\n    p.source_buffer.spiceconn = p;\n    p.source_buffer.mode = \"segments\";\n\n    // FIXME - Experimentation with segments and sequences was unsatisfying.\n    //         Switching to sequence did not solve our gap problem,\n    //         but the browsers didn't fully support the time seek capability\n    //         we would expect to gain from 'segments'.\n    //         Segments worked at the time of this patch, so segments it is for now.\n\n}\n\nfunction handle_source_ended(e)\n{\n    var p = this.spiceconn;\n    p.log_err('Audio source unexpectedly ended.');\n}\n\nfunction handle_source_closed(e)\n{\n    var p = this.spiceconn;\n    p.log_err('Audio source unexpectedly closed.');\n}\n\nfunction handle_append_buffer_done(b)\n{\n    var p = this.spiceconn;\n    if (p.queue.length > 0)\n    {\n        var mb = p.queue.shift();\n        playback_append_buffer(p, mb);\n    }\n    else\n        p.append_okay = true;\n\n}\n\nfunction handle_sourcebuffer_error(e)\n{\n    var p = this.spiceconn;\n    p.log_err('source_buffer error ' + e.message);\n}\n\nfunction playback_append_buffer(p, b)\n{\n    try\n    {\n        p.source_buffer.appendBuffer(b);\n        p.append_okay = false;\n    }\n    catch (e)\n    {\n        p.log_err(\"Error invoking appendBuffer: \" + e.message);\n    }\n}\n;\ndefine(\"spice-playback\", [\"spice-spiceconn\"], function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2013 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*----------------------------------------------------------------------------\n**  SpiceSimulateCursor\n**      Internet Explorer 10 does not support data uri's in cursor assignment.\n**  This file provides a number of gimmicks to compensate.  First, if there\n**  is a preloaded cursor available, we will use that.  Failing that, we will\n**  simulate a cursor using an image that is moved around the screen.\n**--------------------------------------------------------------------------*/\nvar SpiceSimulateCursor = {\n\ncursors : new Array(),\nunknown_cursors : new Array(),\nwarned: false,\n\nadd_cursor: function(sha1, value)\n{\n    SpiceSimulateCursor.cursors[sha1] = value;\n},\n\nunknown_cursor: function(sha1, curdata)\n{\n    if (! SpiceSimulateCursor.warned)\n    {\n        SpiceSimulateCursor.warned = true;\n        alert(\"Internet Explorer does not support dynamic cursors.  \" +\n              \"This page will now simulate cursors with images, \" +\n              \"which will be imperfect.  We recommend using Chrome or Firefox instead.  \" +\n              \"\\n\\nIf you need to use Internet Explorer, you can create a static cursor \" +\n              \"file for each cursor your application uses.  \" +\n              \"View the console log for more information on creating static cursors for your environment.\");\n    }\n\n    if (! SpiceSimulateCursor.unknown_cursors[sha1])\n    {\n        SpiceSimulateCursor.unknown_cursors[sha1] = curdata;\n        console.log('Unknown cursor.  Simulation required.  To avoid simulation for this cursor, create and include a custom javascript file, and add the following line:');\n        console.log('SpiceCursorSimulator.add_cursor(\"' + sha1 + '\"), \"<your filename here>.cur\");');\n        console.log('And then run following command, redirecting output into <your filename here>.cur:');\n        console.log('php -r \"echo urldecode(\\'' + curdata + '\\');\"');\n    }\n},\n\nsimulate_cursor: function (spicecursor, cursor, screen, pngstr)\n{\n    var cursor_sha = hex_sha1(pngstr + ' ' + cursor.header.hot_spot_x + ' ' + cursor.header.hot_spot_y);\n    if (typeof SpiceSimulateCursor.cursors != 'undefined')\n        if (typeof SpiceSimulateCursor.cursors[cursor_sha] != 'undefined')\n        {\n            var curstr = 'url(' + SpiceSimulateCursor.cursors[cursor_sha] + '), default';\n            screen.style.cursor = curstr;\n        }\n\n    if (window.getComputedStyle(screen, null).cursor == 'auto')\n    {\n        SpiceSimulateCursor.unknown_cursor(cursor_sha, \n            SpiceSimulateCursor.create_icondir(cursor.header.width, cursor.header.height,\n            cursor.data.byteLength, cursor.header.hot_spot_x, cursor.header.hot_spot_y) + pngstr);\n\n        document.getElementById(spicecursor.parent.screen_id).style.cursor = 'none';\n        if (! spicecursor.spice_simulated_cursor)\n        {\n            spicecursor.spice_simulated_cursor = document.createElement('img');\n\n            spicecursor.spice_simulated_cursor.style.position = 'absolute';\n            spicecursor.spice_simulated_cursor.style.display = 'none';\n            spicecursor.spice_simulated_cursor.style.overflow = 'hidden';\n\n            spicecursor.spice_simulated_cursor.spice_screen = document.getElementById(spicecursor.parent.screen_id);\n\n            spicecursor.spice_simulated_cursor.addEventListener('mousemove', SpiceSimulateCursor.handle_sim_mousemove);\n\n            spicecursor.spice_simulated_cursor.spice_screen.appendChild(spicecursor.spice_simulated_cursor);\n        }\n\n        spicecursor.spice_simulated_cursor.src = 'data:image/png,' + pngstr;\n\n        spicecursor.spice_simulated_cursor.spice_hot_x = cursor.header.hot_spot_x;\n        spicecursor.spice_simulated_cursor.spice_hot_y = cursor.header.hot_spot_y;\n\n        spicecursor.spice_simulated_cursor.style.pointerEvents = \"none\";\n    }\n    else\n    { \n        if (spicecursor.spice_simulated_cursor)\n        {\n            spicecursor.spice_simulated_cursor.spice_screen.removeChild(spicecursor.spice_simulated_cursor);\n            delete spicecursor.spice_simulated_cursor;\n        }\n    }\n},\n\nhandle_sim_mousemove: function(e)\n{\n    var retval;\n    var f = SpiceSimulateCursor.duplicate_mouse_event(e, this.spice_screen);\n    return this.spice_screen.dispatchEvent(f);\n},\n\nduplicate_mouse_event: function(e, target)\n{\n    var evt = document.createEvent(\"mouseevent\");\n    evt.initMouseEvent(e.type, true, true, e.view, e.detail,\n        e.screenX, e.screenY, e.clientX, e.clientY,\n        e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\n    return evt;\n},\n\nICONDIR: function ()\n{\n},\n\nICONDIRENTRY: function(width, height, bytes, hot_x, hot_y)\n{\n    this.width = width;\n    this.height = height;\n    this.bytes = bytes;\n    this.hot_x = hot_x;\n    this.hot_y = hot_y;\n},\n\n\ncreate_icondir: function (width, height, bytes, hot_x, hot_y)\n{\n    var i;\n    var header = new SpiceSimulateCursor.ICONDIR();\n    var entry = new SpiceSimulateCursor.ICONDIRENTRY(width, height, bytes, hot_x, hot_y);\n\n    var mb = new ArrayBuffer(header.buffer_size() + entry.buffer_size());\n    var at = header.to_buffer(mb);\n    at = entry.to_buffer(mb, at);\n\n    var u8 = new Uint8Array(mb);\n    var str = \"\";\n    for (i = 0; i < at; i++)\n    {\n        str += \"%\";\n        if (u8[i] < 16)\n            str += \"0\";\n        str += u8[i].toString(16);\n    }\n    return str;\n},\n\n};\n\nSpiceSimulateCursor.ICONDIR.prototype = \n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        dv.setUint16(at, 0, true); at += 2;\n        dv.setUint16(at, 2, true); at += 2;\n        dv.setUint16(at, 1, true); at += 2;\n        return at;\n    },\n    buffer_size: function()\n    {\n        return 6;\n    }\n};\n\nSpiceSimulateCursor.ICONDIRENTRY.prototype =\n{\n    to_buffer: function(a, at)\n    {\n        at = at || 0;\n        var dv = new SpiceDataView(a);\n        dv.setUint8(at, this.width); at++;\n        dv.setUint8(at, this.height); at++;\n        dv.setUint8(at, 0); at++;  /* color palette count, unused */\n        dv.setUint8(at, 0); at++;  /* reserved */\n        dv.setUint16(at, this.hot_x, true); at += 2;\n        dv.setUint16(at, this.hot_y, true); at += 2;\n        dv.setUint32(at, this.bytes, true); at += 4;\n        dv.setUint32(at, at + 4, true); at += 4;  /* Offset to bytes */\n        return at;\n    },\n    buffer_size: function()\n    {\n        return 16;\n    }\n};\n\ndefine(\"spice-simulatecursor\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2012 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n/*----------------------------------------------------------------------------\n**  SpiceCursorConn\n**      Drive the Spice Cursor Channel\n**--------------------------------------------------------------------------*/\nfunction SpiceCursorConn()\n{\n    SpiceConn.apply(this, arguments);\n}\n\nSpiceCursorConn.prototype = Object.create(SpiceConn.prototype);\nSpiceCursorConn.prototype.process_channel_message = function(msg)\n{\n    if (msg.type == SPICE_MSG_CURSOR_INIT)\n    {\n        var cursor_init = new SpiceMsgCursorInit(msg.data);\n        DEBUG > 1 && console.log(\"SpiceMsgCursorInit\");\n        if (this.parent && this.parent.inputs &&\n            this.parent.inputs.mouse_mode == SPICE_MOUSE_MODE_SERVER)\n        {\n            // FIXME - this imagines that the server actually\n            //          provides the current cursor position,\n            //          instead of 0,0.  As of May 11, 2012,\n            //          that assumption was false :-(.\n            this.parent.inputs.mousex = cursor_init.position.x;\n            this.parent.inputs.mousey = cursor_init.position.y;\n        }\n        // FIXME - We don't handle most of the parameters here...\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_CURSOR_SET)\n    {\n        var cursor_set = new SpiceMsgCursorSet(msg.data);\n        DEBUG > 1 && console.log(\"SpiceMsgCursorSet\");\n        if (cursor_set.flags & SPICE_CURSOR_FLAGS_NONE)\n        {\n            document.getElementById(this.parent.screen_id).style.cursor = \"none\";\n            return true;\n        }\n\n        if (cursor_set.flags > 0)\n            this.log_warn(\"FIXME: No support for cursor flags \" + cursor_set.flags);\n\n        if (cursor_set.cursor.header.type != SPICE_CURSOR_TYPE_ALPHA)\n        {\n            this.log_warn(\"FIXME: No support for cursor type \" + cursor_set.cursor.header.type);\n            return false;\n        }\n\n        this.set_cursor(cursor_set.cursor);\n\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_CURSOR_HIDE)\n    {\n        DEBUG > 1 && console.log(\"SpiceMsgCursorHide\");\n        document.getElementById(this.parent.screen_id).style.cursor = \"none\";\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_CURSOR_RESET)\n    {\n        DEBUG > 1 && console.log(\"SpiceMsgCursorReset\");\n        document.getElementById(this.parent.screen_id).style.cursor = \"auto\";\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_CURSOR_INVAL_ALL)\n    {\n        DEBUG > 1 && console.log(\"SpiceMsgCursorInvalAll\");\n        // FIXME - There may be something useful to do here...\n        return true;\n    }\n\n    return false;\n}\n\nSpiceCursorConn.prototype.set_cursor = function(cursor)\n{\n    var pngstr = create_rgba_png(cursor.header.height, cursor.header.width, cursor.data);\n    var curstr = 'url(data:image/png,' + pngstr + ') ' + \n        cursor.header.hot_spot_x + ' ' + cursor.header.hot_spot_y + \", default\";\n    var screen = document.getElementById(this.parent.screen_id);\n    screen.style.cursor = 'auto';\n    screen.style.cursor = curstr;\n    if (window.getComputedStyle(screen, null).cursor == 'auto')\n        SpiceSimulateCursor.simulate_cursor(this, cursor, screen, pngstr);\n}\n;\ndefine(\"spice-cursor\", [\"spice-spiceconn\"], function(){});\n\n",
    "// Downloaded from http://www-cs-students.stanford.edu/~tjw/jsbn/ by Jeremy White on 6/1/2012\n\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nfunction BigInteger(a,b,c) {\n  if(a != null)\n    if(\"number\" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this[i++]+w[j]+c;\n    c = Math.floor(v/0x4000000);\n    w[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this[i]&0x7fff;\n    var h = this[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this[i]&0x3fff;\n    var h = this[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w[j++] = l&0xfffffff;\n  }\n  return c;\n}\nif(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n}\nelse if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n}\nelse { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r[i] = this[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this[0] = x;\n  else if(x < -1) this[0] = x+DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this[this.t++] = (x>>(this.DB-sh));\n    }\n    else\n      this[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this[i]&((1<<p)-1))<<(k-p);\n        d |= this[--i]>>(p+=this.DB-k);\n      }\n      else {\n        d = (this[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return r;\n  while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];\n  for(i = n-1; i >= 0; --i) r[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r[i-n] = this[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r[i+ds+1] = (this[i]>>cbs)|c;\n    c = (this[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r[i] = 0;\n  r[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r[0] = this[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r[i-ds-1] |= (this[i]&bm)<<cbs;\n    r[i-ds] = this[i]>>bs;\n  }\n  if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this[i]-a[i];\n    r[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  }\n  else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r[i++] = this.DV+c;\n  else if(c > 0) r[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r[i] = 0;\n  for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x[i],r,2*i,0,1);\n    if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r[i+x.t] -= x.DV;\n      r[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }\n  else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);\n    if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    var j = x[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\ndefine(\"spice-jsbn\", function(){});\n\n",
    "// Downloaded from http://www-cs-students.stanford.edu/~tjw/jsbn/ by Jeremy White on 6/1/2012\n\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n\n\n// Depends on jsbn.js and rng.js\n\n// Version 1.1: support utf-8 encoding in pkcs1pad2\n\n// convert a (hex) string to a bignum object\nfunction parseBigInt(str,r) {\n  return new BigInteger(str,r);\n}\n\nfunction linebrk(s,n) {\n  var ret = \"\";\n  var i = 0;\n  while(i + n < s.length) {\n    ret += s.substring(i,i+n) + \"\\n\";\n    i += n;\n  }\n  return ret + s.substring(i,s.length);\n}\n\nfunction byte2Hex(b) {\n  if(b < 0x10)\n    return \"0\" + b.toString(16);\n  else\n    return b.toString(16);\n}\n\n// PKCS#1 (type 2, random) pad input string s to n bytes, and return a bigint\nfunction pkcs1pad2(s,n) {\n  if(n < s.length + 11) { // TODO: fix for utf-8\n    alert(\"Message too long for RSA\");\n    return null;\n  }\n  var ba = new Array();\n  var i = s.length - 1;\n  while(i >= 0 && n > 0) {\n    var c = s.charCodeAt(i--);\n    if(c < 128) { // encode using utf-8\n      ba[--n] = c;\n    }\n    else if((c > 127) && (c < 2048)) {\n      ba[--n] = (c & 63) | 128;\n      ba[--n] = (c >> 6) | 192;\n    }\n    else {\n      ba[--n] = (c & 63) | 128;\n      ba[--n] = ((c >> 6) & 63) | 128;\n      ba[--n] = (c >> 12) | 224;\n    }\n  }\n  ba[--n] = 0;\n  var rng = new SecureRandom();\n  var x = new Array();\n  while(n > 2) { // random non-zero pad\n    x[0] = 0;\n    while(x[0] == 0) rng.nextBytes(x);\n    ba[--n] = x[0];\n  }\n  ba[--n] = 2;\n  ba[--n] = 0;\n  return new BigInteger(ba);\n}\n\n// \"empty\" RSA key constructor\nfunction RSAKey() {\n  this.n = null;\n  this.e = 0;\n  this.d = null;\n  this.p = null;\n  this.q = null;\n  this.dmp1 = null;\n  this.dmq1 = null;\n  this.coeff = null;\n}\n\n// Set the public key fields N and e from hex strings\nfunction RSASetPublic(N,E) {\n  if(N != null && E != null && N.length > 0 && E.length > 0) {\n    this.n = parseBigInt(N,16);\n    this.e = parseInt(E,16);\n  }\n  else\n    alert(\"Invalid RSA public key\");\n}\n\n// Perform raw public operation on \"x\": return x^e (mod n)\nfunction RSADoPublic(x) {\n  return x.modPowInt(this.e, this.n);\n}\n\n// Return the PKCS#1 RSA encryption of \"text\" as an even-length hex string\nfunction RSAEncrypt(text) {\n  var m = pkcs1pad2(text,(this.n.bitLength()+7)>>3);\n  if(m == null) return null;\n  var c = this.doPublic(m);\n  if(c == null) return null;\n  var h = c.toString(16);\n  if((h.length & 1) == 0) return h; else return \"0\" + h;\n}\n\n// Return the PKCS#1 RSA encryption of \"text\" as a Base64-encoded string\n//function RSAEncryptB64(text) {\n//  var h = this.encrypt(text);\n//  if(h) return hex2b64(h); else return null;\n//}\n\n// protected\nRSAKey.prototype.doPublic = RSADoPublic;\n\n// public\nRSAKey.prototype.setPublic = RSASetPublic;\nRSAKey.prototype.encrypt = RSAEncrypt;\n//RSAKey.prototype.encrypt_b64 = RSAEncryptB64;\n\ndefine(\"spice-rsa\", function(){});\n\n",
    "// Downloaded from http://www-cs-students.stanford.edu/~tjw/jsbn/ by Jeremy White on 6/1/2012\n\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n\n\n// prng4.js - uses Arcfour as a PRNG\n\nfunction Arcfour() {\n  this.i = 0;\n  this.j = 0;\n  this.S = new Array();\n}\n\n// Initialize arcfour context from key, an array of ints, each from [0..255]\nfunction ARC4init(key) {\n  var i, j, t;\n  for(i = 0; i < 256; ++i)\n    this.S[i] = i;\n  j = 0;\n  for(i = 0; i < 256; ++i) {\n    j = (j + this.S[i] + key[i % key.length]) & 255;\n    t = this.S[i];\n    this.S[i] = this.S[j];\n    this.S[j] = t;\n  }\n  this.i = 0;\n  this.j = 0;\n}\n\nfunction ARC4next() {\n  var t;\n  this.i = (this.i + 1) & 255;\n  this.j = (this.j + this.S[this.i]) & 255;\n  t = this.S[this.i];\n  this.S[this.i] = this.S[this.j];\n  this.S[this.j] = t;\n  return this.S[(t + this.S[this.i]) & 255];\n}\n\nArcfour.prototype.init = ARC4init;\nArcfour.prototype.next = ARC4next;\n\n// Plug in your RNG constructor here\nfunction prng_newstate() {\n  return new Arcfour();\n}\n\n// Pool size must be a multiple of 4 and greater than 32.\n// An array of bytes the size of the pool will be passed to init()\nvar rng_psize = 256;\n\ndefine(\"spice-prng4\", function(){});\n\n",
    "// Downloaded from http://www-cs-students.stanford.edu/~tjw/jsbn/ by Jeremy White on 6/1/2012\n\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n\n\n// Random number generator - requires a PRNG backend, e.g. prng4.js\n\n// For best results, put code like\n// <body onClick='rng_seed_time();' onKeyPress='rng_seed_time();'>\n// in your main HTML document.\n\nvar rng_state;\nvar rng_pool;\nvar rng_pptr;\n\n// Mix in a 32-bit integer into the pool\nfunction rng_seed_int(x) {\n  rng_pool[rng_pptr++] ^= x & 255;\n  rng_pool[rng_pptr++] ^= (x >> 8) & 255;\n  rng_pool[rng_pptr++] ^= (x >> 16) & 255;\n  rng_pool[rng_pptr++] ^= (x >> 24) & 255;\n  if(rng_pptr >= rng_psize) rng_pptr -= rng_psize;\n}\n\n// Mix in the current time (w/milliseconds) into the pool\nfunction rng_seed_time() {\n  rng_seed_int(new Date().getTime());\n}\n\n// Initialize the pool with junk if needed.\nif(rng_pool == null) {\n  rng_pool = new Array();\n  rng_pptr = 0;\n  var t;\n  if(navigator.appName == \"Netscape\" && navigator.appVersion < \"5\" && window.crypto) {\n    // Extract entropy (256 bits) from NS4 RNG if available\n    var z = window.crypto.random(32);\n    for(t = 0; t < z.length; ++t)\n      rng_pool[rng_pptr++] = z.charCodeAt(t) & 255;\n  }  \n  while(rng_pptr < rng_psize) {  // extract some randomness from Math.random()\n    t = Math.floor(65536 * Math.random());\n    rng_pool[rng_pptr++] = t >>> 8;\n    rng_pool[rng_pptr++] = t & 255;\n  }\n  rng_pptr = 0;\n  rng_seed_time();\n  //rng_seed_int(window.screenX);\n  //rng_seed_int(window.screenY);\n}\n\nfunction rng_get_byte() {\n  if(rng_state == null) {\n    rng_seed_time();\n    rng_state = prng_newstate();\n    rng_state.init(rng_pool);\n    for(rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr)\n      rng_pool[rng_pptr] = 0;\n    rng_pptr = 0;\n    //rng_pool = null;\n  }\n  // TODO: allow reseeding after first request\n  return rng_state.next();\n}\n\nfunction rng_get_bytes(ba) {\n  var i;\n  for(i = 0; i < ba.length; ++i) ba[i] = rng_get_byte();\n}\n\nfunction SecureRandom() {}\n\nSecureRandom.prototype.nextBytes = rng_get_bytes;\n\ndefine(\"spice-rng\", [\"spice-prng4\"], function(){});\n\n",
    "/*\r\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\r\n * in FIPS 180-1\r\n * Version 2.2 Copyright Paul Johnston 2000 - 2009.\r\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\r\n * Distributed under the BSD License\r\n * See http://pajhome.org.uk/crypt/md5 for details.\r\n */\r\n\r\n /* Downloaded 6/1/2012 from the above address by Jeremy White.\r\n    License reproduce here for completeness:\r\n\r\nCopyright (c) 1998 - 2009, Paul Johnston & Contributors\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\r\n\r\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\r\n\r\nNeither the name of the author nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n */\r\n\r\n/*\r\n * Configurable variables. You may need to tweak these to be compatible with\r\n * the server-side, but the defaults work in most cases.\r\n */\r\nvar hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */\r\nvar b64pad  = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\r\n\r\n/*\r\n * These are the functions you'll usually want to call\r\n * They take string arguments and return either hex or base-64 encoded strings\r\n */\r\nfunction hex_sha1(s)    { return rstr2hex(rstr_sha1(str2rstr_utf8(s))); }\r\nfunction b64_sha1(s)    { return rstr2b64(rstr_sha1(str2rstr_utf8(s))); }\r\nfunction any_sha1(s, e) { return rstr2any(rstr_sha1(str2rstr_utf8(s)), e); }\r\nfunction hex_hmac_sha1(k, d)\r\n  { return rstr2hex(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d))); }\r\nfunction b64_hmac_sha1(k, d)\r\n  { return rstr2b64(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d))); }\r\nfunction any_hmac_sha1(k, d, e)\r\n  { return rstr2any(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d)), e); }\r\n\r\n/*\r\n * Perform a simple self-test to see if the VM is working\r\n */\r\nfunction sha1_vm_test()\r\n{\r\n  return hex_sha1(\"abc\").toLowerCase() == \"a9993e364706816aba3e25717850c26c9cd0d89d\";\r\n}\r\n\r\n/*\r\n * Calculate the SHA1 of a raw string\r\n */\r\nfunction rstr_sha1(s)\r\n{\r\n  return binb2rstr(binb_sha1(rstr2binb(s), s.length * 8));\r\n}\r\n\r\n/*\r\n * Calculate the HMAC-SHA1 of a key and some data (raw strings)\r\n */\r\nfunction rstr_hmac_sha1(key, data)\r\n{\r\n  var bkey = rstr2binb(key);\r\n  if(bkey.length > 16) bkey = binb_sha1(bkey, key.length * 8);\r\n\r\n  var ipad = Array(16), opad = Array(16);\r\n  for(var i = 0; i < 16; i++)\r\n  {\r\n    ipad[i] = bkey[i] ^ 0x36363636;\r\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\r\n  }\r\n\r\n  var hash = binb_sha1(ipad.concat(rstr2binb(data)), 512 + data.length * 8);\r\n  return binb2rstr(binb_sha1(opad.concat(hash), 512 + 160));\r\n}\r\n\r\n/*\r\n * Convert a raw string to a hex string\r\n */\r\nfunction rstr2hex(input)\r\n{\r\n  try { hexcase } catch(e) { hexcase=0; }\r\n  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\r\n  var output = \"\";\r\n  var x;\r\n  for(var i = 0; i < input.length; i++)\r\n  {\r\n    x = input.charCodeAt(i);\r\n    output += hex_tab.charAt((x >>> 4) & 0x0F)\r\n           +  hex_tab.charAt( x        & 0x0F);\r\n  }\r\n  return output;\r\n}\r\n\r\n/*\r\n * Convert a raw string to a base-64 string\r\n */\r\nfunction rstr2b64(input)\r\n{\r\n  try { b64pad } catch(e) { b64pad=''; }\r\n  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n  var output = \"\";\r\n  var len = input.length;\r\n  for(var i = 0; i < len; i += 3)\r\n  {\r\n    var triplet = (input.charCodeAt(i) << 16)\r\n                | (i + 1 < len ? input.charCodeAt(i+1) << 8 : 0)\r\n                | (i + 2 < len ? input.charCodeAt(i+2)      : 0);\r\n    for(var j = 0; j < 4; j++)\r\n    {\r\n      if(i * 8 + j * 6 > input.length * 8) output += b64pad;\r\n      else output += tab.charAt((triplet >>> 6*(3-j)) & 0x3F);\r\n    }\r\n  }\r\n  return output;\r\n}\r\n\r\n/*\r\n * Convert a raw string to an arbitrary string encoding\r\n */\r\nfunction rstr2any(input, encoding)\r\n{\r\n  var divisor = encoding.length;\r\n  var remainders = Array();\r\n  var i, q, x, quotient;\r\n\r\n  /* Convert to an array of 16-bit big-endian values, forming the dividend */\r\n  var dividend = Array(Math.ceil(input.length / 2));\r\n  for(i = 0; i < dividend.length; i++)\r\n  {\r\n    dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\r\n  }\r\n\r\n  /*\r\n   * Repeatedly perform a long division. The binary array forms the dividend,\r\n   * the length of the encoding is the divisor. Once computed, the quotient\r\n   * forms the dividend for the next step. We stop when the dividend is zero.\r\n   * All remainders are stored for later use.\r\n   */\r\n  while(dividend.length > 0)\r\n  {\r\n    quotient = Array();\r\n    x = 0;\r\n    for(i = 0; i < dividend.length; i++)\r\n    {\r\n      x = (x << 16) + dividend[i];\r\n      q = Math.floor(x / divisor);\r\n      x -= q * divisor;\r\n      if(quotient.length > 0 || q > 0)\r\n        quotient[quotient.length] = q;\r\n    }\r\n    remainders[remainders.length] = x;\r\n    dividend = quotient;\r\n  }\r\n\r\n  /* Convert the remainders to the output string */\r\n  var output = \"\";\r\n  for(i = remainders.length - 1; i >= 0; i--)\r\n    output += encoding.charAt(remainders[i]);\r\n\r\n  /* Append leading zero equivalents */\r\n  var full_length = Math.ceil(input.length * 8 /\r\n                                    (Math.log(encoding.length) / Math.log(2)))\r\n  for(i = output.length; i < full_length; i++)\r\n    output = encoding[0] + output;\r\n\r\n  return output;\r\n}\r\n\r\n/*\r\n * Encode a string as utf-8.\r\n * For efficiency, this assumes the input is valid utf-16.\r\n */\r\nfunction str2rstr_utf8(input)\r\n{\r\n  var output = \"\";\r\n  var i = -1;\r\n  var x, y;\r\n\r\n  while(++i < input.length)\r\n  {\r\n    /* Decode utf-16 surrogate pairs */\r\n    x = input.charCodeAt(i);\r\n    y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\r\n    if(0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF)\r\n    {\r\n      x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\r\n      i++;\r\n    }\r\n\r\n    /* Encode output as utf-8 */\r\n    if(x <= 0x7F)\r\n      output += String.fromCharCode(x);\r\n    else if(x <= 0x7FF)\r\n      output += String.fromCharCode(0xC0 | ((x >>> 6 ) & 0x1F),\r\n                                    0x80 | ( x         & 0x3F));\r\n    else if(x <= 0xFFFF)\r\n      output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\r\n                                    0x80 | ((x >>> 6 ) & 0x3F),\r\n                                    0x80 | ( x         & 0x3F));\r\n    else if(x <= 0x1FFFFF)\r\n      output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\r\n                                    0x80 | ((x >>> 12) & 0x3F),\r\n                                    0x80 | ((x >>> 6 ) & 0x3F),\r\n                                    0x80 | ( x         & 0x3F));\r\n  }\r\n  return output;\r\n}\r\n\r\n/*\r\n * Encode a string as utf-16\r\n */\r\nfunction str2rstr_utf16le(input)\r\n{\r\n  var output = \"\";\r\n  for(var i = 0; i < input.length; i++)\r\n    output += String.fromCharCode( input.charCodeAt(i)        & 0xFF,\r\n                                  (input.charCodeAt(i) >>> 8) & 0xFF);\r\n  return output;\r\n}\r\n\r\nfunction str2rstr_utf16be(input)\r\n{\r\n  var output = \"\";\r\n  for(var i = 0; i < input.length; i++)\r\n    output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,\r\n                                   input.charCodeAt(i)        & 0xFF);\r\n  return output;\r\n}\r\n\r\n/*\r\n * Convert a raw string to an array of big-endian words\r\n * Characters >255 have their high-byte silently ignored.\r\n */\r\nfunction rstr2binb(input)\r\n{\r\n  var output = Array(input.length >> 2);\r\n  for(var i = 0; i < output.length; i++)\r\n    output[i] = 0;\r\n  for(var i = 0; i < input.length * 8; i += 8)\r\n    output[i>>5] |= (input.charCodeAt(i / 8) & 0xFF) << (24 - i % 32);\r\n  return output;\r\n}\r\n\r\n/*\r\n * Convert an array of big-endian words to a string\r\n */\r\nfunction binb2rstr(input)\r\n{\r\n  var output = \"\";\r\n  for(var i = 0; i < input.length * 32; i += 8)\r\n    output += String.fromCharCode((input[i>>5] >>> (24 - i % 32)) & 0xFF);\r\n  return output;\r\n}\r\n\r\n/*\r\n * Calculate the SHA-1 of an array of big-endian words, and a bit length\r\n */\r\nfunction binb_sha1(x, len)\r\n{\r\n  /* append padding */\r\n  x[len >> 5] |= 0x80 << (24 - len % 32);\r\n  x[((len + 64 >> 9) << 4) + 15] = len;\r\n\r\n  var w = Array(80);\r\n  var a =  1732584193;\r\n  var b = -271733879;\r\n  var c = -1732584194;\r\n  var d =  271733878;\r\n  var e = -1009589776;\r\n\r\n  for(var i = 0; i < x.length; i += 16)\r\n  {\r\n    var olda = a;\r\n    var oldb = b;\r\n    var oldc = c;\r\n    var oldd = d;\r\n    var olde = e;\r\n\r\n    for(var j = 0; j < 80; j++)\r\n    {\r\n      if(j < 16) w[j] = x[i + j];\r\n      else w[j] = bit_rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);\r\n      var t = safe_add(safe_add(bit_rol(a, 5), sha1_ft(j, b, c, d)),\r\n                       safe_add(safe_add(e, w[j]), sha1_kt(j)));\r\n      e = d;\r\n      d = c;\r\n      c = bit_rol(b, 30);\r\n      b = a;\r\n      a = t;\r\n    }\r\n\r\n    a = safe_add(a, olda);\r\n    b = safe_add(b, oldb);\r\n    c = safe_add(c, oldc);\r\n    d = safe_add(d, oldd);\r\n    e = safe_add(e, olde);\r\n  }\r\n  return Array(a, b, c, d, e);\r\n\r\n}\r\n\r\n/*\r\n * Perform the appropriate triplet combination function for the current\r\n * iteration\r\n */\r\nfunction sha1_ft(t, b, c, d)\r\n{\r\n  if(t < 20) return (b & c) | ((~b) & d);\r\n  if(t < 40) return b ^ c ^ d;\r\n  if(t < 60) return (b & c) | (b & d) | (c & d);\r\n  return b ^ c ^ d;\r\n}\r\n\r\n/*\r\n * Determine the appropriate additive constant for the current iteration\r\n */\r\nfunction sha1_kt(t)\r\n{\r\n  return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :\r\n         (t < 60) ? -1894007588 : -899497514;\r\n}\r\n\r\n/*\r\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\r\n * to work around bugs in some JS interpreters.\r\n */\r\nfunction safe_add(x, y)\r\n{\r\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\r\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n  return (msw << 16) | (lsw & 0xFFFF);\r\n}\r\n\r\n/*\r\n * Bitwise rotate a 32-bit number to the left.\r\n */\r\nfunction bit_rol(num, cnt)\r\n{\r\n  return (num << cnt) | (num >>> (32 - cnt));\r\n}\r\n;\ndefine(\"spice-sha1\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2012 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nvar SHA_DIGEST_LENGTH = 20;\n\n/*----------------------------------------------------------------------------\n**  General ticket RSA encryption functions - just good enough to\n**      support what we need to send back an encrypted ticket.\n**--------------------------------------------------------------------------*/\n\n\n/*----------------------------------------------------------------------------\n**  OAEP padding functions.  Inspired by the OpenSSL implementation.\n**--------------------------------------------------------------------------*/\nfunction MGF1(mask, seed)\n{\n    var i, j, outlen;\n    for (i = 0, outlen = 0; outlen < mask.length; i++)\n    {\n        var combo_buf = new String;\n\n        for (j = 0; j < seed.length; j++)\n            combo_buf += String.fromCharCode(seed[j]);\n        combo_buf += String.fromCharCode((i >> 24) & 255);\n        combo_buf += String.fromCharCode((i >> 16) & 255);\n        combo_buf += String.fromCharCode((i >> 8)  & 255);\n        combo_buf += String.fromCharCode((i)       & 255);\n\n        var combo_hash = rstr_sha1(combo_buf);\n        for (j = 0; j < combo_hash.length && outlen < mask.length; j++, outlen++)\n        {\n            mask[outlen] = combo_hash.charCodeAt(j);\n        }\n    }\n}\n\n\nfunction RSA_padding_add_PKCS1_OAEP(tolen, from, param)\n{\n    var seed = new Array(SHA_DIGEST_LENGTH);\n    var rand = new SecureRandom();\n    rand.nextBytes(seed);\n\n    var dblen = tolen - 1 - seed.length;\n    var db = new Array(dblen);\n    var padlen = dblen - from.length - 1;\n    var i;\n\n    if (param === undefined)\n        param = \"\";\n\n    if (padlen < SHA_DIGEST_LENGTH)\n    {\n        console.log(\"Error - data too large for key size.\");\n        return null;\n    }\n\n    for (i = 0; i < padlen; i++)\n        db[i] = 0;\n\n    var param_hash = rstr_sha1(param);\n    for (i = 0; i < param_hash.length; i++)\n        db[i] = param_hash.charCodeAt(i);\n\n    db[padlen] = 1;\n    for (i = 0; i < from.length; i++)\n        db[i + padlen + 1] = from.charCodeAt(i);\n\n    var dbmask = new Array(dblen);\n    if (MGF1(dbmask, seed) < 0)\n            return null;\n\n    for (i = 0; i < dbmask.length; i++)\n        db[i] ^= dbmask[i];\n\n\n    var seedmask = Array(SHA_DIGEST_LENGTH);\n    if (MGF1(seedmask, db) < 0)\n            return null;\n\n    for (i = 0; i < seedmask.length; i++)\n        seed[i] ^= seedmask[i];\n\n    var ret = new String;\n    ret += String.fromCharCode(0);\n    for (i = 0; i < seed.length; i++)\n        ret += String.fromCharCode(seed[i]);\n    for (i = 0; i < db.length; i++)\n        ret += String.fromCharCode(db[i]);\n    return ret;\n}\n\n\nfunction asn_get_length(u8, at)\n{\n    var len = u8[at++];\n    if (len > 0x80)\n    {\n        if (len != 0x81)\n        {\n            console.log(\"Error:  we lazily don't support keys bigger than 255 bytes.  It'd be easy to fix.\");\n            return null;\n        }\n        len = u8[at++];\n    }\n\n    return [ at, len];\n}\n\nfunction find_sequence(u8, at)\n{\n    var lenblock;\n    at = at || 0;\n    if (u8[at++] != 0x30)\n    {\n        console.log(\"Error:  public key should start with a sequence flag.\");\n        return null;\n    }\n\n    lenblock = asn_get_length(u8, at);\n    if (! lenblock)\n        return null;\n    return lenblock;\n}\n\n/*----------------------------------------------------------------------------\n**  Extract an RSA key from a memory buffer\n**--------------------------------------------------------------------------*/\nfunction create_rsa_from_mb(mb, at)\n{\n    var u8 = new Uint8Array(mb);\n    var lenblock;\n    var seq;\n    var ba;\n    var i;\n    var ret;\n\n    /* We have a sequence which contains a sequence followed by a bit string */\n    seq = find_sequence(u8, at);\n    if (! seq)\n        return null;\n\n    at = seq[0];\n    seq = find_sequence(u8, at);\n    if (! seq)\n        return null;\n\n    /* Skip over the contained sequence */\n    at = seq[0] + seq[1];\n    if (u8[at++] != 0x3)\n    {\n        console.log(\"Error: expecting bit string next.\");\n        return null;\n    }\n\n    /* Get the bit string, which is *itself* a sequence.  Having fun yet? */\n    lenblock = asn_get_length(u8, at);\n    if (! lenblock)\n        return null;\n\n    at = lenblock[0];\n    if (u8[at] != 0 && u8[at + 1] != 0x30)\n    {\n        console.log(\"Error: unexpected values in bit string.\");\n        return null;\n    }\n\n    /* Okay, now we have a sequence of two binary values, we hope. */\n    seq = find_sequence(u8, at + 1);\n    if (! seq)\n        return null;\n\n    at = seq[0];\n    if (u8[at++] != 0x02)\n    {\n        console.log(\"Error: expecting integer n next.\");\n        return null;\n    }\n    lenblock = asn_get_length(u8, at);\n    if (! lenblock)\n        return null;\n    at = lenblock[0];\n\n    ba = new Array(lenblock[1]);\n    for (i = 0; i < lenblock[1]; i++)\n        ba[i] = u8[at + i];\n\n    ret = new RSAKey();\n    ret.n = new BigInteger(ba);\n\n    at += lenblock[1];\n\n    if (u8[at++] != 0x02)\n    {\n        console.log(\"Error: expecting integer e next.\");\n        return null;\n    }\n    lenblock = asn_get_length(u8, at);\n    if (! lenblock)\n        return null;\n    at = lenblock[0];\n\n    ret.e = u8[at++];\n    for (i = 1; i < lenblock[1]; i++)\n    {\n        ret.e <<= 8;\n        ret.e |= u8[at++];\n    }\n\n    return ret;\n}\n\nfunction rsa_encrypt(rsa, str)\n{\n    var i;\n    var ret = [];\n    var oaep = RSA_padding_add_PKCS1_OAEP((rsa.n.bitLength()+7)>>3, str);\n    if (! oaep)\n        return null;\n\n    var ba = new Array(oaep.length);\n\n    for (i = 0; i < oaep.length; i++)\n        ba[i] = oaep.charCodeAt(i);\n    var bigint = new BigInteger(ba);\n    var enc = rsa.doPublic(bigint);\n    var h = enc.toString(16);\n    if ((h.length & 1) != 0)\n        h = \"0\" + h;\n    for (i = 0; i < h.length; i += 2)\n        ret[i / 2] = parseInt(h.substring(i, i + 2), 16);\n    return ret;\n}\n;\ndefine(\"spice-ticket\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2014 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*----------------------------------------------------------------------------\n**  resize.js\n**      This bit of Javascript is a set of logic to help with window\n**  resizing, using the agent channel to request screen resizes.\n**\n**  It's a bit tricky, as we want to wait for resizing to settle down\n**  before sending a size.  Further, while horizontal resizing to use the whole\n**  browser width is fairly easy to arrange with css, resizing an element to use\n**  the whole vertical space (or to force a middle div to consume the bulk of the browser\n**  window size) is tricky, and the consensus seems to be that Javascript is\n**  the only right way to do it.\n**--------------------------------------------------------------------------*/\nfunction resize_helper(sc)\n{\n    var w = document.getElementById(sc.screen_id).clientWidth;\n    var h = document.getElementById(sc.screen_id).clientHeight;\n\n    var m = document.getElementById(sc.message_id);\n\n    /* Resize vertically; basically we leave a 20 pixel margin\n         at the bottom, and use the position of the message window\n         to figure out how to resize */\n    var hd = window.innerHeight - m.offsetHeight - m.offsetTop - 20;\n\n    /* Xorg requires height be a multiple of 8; round up */\n    h = h + hd;\n    if (h % 8 > 0)\n        h += (8 - (h % 8));\n\n    /* Xorg requires width be a multiple of 8; round up */\n    if (w % 8 > 0)\n        w += (8 - (w % 8));\n\n\n    sc.resize_window(0, w, h, 32, 0, 0);\n    sc.spice_resize_timer = undefined;\n}\n\nfunction handle_resize(e)\n{\n    var sc = window.spice_connection;\n\n    if (sc && sc.spice_resize_timer)\n    {\n        window.clearTimeout(sc.spice_resize_timer);\n        sc.spice_resize_timer = undefined;\n    }\n\n    sc.spice_resize_timer = window.setTimeout(resize_helper, 200, sc);\n}\n;\ndefine(\"spice-resize\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2014 Red Hat, Inc.\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nfunction SpiceFileXferTask(id, file)\n{\n    this.id = id;\n    this.file = file;\n}\n\nSpiceFileXferTask.prototype.create_progressbar = function()\n{\n    var _this = this;\n    var cancel = document.createElement(\"input\");\n    this.progressbar_container = document.createElement(\"div\");\n    this.progressbar = document.createElement(\"progress\");\n\n    cancel.type = 'button';\n    cancel.value = 'Cancel';\n    cancel.style.float = 'right';\n    cancel.onclick = function()\n    {\n        _this.cancelled = true;\n        _this.remove_progressbar();\n    };\n\n    this.progressbar.setAttribute('max', this.file.size);\n    this.progressbar.setAttribute('value', 0);\n    this.progressbar.style.width = '100%';\n    this.progressbar.style.margin = '4px auto';\n    this.progressbar.style.display = 'inline-block';\n    this.progressbar_container.style.width = '90%';\n    this.progressbar_container.style.margin = 'auto';\n    this.progressbar_container.style.padding = '4px';\n    this.progressbar_container.textContent = this.file.name;\n    this.progressbar_container.appendChild(cancel);\n    this.progressbar_container.appendChild(this.progressbar);\n    document.getElementById('spice-xfer-area').appendChild(this.progressbar_container);\n}\n\nSpiceFileXferTask.prototype.update_progressbar = function(value)\n{\n    this.progressbar.setAttribute('value', value);\n}\n\nSpiceFileXferTask.prototype.remove_progressbar = function()\n{\n    if (this.progressbar_container && this.progressbar_container.parentNode)\n        this.progressbar_container.parentNode.removeChild(this.progressbar_container);\n}\n\nfunction handle_file_dragover(e)\n{\n    e.stopPropagation();\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'copy';\n}\n\nfunction handle_file_drop(e)\n{\n    var sc = window.spice_connection;\n    var files = e.dataTransfer.files;\n\n    e.stopPropagation();\n    e.preventDefault();\n    for (var i = files.length - 1; i >= 0; i--)\n    {\n        if (files[i].type); // do not copy a directory\n            sc.file_xfer_start(files[i]);\n    }\n\n}\n;\ndefine(\"spice-filexfer\", function(){});\n\n",
    "\"use strict\";\n/*\n   Copyright (C) 2012 by Jeremy P. White <jwhite@codeweavers.com>\n\n   This file is part of spice-html5.\n\n   spice-html5 is free software: you can redistribute it and/or modify\n   it under the terms of the GNU Lesser General Public License as published by\n   the Free Software Foundation, either version 3 of the License, or\n   (at your option) any later version.\n\n   spice-html5 is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU Lesser General Public License for more details.\n\n   You should have received a copy of the GNU Lesser General Public License\n   along with spice-html5.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*----------------------------------------------------------------------------\n**  SpiceMainConn\n**      This is the master Javascript class for establishing and\n**  managing a connection to a Spice Server.\n**  \n**      Invocation:  You must pass an object with properties as follows:\n**          uri         (required)  Uri of a WebSocket listener that is\n**                                  connected to a spice server.\n**          password    (required)  Password to send to the spice server\n**          message_id  (optional)  Identifier of an element in the DOM\n**                                  where SpiceConn will write messages.\n**                                  It will use classes spice-messages-x,\n**                                  where x is one of info, warning, or error.\n**          screen_id   (optional)  Identifier of an element in the DOM\n**                                  where SpiceConn will create any new\n**                                  client screens.  This is the main UI.\n**          dump_id     (optional)  If given, an element to use for\n**                                  dumping every single image + canvas drawn.\n**                                  Sometimes useful for debugging.\n**          onerror     (optional)  If given, a function to receive async\n**                                  errors.  Note that you should also catch\n**                                  errors for ones that occur inline\n**          onagent     (optional)  If given, a function to be called when\n**                                  a VD agent is connected; a good opportunity\n**                                  to request a resize\n**\n**  Throws error if there are troubles.  Requires a modern (by 2012 standards)\n**      browser, including WebSocket and WebSocket.binaryType == arraybuffer\n**\n**--------------------------------------------------------------------------*/\nfunction SpiceMainConn()\n{\n    if (typeof WebSocket === \"undefined\")\n        throw new Error(\"WebSocket unavailable.  You need to use a different browser.\");\n\n    SpiceConn.apply(this, arguments);\n\n    this.agent_msg_queue = [];\n    this.file_xfer_tasks = {};\n    this.file_xfer_task_id = 0;\n    this.file_xfer_read_queue = [];\n}\n\nSpiceMainConn.prototype = Object.create(SpiceConn.prototype);\nSpiceMainConn.prototype.process_channel_message = function(msg)\n{\n    if (msg.type == SPICE_MSG_MAIN_INIT)\n    {\n        this.log_info(\"Connected to \" + this.ws.url);\n        this.report_success(\"Connected\")\n        this.main_init = new SpiceMsgMainInit(msg.data);\n        this.connection_id = this.main_init.session_id;\n        this.agent_tokens = this.main_init.agent_tokens;\n\n        if (DEBUG > 0)\n        {\n            // FIXME - there is a lot here we don't handle; mouse modes, agent,\n            //          ram_hint, multi_media_time\n            this.log_info(\"session id \"                 + this.main_init.session_id +\n                          \" ; display_channels_hint \"   + this.main_init.display_channels_hint +\n                          \" ; supported_mouse_modes \"   + this.main_init.supported_mouse_modes +\n                          \" ; current_mouse_mode \"      + this.main_init.current_mouse_mode +\n                          \" ; agent_connected \"         + this.main_init.agent_connected +\n                          \" ; agent_tokens \"            + this.main_init.agent_tokens +\n                          \" ; multi_media_time \"        + this.main_init.multi_media_time +\n                          \" ; ram_hint \"                + this.main_init.ram_hint);\n        }\n\n        this.handle_mouse_mode(this.main_init.current_mouse_mode,\n                               this.main_init.supported_mouse_modes);\n\n        if (this.main_init.agent_connected)\n            this.connect_agent();\n\n        var attach = new SpiceMiniData;\n        attach.type = SPICE_MSGC_MAIN_ATTACH_CHANNELS;\n        attach.size = attach.buffer_size();\n        this.send_msg(attach);\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_MAIN_MOUSE_MODE)\n    {\n        var mode = new SpiceMsgMainMouseMode(msg.data);\n        DEBUG > 0 && this.log_info(\"Mouse supported modes \" + mode.supported_modes + \"; current \" + mode.current_mode);\n        this.handle_mouse_mode(mode.current_mode, mode.supported_modes);\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_MAIN_CHANNELS_LIST)\n    {\n        var i;\n        var chans;\n        DEBUG > 0 && console.log(\"channels\");\n        chans = new SpiceMsgChannels(msg.data);\n        for (i = 0; i < chans.channels.length; i++)\n        {\n            var conn = {\n                        uri: this.ws.url,\n                        parent: this,\n                        connection_id : this.connection_id,\n                        type : chans.channels[i].type,\n                        chan_id : chans.channels[i].id\n                    };\n            if (chans.channels[i].type == SPICE_CHANNEL_DISPLAY)\n                this.display = new SpiceDisplayConn(conn);\n            else if (chans.channels[i].type == SPICE_CHANNEL_INPUTS)\n            {\n                this.inputs = new SpiceInputsConn(conn);\n                this.inputs.mouse_mode = this.mouse_mode;\n            }\n            else if (chans.channels[i].type == SPICE_CHANNEL_CURSOR)\n                this.cursor = new SpiceCursorConn(conn);\n            else if (chans.channels[i].type == SPICE_CHANNEL_PLAYBACK)\n                this.cursor = new SpicePlaybackConn(conn);\n            else\n            {\n                this.log_err(\"Channel type \" + chans.channels[i].type + \" unknown.\");\n                if (! (\"extra_channels\" in this))\n                    this.extra_channels = [];\n                this.extra_channels[i] = new SpiceConn(conn);\n            }\n\n        }\n\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_MAIN_AGENT_CONNECTED)\n    {\n        this.connect_agent();\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_MAIN_AGENT_CONNECTED_TOKENS)\n    {\n        var connected_tokens = new SpiceMsgMainAgentTokens(msg.data);\n        this.agent_tokens = connected_tokens.num_tokens;\n        this.connect_agent();\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_MAIN_AGENT_TOKEN)\n    {\n        var remaining_tokens, tokens = new SpiceMsgMainAgentTokens(msg.data);\n        this.agent_tokens += tokens.num_tokens;\n        this.send_agent_message_queue();\n\n        remaining_tokens = this.agent_tokens;\n        while (remaining_tokens > 0 && this.file_xfer_read_queue.length > 0)\n        {\n            var xfer_task = this.file_xfer_read_queue.shift();\n            this.file_xfer_read(xfer_task, xfer_task.read_bytes);\n            remaining_tokens--;\n        }\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_MAIN_AGENT_DISCONNECTED)\n    {\n        this.agent_connected = false;\n        return true;\n    }\n\n    if (msg.type == SPICE_MSG_MAIN_AGENT_DATA)\n    {\n        var agent_data = new SpiceMsgMainAgentData(msg.data);\n        if (agent_data.type == VD_AGENT_ANNOUNCE_CAPABILITIES)\n        {\n            var agent_caps = new VDAgentAnnounceCapabilities(agent_data.data);\n            if (agent_caps.request)\n                this.announce_agent_capabilities(0);\n            return true;\n        }\n        else if (agent_data.type == VD_AGENT_FILE_XFER_STATUS)\n        {\n            this.handle_file_xfer_status(new VDAgentFileXferStatusMessage(agent_data.data));\n            return true;\n        }\n\n        return false;\n    }\n\n    return false;\n}\n\nSpiceMainConn.prototype.stop = function(msg)\n{\n    this.state = \"closing\";\n\n    if (this.inputs)\n    {\n        this.inputs.cleanup();\n        this.inputs = undefined;\n    }\n\n    if (this.cursor)\n    {\n        this.cursor.cleanup();\n        this.cursor = undefined;\n    }\n\n    if (this.display)\n    {\n        this.display.cleanup();\n        this.display.destroy_surfaces();\n        this.display = undefined;\n    }\n\n    this.cleanup();\n\n    if (\"extra_channels\" in this)\n        for (var e in this.extra_channels)\n            this.extra_channels[e].cleanup();\n    this.extra_channels = undefined;\n}\n\nSpiceMainConn.prototype.send_agent_message_queue = function(message)\n{\n    if (!this.agent_connected)\n        return;\n\n    if (message)\n        this.agent_msg_queue.push(message);\n\n    while (this.agent_tokens > 0 && this.agent_msg_queue.length > 0)\n    {\n        var mr = this.agent_msg_queue.shift();\n        this.send_msg(mr);\n        this.agent_tokens--;\n    }\n}\n\nSpiceMainConn.prototype.send_agent_message = function(type, message)\n{\n    var agent_data = new SpiceMsgcMainAgentData(type, message);\n    var sb = 0, maxsize = VD_AGENT_MAX_DATA_SIZE - SpiceMiniData.prototype.buffer_size();\n    var data = new ArrayBuffer(agent_data.buffer_size());\n    agent_data.to_buffer(data);\n    while (sb < agent_data.buffer_size())\n    {\n        var eb = Math.min(sb + maxsize, agent_data.buffer_size());\n        var mr = new SpiceMiniData();\n        mr.type = SPICE_MSGC_MAIN_AGENT_DATA;\n        mr.size = eb - sb;\n        mr.data = data.slice(sb, eb);\n        this.send_agent_message_queue(mr);\n        sb = eb;\n    }\n}\n\nSpiceMainConn.prototype.announce_agent_capabilities = function(request)\n{\n    var caps = new VDAgentAnnounceCapabilities(request, (1 << VD_AGENT_CAP_MOUSE_STATE) |\n                                                        (1 << VD_AGENT_CAP_MONITORS_CONFIG) |\n                                                        (1 << VD_AGENT_CAP_REPLY));\n    this.send_agent_message(VD_AGENT_ANNOUNCE_CAPABILITIES, caps);\n}\n\nSpiceMainConn.prototype.resize_window = function(flags, width, height, depth, x, y)\n{\n    var monitors_config = new VDAgentMonitorsConfig(flags, width, height, depth, x, y);\n    this.send_agent_message(VD_AGENT_MONITORS_CONFIG, monitors_config);\n}\n\nSpiceMainConn.prototype.file_xfer_start = function(file)\n{\n    var task_id, xfer_start, task;\n\n    task_id = this.file_xfer_task_id++;\n    task = new SpiceFileXferTask(task_id, file);\n    task.create_progressbar();\n    this.file_xfer_tasks[task_id] = task;\n    xfer_start = new VDAgentFileXferStartMessage(task_id, file.name, file.size);\n    this.send_agent_message(VD_AGENT_FILE_XFER_START, xfer_start);\n}\n\nSpiceMainConn.prototype.handle_file_xfer_status = function(file_xfer_status)\n{\n    var xfer_error, xfer_task;\n    if (!this.file_xfer_tasks[file_xfer_status.id])\n    {\n        return;\n    }\n    xfer_task = this.file_xfer_tasks[file_xfer_status.id];\n    switch (file_xfer_status.result)\n    {\n        case VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA:\n            this.file_xfer_read(xfer_task);\n            return;\n        case VD_AGENT_FILE_XFER_STATUS_CANCELLED:\n            xfer_error = \"transfer is cancelled by spice agent\";\n            break;\n        case VD_AGENT_FILE_XFER_STATUS_ERROR:\n            xfer_error = \"some errors occurred in the spice agent\";\n            break;\n        case VD_AGENT_FILE_XFER_STATUS_SUCCESS:\n            break;\n        default:\n            xfer_error = \"unhandled status type: \" + file_xfer_status.result;\n            break;\n    }\n\n    this.file_xfer_completed(xfer_task, xfer_error)\n}\n\nSpiceMainConn.prototype.file_xfer_read = function(file_xfer_task, start_byte)\n{\n    var FILE_XFER_CHUNK_SIZE = 32 * VD_AGENT_MAX_DATA_SIZE;\n    var _this = this;\n    var sb, eb;\n    var slice, reader;\n\n    if (!file_xfer_task ||\n        !this.file_xfer_tasks[file_xfer_task.id] ||\n        (start_byte > 0 && start_byte == file_xfer_task.file.size))\n    {\n        return;\n    }\n\n    if (file_xfer_task.cancelled)\n    {\n        var xfer_status = new VDAgentFileXferStatusMessage(file_xfer_task.id,\n                                                           VD_AGENT_FILE_XFER_STATUS_CANCELLED);\n        this.send_agent_message(VD_AGENT_FILE_XFER_STATUS, xfer_status);\n        delete this.file_xfer_tasks[file_xfer_task.id];\n        return;\n    }\n\n    sb = start_byte || 0,\n    eb = Math.min(sb + FILE_XFER_CHUNK_SIZE, file_xfer_task.file.size);\n\n    if (!this.agent_tokens)\n    {\n        file_xfer_task.read_bytes = sb;\n        this.file_xfer_read_queue.push(file_xfer_task);\n        return;\n    }\n\n    reader = new FileReader();\n    reader.onload = function(e)\n    {\n        var xfer_data = new VDAgentFileXferDataMessage(file_xfer_task.id,\n                                                       e.target.result.byteLength,\n                                                       e.target.result);\n        _this.send_agent_message(VD_AGENT_FILE_XFER_DATA, xfer_data);\n        _this.file_xfer_read(file_xfer_task, eb);\n        file_xfer_task.update_progressbar(eb);\n    };\n\n    slice = file_xfer_task.file.slice(sb, eb);\n    reader.readAsArrayBuffer(slice);\n}\n\nSpiceMainConn.prototype.file_xfer_completed = function(file_xfer_task, error)\n{\n    if (error)\n        this.log_err(error);\n    else\n        this.log_info(\"transfer of '\" + file_xfer_task.file.name +\"' was successful\");\n\n    file_xfer_task.remove_progressbar();\n\n    delete this.file_xfer_tasks[file_xfer_task.id];\n}\n\nSpiceMainConn.prototype.connect_agent = function()\n{\n    this.agent_connected = true;\n\n    var agent_start = new SpiceMsgcMainAgentStart(~0);\n    var mr = new SpiceMiniData();\n    mr.build_msg(SPICE_MSGC_MAIN_AGENT_START, agent_start);\n    this.send_msg(mr);\n\n    this.announce_agent_capabilities(1);\n\n    if (this.onagent !== undefined)\n        this.onagent(this);\n\n}\n\nSpiceMainConn.prototype.handle_mouse_mode = function(current, supported)\n{\n    this.mouse_mode = current;\n    if (current != SPICE_MOUSE_MODE_CLIENT && (supported & SPICE_MOUSE_MODE_CLIENT))\n    {\n        var mode_request = new SpiceMsgcMainMouseModeRequest(SPICE_MOUSE_MODE_CLIENT);\n        var mr = new SpiceMiniData();\n        mr.build_msg(SPICE_MSGC_MAIN_MOUSE_MODE_REQUEST, mode_request);\n        this.send_msg(mr);\n    }\n\n    if (this.inputs)\n        this.inputs.mouse_mode = current;\n}\n\n;\ndefine(\"spice-main\", [\"spice-spiceconn\",\"spice-spicearraybuffer\",\"spice-enums\",\"spice-atKeynames\",\"spice-utils\",\"spice-png\",\"spice-lz\",\"spice-quic\",\"spice-bitmap\",\"spice-spicedataview\",\"spice-spicetype\",\"spice-spicemsg\",\"spice-wire\",\"spice-display\",\"spice-inputs\",\"spice-webm\",\"spice-playback\",\"spice-simulatecursor\",\"spice-cursor\",\"spice-jsbn\",\"spice-rsa\",\"spice-prng4\",\"spice-rng\",\"spice-sha1\",\"spice-ticket\",\"spice-resize\",\"spice-filexfer\"], (function (global) {\n    return function () {\n        var ret, fn;\n        return ret || global.SpiceMainConn;\n    };\n}(this)));\n\n",
    "/* -------------------------------------------------------------------------- */\n/* Copyright 2002-2016, OpenNebula Project, OpenNebula Systems                */\n/*                                                                            */\n/* Licensed under the Apache License, Version 2.0 (the \"License\"); you may    */\n/* not use this file except in compliance with the License. You may obtain    */\n/* a copy of the License at                                                   */\n/*                                                                            */\n/* http://www.apache.org/licenses/LICENSE-2.0                                 */\n/*                                                                            */\n/* Unless required by applicable law or agreed to in writing, software        */\n/* distributed under the License is distributed on an \"AS IS\" BASIS,          */\n/* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   */\n/* See the License for the specific language governing permissions and        */\n/* limitations under the License.                                             */\n/* -------------------------------------------------------------------------- */\n\ndefine('console/spice',['require','spice-main'],function(require) {\n  require('spice-main');\n\n  var host = null, port = null;\n  var sc;\n\n  function spice_set_cookie(name, value, days) {\n    var date, expires;\n    date = new Date();\n    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n    expires = \"; expires=\" + date.toGMTString();\n    document.cookie = name + \"=\" + value + expires + \"; path=/\";\n  };\n\n  function spice_query_var(name, defvalue) {\n    var match = RegExp('[?&]' + name + '=([^&]*)')\n                      .exec(window.location.search);\n    return match ?\n        decodeURIComponent(match[1].replace(/\\+/g, ' '))\n        : defvalue;\n  }\n\n  function spice_error(e) {\n    disconnect();\n  }\n\n  function connect() {\n    var host, port, password, scheme = \"ws://\", uri;\n\n    // By default, use the host and port of server that served this file\n    host = spice_query_var('host', window.location.hostname);\n\n    // Note that using the web server port only makes sense\n    //  if your web server has a reverse proxy to relay the WebSocket\n    //  traffic to the correct destination port.\n    var default_port = window.location.port;\n    if (!default_port) {\n      if (window.location.protocol == 'http:') {\n        default_port = 80;\n      } else if (window.location.protocol == 'https:') {\n        default_port = 443;\n      }\n    }\n    port = spice_query_var('port', default_port);\n    if (window.location.protocol == 'https:') {\n      scheme = \"wss://\";\n    }\n\n    // If a token variable is passed in, set the parameter in a cookie.\n    // This is used by nova-spiceproxy.\n    token = spice_query_var('token', null);\n    if (token) {\n      spice_set_cookie('token', token, 1)\n    }\n\n    password = spice_query_var('password', '');\n    path = spice_query_var('path', 'websockify');\n\n    if ((!host) || (!port)) {\n      console.log(\"must specify host and port in URL\");\n      return;\n    }\n\n    if (sc) {\n      sc.stop();\n    }\n\n    uri = scheme + host + \":\" + port + \"?token=\" + token;\n\n    try {\n      sc = new SpiceMainConn({uri: uri, screen_id: \"spice-screen\", dump_id: \"debug-div\",\n                  message_id: \"message-div\", password: password, onerror: spice_error, onagent: agent_connected});\n    }\n    catch (e) {\n      alert(e.toString());\n      disconnect();\n    }\n\n  }\n\n  function disconnect() {\n    console.log(\">> disconnect\");\n    if (sc) {\n      sc.stop();\n    }\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\n      var spice_xfer_area = document.getElementById('spice-xfer-area');\n      document.getElementById('spice-area').removeChild(spice_xfer_area);\n      document.getElementById('spice-area').removeEventListener('dragover', handle_file_dragover, false);\n      document.getElementById('spice-area').removeEventListener('drop', handle_file_drop, false);\n    }\n    console.log(\"<< disconnect\");\n  }\n\n  function agent_connected(sc) {\n    window.addEventListener('resize', handle_resize);\n    window.spice_connection = this;\n\n    resize_helper(this);\n\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\n      var spice_xfer_area = document.createElement(\"div\");\n      spice_xfer_area.setAttribute('id', 'spice-xfer-area');\n      document.getElementById('spice-area').addEventListener('dragover', handle_file_dragover, false);\n      document.getElementById('spice-area').addEventListener('drop', handle_file_drop, false);\n    } else {\n      console.log(\"File API is not supported\");\n    }\n  }\n\n  connect();\n});\n\n"
  ]
}